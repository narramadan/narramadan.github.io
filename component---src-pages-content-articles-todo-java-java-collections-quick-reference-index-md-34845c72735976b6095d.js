(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{"1cBy":function(e,a,t){"use strict";t.r(a),t.d(a,"_frontmatter",(function(){return r})),t.d(a,"default",(function(){return l}));t("rGqo"),t("yt8O"),t("Btvt"),t("RW0V"),t("91GP"),t("q1tI");var s=t("7ljp");var r={templateKey:"article",published:!1,displayComments:!0,showAuthorInfo:!1,showSideBar:!1,author:"narramadan",title:"Java Collections Quick Reference",description:"Quick reference post to get to know about or using Java Collections interfaces and their implementations.",date:"2020-01-24T23:46:37.121Z",updated:"2020-01-24T23:46:37.121Z",cover:"../../../images/blog-banners/java-collection-banner-1200x690.jpg",category:"java",tags:["java-collections","cheatsheets","featured"]},n=function(e){return function(a){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(s.mdx)("div",a)}},m=n("Seperator"),i=n("Todo"),c={_frontmatter:r};function l(e){var a=e.components,t=function(e,a){if(null==e)return{};var t,s,r={},n=Object.keys(e);for(s=0;s<n.length;s++)t=n[s],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,["components"]);return Object(s.mdx)("wrapper",Object.assign({},c,t,{components:a,mdxType:"MDXLayout"}),Object(s.mdx)("h2",null,"Introduction"),Object(s.mdx)("p",null,"JDK provides a powerful, high quality and high performance reusable data structures and algorithms in a so-called Java Collections Framework. This is a quick reference post to get to know about or using Java Collections interfaces and their implementations."),Object(s.mdx)("h2",null,"Looking for what collection class to use?"),Object(s.mdx)("p",null,"Follow the flowchart and summary table to select the best collection class for your requirement."),Object(s.mdx)("div",{className:"mermaid","data-processed":"true"},Object(s.mdx)("svg",Object.assign({parentName:"div"},{id:"mermaid-1580128732700",width:"100%",xmlns:"http://www.w3.org/2000/svg",style:{maxWidth:"2064.810546875px"},viewBox:"0 0 2064.810546875 2171.653076171875"}),Object(s.mdx)("style",{parentName:"svg"},"#mermaid-1580128732700 .label{font-family:'trebuchet ms', verdana, arial;font-family:var(--mermaid-font-family);color:#333}#mermaid-1580128732700 .label text{fill:#333}#mermaid-1580128732700 .node rect,#mermaid-1580128732700 .node circle,#mermaid-1580128732700 .node ellipse,#mermaid-1580128732700 .node polygon,#mermaid-1580128732700 .node path{fill:#ECECFF;stroke:#9370db;stroke-width:1px}#mermaid-1580128732700 .node .label{text-align:center}#mermaid-1580128732700 .node.clickable{cursor:pointer}#mermaid-1580128732700 .arrowheadPath{fill:#333}#mermaid-1580128732700 .edgePath .path{stroke:#333;stroke-width:1.5px}#mermaid-1580128732700 .edgeLabel{background-color:#e8e8e8;text-align:center}#mermaid-1580128732700 .cluster rect{fill:#ffffde;stroke:#aa3;stroke-width:1px}#mermaid-1580128732700 .cluster text{fill:#333}#mermaid-1580128732700 div.mermaidTooltip{position:absolute;text-align:center;max-width:200px;padding:2px;font-family:'trebuchet ms', verdana, arial;font-family:var(--mermaid-font-family);font-size:12px;background:#ffffde;border:1px solid #aa3;border-radius:2px;pointer-events:none;z-index:100}#mermaid-1580128732700 .actor{stroke:#ccf;fill:#ECECFF}#mermaid-1580128732700 text.actor{fill:#000;stroke:none}#mermaid-1580128732700 .actor-line{stroke:grey}#mermaid-1580128732700 .messageLine0{stroke-width:1.5;stroke-dasharray:'2 2';stroke:#333}#mermaid-1580128732700 .messageLine1{stroke-width:1.5;stroke-dasharray:'2 2';stroke:#333}#mermaid-1580128732700 #arrowhead{fill:#333}#mermaid-1580128732700 .sequenceNumber{fill:#fff}#mermaid-1580128732700 #sequencenumber{fill:#333}#mermaid-1580128732700 #crosshead path{fill:#333 !important;stroke:#333 !important}#mermaid-1580128732700 .messageText{fill:#333;stroke:none}#mermaid-1580128732700 .labelBox{stroke:#ccf;fill:#ECECFF}#mermaid-1580128732700 .labelText{fill:#000;stroke:none}#mermaid-1580128732700 .loopText{fill:#000;stroke:none}#mermaid-1580128732700 .loopLine{stroke-width:2;stroke-dasharray:'2 2';stroke:#ccf}#mermaid-1580128732700 .note{stroke:#aa3;fill:#fff5ad}#mermaid-1580128732700 .noteText{fill:black;stroke:none;font-family:'trebuchet ms', verdana, arial;font-family:var(--mermaid-font-family);font-size:14px}#mermaid-1580128732700 .activation0{fill:#f4f4f4;stroke:#666}#mermaid-1580128732700 .activation1{fill:#f4f4f4;stroke:#666}#mermaid-1580128732700 .activation2{fill:#f4f4f4;stroke:#666}#mermaid-1580128732700 .mermaid-main-font{font-family:\"trebuchet ms\", verdana, arial;font-family:var(--mermaid-font-family)}#mermaid-1580128732700 .section{stroke:none;opacity:0.2}#mermaid-1580128732700 .section0{fill:rgba(102,102,255,0.49)}#mermaid-1580128732700 .section2{fill:#fff400}#mermaid-1580128732700 .section1,#mermaid-1580128732700 .section3{fill:#fff;opacity:0.2}#mermaid-1580128732700 .sectionTitle0{fill:#333}#mermaid-1580128732700 .sectionTitle1{fill:#333}#mermaid-1580128732700 .sectionTitle2{fill:#333}#mermaid-1580128732700 .sectionTitle3{fill:#333}#mermaid-1580128732700 .sectionTitle{text-anchor:start;font-size:11px;text-height:14px;font-family:'trebuchet ms', verdana, arial;font-family:var(--mermaid-font-family)}#mermaid-1580128732700 .grid .tick{stroke:#d3d3d3;opacity:0.8;shape-rendering:crispEdges}#mermaid-1580128732700 .grid .tick text{font-family:'trebuchet ms', verdana, arial;font-family:var(--mermaid-font-family)}#mermaid-1580128732700 .grid path{stroke-width:0}#mermaid-1580128732700 .today{fill:none;stroke:red;stroke-width:2px}#mermaid-1580128732700 .task{stroke-width:2}#mermaid-1580128732700 .taskText{text-anchor:middle;font-family:'trebuchet ms', verdana, arial;font-family:var(--mermaid-font-family)}#mermaid-1580128732700 .taskText:not([font-size]){font-size:11px}#mermaid-1580128732700 .taskTextOutsideRight{fill:#000;text-anchor:start;font-size:11px;font-family:'trebuchet ms', verdana, arial;font-family:var(--mermaid-font-family)}#mermaid-1580128732700 .taskTextOutsideLeft{fill:#000;text-anchor:end;font-size:11px}#mermaid-1580128732700 .task.clickable{cursor:pointer}#mermaid-1580128732700 .taskText.clickable{cursor:pointer;fill:#003163 !important;font-weight:bold}#mermaid-1580128732700 .taskTextOutsideLeft.clickable{cursor:pointer;fill:#003163 !important;font-weight:bold}#mermaid-1580128732700 .taskTextOutsideRight.clickable{cursor:pointer;fill:#003163 !important;font-weight:bold}#mermaid-1580128732700 .taskText0,#mermaid-1580128732700 .taskText1,#mermaid-1580128732700 .taskText2,#mermaid-1580128732700 .taskText3{fill:#fff}#mermaid-1580128732700 .task0,#mermaid-1580128732700 .task1,#mermaid-1580128732700 .task2,#mermaid-1580128732700 .task3{fill:#8a90dd;stroke:#534fbc}#mermaid-1580128732700 .taskTextOutside0,#mermaid-1580128732700 .taskTextOutside2{fill:#000}#mermaid-1580128732700 .taskTextOutside1,#mermaid-1580128732700 .taskTextOutside3{fill:#000}#mermaid-1580128732700 .active0,#mermaid-1580128732700 .active1,#mermaid-1580128732700 .active2,#mermaid-1580128732700 .active3{fill:#bfc7ff;stroke:#534fbc}#mermaid-1580128732700 .activeText0,#mermaid-1580128732700 .activeText1,#mermaid-1580128732700 .activeText2,#mermaid-1580128732700 .activeText3{fill:#000 !important}#mermaid-1580128732700 .done0,#mermaid-1580128732700 .done1,#mermaid-1580128732700 .done2,#mermaid-1580128732700 .done3{stroke:grey;fill:#d3d3d3;stroke-width:2}#mermaid-1580128732700 .doneText0,#mermaid-1580128732700 .doneText1,#mermaid-1580128732700 .doneText2,#mermaid-1580128732700 .doneText3{fill:#000 !important}#mermaid-1580128732700 .crit0,#mermaid-1580128732700 .crit1,#mermaid-1580128732700 .crit2,#mermaid-1580128732700 .crit3{stroke:#f88;fill:red;stroke-width:2}#mermaid-1580128732700 .activeCrit0,#mermaid-1580128732700 .activeCrit1,#mermaid-1580128732700 .activeCrit2,#mermaid-1580128732700 .activeCrit3{stroke:#f88;fill:#bfc7ff;stroke-width:2}#mermaid-1580128732700 .doneCrit0,#mermaid-1580128732700 .doneCrit1,#mermaid-1580128732700 .doneCrit2,#mermaid-1580128732700 .doneCrit3{stroke:#f88;fill:#d3d3d3;stroke-width:2;cursor:pointer;shape-rendering:crispEdges}#mermaid-1580128732700 .milestone{transform:rotate(45deg) scale(0.8, 0.8)}#mermaid-1580128732700 .milestoneText{font-style:italic}#mermaid-1580128732700 .doneCritText0,#mermaid-1580128732700 .doneCritText1,#mermaid-1580128732700 .doneCritText2,#mermaid-1580128732700 .doneCritText3{fill:#000 !important}#mermaid-1580128732700 .activeCritText0,#mermaid-1580128732700 .activeCritText1,#mermaid-1580128732700 .activeCritText2,#mermaid-1580128732700 .activeCritText3{fill:#000 !important}#mermaid-1580128732700 .titleText{text-anchor:middle;font-size:18px;fill:#000;font-family:'trebuchet ms', verdana, arial;font-family:var(--mermaid-font-family)}#mermaid-1580128732700 g.classGroup text{fill:#9370db;stroke:none;font-family:'trebuchet ms', verdana, arial;font-family:var(--mermaid-font-family);font-size:10px}#mermaid-1580128732700 g.classGroup text .title{font-weight:bolder}#mermaid-1580128732700 g.clickable{cursor:pointer}#mermaid-1580128732700 g.classGroup rect{fill:#ECECFF;stroke:#9370db}#mermaid-1580128732700 g.classGroup line{stroke:#9370db;stroke-width:1}#mermaid-1580128732700 .classLabel .box{stroke:none;stroke-width:0;fill:#ECECFF;opacity:0.5}#mermaid-1580128732700 .classLabel .label{fill:#9370db;font-size:10px}#mermaid-1580128732700 .relation{stroke:#9370db;stroke-width:1;fill:none}#mermaid-1580128732700 .dashed-line{stroke-dasharray:3}#mermaid-1580128732700 #compositionStart{fill:#9370db;stroke:#9370db;stroke-width:1}#mermaid-1580128732700 #compositionEnd{fill:#9370db;stroke:#9370db;stroke-width:1}#mermaid-1580128732700 #aggregationStart{fill:#ECECFF;stroke:#9370db;stroke-width:1}#mermaid-1580128732700 #aggregationEnd{fill:#ECECFF;stroke:#9370db;stroke-width:1}#mermaid-1580128732700 #dependencyStart{fill:#9370db;stroke:#9370db;stroke-width:1}#mermaid-1580128732700 #dependencyEnd{fill:#9370db;stroke:#9370db;stroke-width:1}#mermaid-1580128732700 #extensionStart{fill:#9370db;stroke:#9370db;stroke-width:1}#mermaid-1580128732700 #extensionEnd{fill:#9370db;stroke:#9370db;stroke-width:1}#mermaid-1580128732700 .commit-id,#mermaid-1580128732700 .commit-msg,#mermaid-1580128732700 .branch-label{fill:lightgrey;color:lightgrey;font-family:'trebuchet ms', verdana, arial;font-family:var(--mermaid-font-family)}#mermaid-1580128732700 .pieTitleText{text-anchor:middle;font-size:25px;fill:#000;font-family:'trebuchet ms', verdana, arial;font-family:var(--mermaid-font-family)}#mermaid-1580128732700 .slice{font-family:'trebuchet ms', verdana, arial;font-family:var(--mermaid-font-family)}#mermaid-1580128732700 g.stateGroup text{fill:#9370db;stroke:none;font-size:10px;font-family:'trebuchet ms', verdana, arial;font-family:var(--mermaid-font-family)}#mermaid-1580128732700 g.stateGroup text{fill:#9370db;stroke:none;font-size:10px}#mermaid-1580128732700 g.stateGroup .state-title{font-weight:bolder;fill:#000}#mermaid-1580128732700 g.stateGroup rect{fill:#ECECFF;stroke:#9370db}#mermaid-1580128732700 g.stateGroup line{stroke:#9370db;stroke-width:1}#mermaid-1580128732700 .transition{stroke:#9370db;stroke-width:1;fill:none}#mermaid-1580128732700 .stateGroup .composit{fill:white;border-bottom:1px}#mermaid-1580128732700 .stateGroup .alt-composit{fill:#e0e0e0;border-bottom:1px}#mermaid-1580128732700 .state-note{stroke:#aa3;fill:#fff5ad}#mermaid-1580128732700 .state-note text{fill:black;stroke:none;font-size:10px}#mermaid-1580128732700 .stateLabel .box{stroke:none;stroke-width:0;fill:#ECECFF;opacity:0.5}#mermaid-1580128732700 .stateLabel text{fill:#000;font-size:10px;font-weight:bold;font-family:'trebuchet ms', verdana, arial;font-family:var(--mermaid-font-family)}:root{--mermaid-font-family: '\"trebuchet ms\", verdana, arial';--mermaid-font-family: \"Comic Sans MS\", \"Comic Sans\", cursive}\n\n#mermaid-1580128732700 .node rect { fill: cornflowerblue; }\n:root { --mermaid-font-family: \"trebuchet ms\", verdana, arial;}\n#mermaid-1580128732700 .backfill > * { fill:#f96 !important; }"),Object(s.mdx)("style",{parentName:"svg"},'#mermaid-1580128732700 {\n    color: rgb(0, 0, 0);\n    font: normal normal 400 normal 16px / normal "trebuchet ms", verdana, arial;\n  }'),Object(s.mdx)("g",Object.assign({parentName:"svg"},{transform:"translate(0, 0)"}),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"output"}),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"clusters"})),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgePaths"}),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgePath",style:{opacity:"1"}}),Object(s.mdx)("path",Object.assign({parentName:"g"},{className:"path",d:"M877.7187538146973,47L877.7187538146973,72L878.2187538146973,97.50000152587907",markerEnd:"url(#arrowhead103)",style:{fill:"none"}})),Object(s.mdx)("defs",{parentName:"g"},Object(s.mdx)("marker",Object.assign({parentName:"defs"},{id:"arrowhead103",viewBox:"0 0 10 10",refX:"9",refY:"5",markerUnits:"strokeWidth",markerWidth:"8",markerHeight:"6",orient:"auto"}),Object(s.mdx)("path",Object.assign({parentName:"marker"},{d:"M 0 0 L 10 5 L 0 10 z",className:"arrowheadPath",style:{strokeWidth:"1",strokeDasharray:"1, 0"}}))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgePath",style:{opacity:"1"}}),Object(s.mdx)("path",Object.assign({parentName:"g"},{className:"path",d:"M810.5516978609801,199.31419252040394L405.13672256469727,300.9812469482422L405.63672256469727,359.1843719482422",markerEnd:"url(#arrowhead104)",style:{fill:"none"}})),Object(s.mdx)("defs",{parentName:"g"},Object(s.mdx)("marker",Object.assign({parentName:"defs"},{id:"arrowhead104",viewBox:"0 0 10 10",refX:"9",refY:"5",markerUnits:"strokeWidth",markerWidth:"8",markerHeight:"6",orient:"auto"}),Object(s.mdx)("path",Object.assign({parentName:"marker"},{d:"M 0 0 L 10 5 L 0 10 z",className:"arrowheadPath",style:{strokeWidth:"1",strokeDasharray:"1, 0"}}))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgePath",style:{opacity:"1"}}),Object(s.mdx)("path",Object.assign({parentName:"g"},{className:"path",d:"M944.2465941463186,200.95341119425794L1298.457820892334,300.9812469482422L1298.9578208923335,335.98124694824213",markerEnd:"url(#arrowhead105)",style:{fill:"none"}})),Object(s.mdx)("defs",{parentName:"g"},Object(s.mdx)("marker",Object.assign({parentName:"defs"},{id:"arrowhead105",viewBox:"0 0 10 10",refX:"9",refY:"5",markerUnits:"strokeWidth",markerWidth:"8",markerHeight:"6",orient:"auto"}),Object(s.mdx)("path",Object.assign({parentName:"marker"},{d:"M 0 0 L 10 5 L 0 10 z",className:"arrowheadPath",style:{strokeWidth:"1",strokeDasharray:"1, 0"}}))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgePath",style:{opacity:"1"}}),Object(s.mdx)("path",Object.assign({parentName:"g"},{className:"path",d:"M362.913893586449,450.82873046999396L187.0113296508789,550.7546844482422L187.5113296508789,585.7546905517577",markerEnd:"url(#arrowhead106)",style:{fill:"none"}})),Object(s.mdx)("defs",{parentName:"g"},Object(s.mdx)("marker",Object.assign({parentName:"defs"},{id:"arrowhead106",viewBox:"0 0 10 10",refX:"9",refY:"5",markerUnits:"strokeWidth",markerWidth:"8",markerHeight:"6",orient:"auto"}),Object(s.mdx)("path",Object.assign({parentName:"marker"},{d:"M 0 0 L 10 5 L 0 10 z",className:"arrowheadPath",style:{strokeWidth:"1",strokeDasharray:"1, 0"}}))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgePath",style:{opacity:"1"}}),Object(s.mdx)("path",Object.assign({parentName:"g"},{className:"path",d:"M449.7881768283767,449.40010518456285L644.5382881164551,550.7546844482422L645.0382881164551,622.9007904052736",markerEnd:"url(#arrowhead107)",style:{fill:"none"}})),Object(s.mdx)("defs",{parentName:"g"},Object(s.mdx)("marker",Object.assign({parentName:"defs"},{id:"arrowhead107",viewBox:"0 0 10 10",refX:"9",refY:"5",markerUnits:"strokeWidth",markerWidth:"8",markerHeight:"6",orient:"auto"}),Object(s.mdx)("path",Object.assign({parentName:"marker"},{d:"M 0 0 L 10 5 L 0 10 z",className:"arrowheadPath",style:{strokeWidth:"1",strokeDasharray:"1, 0"}}))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgePath",style:{opacity:"1"}}),Object(s.mdx)("path",Object.assign({parentName:"g"},{className:"path",d:"M133.2998167047987,789.4072401056777L68.4375,877.6187591552734L68.4375,1019.3289184570312",markerEnd:"url(#arrowhead108)",style:{fill:"none"}})),Object(s.mdx)("defs",{parentName:"g"},Object(s.mdx)("marker",Object.assign({parentName:"defs"},{id:"arrowhead108",viewBox:"0 0 10 10",refX:"9",refY:"5",markerUnits:"strokeWidth",markerWidth:"8",markerHeight:"6",orient:"auto"}),Object(s.mdx)("path",Object.assign({parentName:"marker"},{d:"M 0 0 L 10 5 L 0 10 z",className:"arrowheadPath",style:{strokeWidth:"1",strokeDasharray:"1, 0"}}))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgePath",style:{opacity:"1"}}),Object(s.mdx)("path",Object.assign({parentName:"g"},{className:"path",d:"M241.72283746431958,789.4072330312858L305.5851593017578,877.6187591552734L306.0851593017578,912.6187622070316",markerEnd:"url(#arrowhead109)",style:{fill:"none"}})),Object(s.mdx)("defs",{parentName:"g"},Object(s.mdx)("marker",Object.assign({parentName:"defs"},{id:"arrowhead109",viewBox:"0 0 10 10",refX:"9",refY:"5",markerUnits:"strokeWidth",markerWidth:"8",markerHeight:"6",orient:"auto"}),Object(s.mdx)("path",Object.assign({parentName:"marker"},{d:"M 0 0 L 10 5 L 0 10 z",className:"arrowheadPath",style:{strokeWidth:"1",strokeDasharray:"1, 0"}}))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgePath",style:{opacity:"1"}}),Object(s.mdx)("path",Object.assign({parentName:"g"},{className:"path",d:"M263.9275237859253,1123.8814391911988L225.2062530517578,1200.039077758789L225.2062530517578,1333.1359558105469",markerEnd:"url(#arrowhead110)",style:{fill:"none"}})),Object(s.mdx)("defs",{parentName:"g"},Object(s.mdx)("marker",Object.assign({parentName:"defs"},{id:"arrowhead110",viewBox:"0 0 10 10",refX:"9",refY:"5",markerUnits:"strokeWidth",markerWidth:"8",markerHeight:"6",orient:"auto"}),Object(s.mdx)("path",Object.assign({parentName:"marker"},{d:"M 0 0 L 10 5 L 0 10 z",className:"arrowheadPath",style:{strokeWidth:"1",strokeDasharray:"1, 0"}}))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgePath",style:{opacity:"1"}}),Object(s.mdx)("path",Object.assign({parentName:"g"},{className:"path",d:"M363.926987183795,1108.1972407214787L440.9839897155762,1200.039077758789L440.9839897155762,1333.1359558105469",markerEnd:"url(#arrowhead111)",style:{fill:"none"}})),Object(s.mdx)("defs",{parentName:"g"},Object(s.mdx)("marker",Object.assign({parentName:"defs"},{id:"arrowhead111",viewBox:"0 0 10 10",refX:"9",refY:"5",markerUnits:"strokeWidth",markerWidth:"8",markerHeight:"6",orient:"auto"}),Object(s.mdx)("path",Object.assign({parentName:"marker"},{d:"M 0 0 L 10 5 L 0 10 z",className:"arrowheadPath",style:{strokeWidth:"1",strokeDasharray:"1, 0"}}))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgePath",style:{opacity:"1"}}),Object(s.mdx)("path",Object.assign({parentName:"g"},{className:"path",d:"M610.7861225271603,772.2204937124632L547.2406311035156,877.6187591552734L547.2406311035156,1019.3289184570312",markerEnd:"url(#arrowhead112)",style:{fill:"none"}})),Object(s.mdx)("defs",{parentName:"g"},Object(s.mdx)("marker",Object.assign({parentName:"defs"},{id:"arrowhead112",viewBox:"0 0 10 10",refX:"9",refY:"5",markerUnits:"strokeWidth",markerWidth:"8",markerHeight:"6",orient:"auto"}),Object(s.mdx)("path",Object.assign({parentName:"marker"},{d:"M 0 0 L 10 5 L 0 10 z",className:"arrowheadPath",style:{strokeWidth:"1",strokeDasharray:"1, 0"}}))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgePath",style:{opacity:"1"}}),Object(s.mdx)("path",Object.assign({parentName:"g"},{className:"path",d:"M679.2904559834265,772.2204975383024L741.8359451293945,877.6187591552734L742.3359451293946,959.6789184570321",markerEnd:"url(#arrowhead113)",style:{fill:"none"}})),Object(s.mdx)("defs",{parentName:"g"},Object(s.mdx)("marker",Object.assign({parentName:"defs"},{id:"arrowhead113",viewBox:"0 0 10 10",refX:"9",refY:"5",markerUnits:"strokeWidth",markerWidth:"8",markerHeight:"6",orient:"auto"}),Object(s.mdx)("path",Object.assign({parentName:"marker"},{d:"M 0 0 L 10 5 L 0 10 z",className:"arrowheadPath",style:{strokeWidth:"1",strokeDasharray:"1, 0"}}))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgePath",style:{opacity:"1"}}),Object(s.mdx)("path",Object.assign({parentName:"g"},{className:"path",d:"M705.976572297162,1082.6195456247974L606.4371147155762,1200.039077758789L606.4371147155762,1333.1359558105469",markerEnd:"url(#arrowhead114)",style:{fill:"none"}})),Object(s.mdx)("defs",{parentName:"g"},Object(s.mdx)("marker",Object.assign({parentName:"defs"},{id:"arrowhead114",viewBox:"0 0 10 10",refX:"9",refY:"5",markerUnits:"strokeWidth",markerWidth:"8",markerHeight:"6",orient:"auto"}),Object(s.mdx)("path",Object.assign({parentName:"marker"},{d:"M 0 0 L 10 5 L 0 10 z",className:"arrowheadPath",style:{strokeWidth:"1",strokeDasharray:"1, 0"}}))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgePath",style:{opacity:"1"}}),Object(s.mdx)("path",Object.assign({parentName:"g"},{className:"path",d:"M772.898222931718,1088.41663760295L842.2062568664551,1200.039077758789L842.2062568664551,1333.1359558105469",markerEnd:"url(#arrowhead115)",style:{fill:"none"}})),Object(s.mdx)("defs",{parentName:"g"},Object(s.mdx)("marker",Object.assign({parentName:"defs"},{id:"arrowhead115",viewBox:"0 0 10 10",refX:"9",refY:"5",markerUnits:"strokeWidth",markerWidth:"8",markerHeight:"6",orient:"auto"}),Object(s.mdx)("path",Object.assign({parentName:"marker"},{d:"M 0 0 L 10 5 L 0 10 z",className:"arrowheadPath",style:{strokeWidth:"1",strokeDasharray:"1, 0"}}))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgePath",style:{opacity:"1"}}),Object(s.mdx)("path",Object.assign({parentName:"g"},{className:"path",d:"M1235.2366779182219,453.03354147412995L1000.0234451293945,550.7546844482422L1000.5234451293945,626.261721801759",markerEnd:"url(#arrowhead116)",style:{fill:"none"}})),Object(s.mdx)("defs",{parentName:"g"},Object(s.mdx)("marker",Object.assign({parentName:"defs"},{id:"arrowhead116",viewBox:"0 0 10 10",refX:"9",refY:"5",markerUnits:"strokeWidth",markerWidth:"8",markerHeight:"6",orient:"auto"}),Object(s.mdx)("path",Object.assign({parentName:"marker"},{d:"M 0 0 L 10 5 L 0 10 z",className:"arrowheadPath",style:{strokeWidth:"1",strokeDasharray:"1, 0"}}))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgePath",style:{opacity:"1"}}),Object(s.mdx)("path",Object.assign({parentName:"g"},{className:"path",d:"M1356.6630025753448,459.0495027652316L1518.967975616455,550.7546844482422L1519.4679756164542,635.0367218017562",markerEnd:"url(#arrowhead117)",style:{fill:"none"}})),Object(s.mdx)("defs",{parentName:"g"},Object(s.mdx)("marker",Object.assign({parentName:"defs"},{id:"arrowhead117",viewBox:"0 0 10 10",refX:"9",refY:"5",markerUnits:"strokeWidth",markerWidth:"8",markerHeight:"6",orient:"auto"}),Object(s.mdx)("path",Object.assign({parentName:"marker"},{d:"M 0 0 L 10 5 L 0 10 z",className:"arrowheadPath",style:{strokeWidth:"1",strokeDasharray:"1, 0"}}))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgePath",style:{opacity:"1"}}),Object(s.mdx)("path",Object.assign({parentName:"g"},{className:"path",d:"M969.0972877109748,771.6855643833372L909.9156341552734,877.6187591552734L909.9156341552734,1019.3289184570312",markerEnd:"url(#arrowhead118)",style:{fill:"none"}})),Object(s.mdx)("defs",{parentName:"g"},Object(s.mdx)("marker",Object.assign({parentName:"defs"},{id:"arrowhead118",viewBox:"0 0 10 10",refX:"9",refY:"5",markerUnits:"strokeWidth",markerWidth:"8",markerHeight:"6",orient:"auto"}),Object(s.mdx)("path",Object.assign({parentName:"marker"},{d:"M 0 0 L 10 5 L 0 10 z",className:"arrowheadPath",style:{strokeWidth:"1",strokeDasharray:"1, 0"}}))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgePath",style:{opacity:"1"}}),Object(s.mdx)("path",Object.assign({parentName:"g"},{className:"path",d:"M1031.9496003786312,771.6855604490055L1090.1312561035156,877.6187591552734L1090.6312561035156,947.5429870605465",markerEnd:"url(#arrowhead119)",style:{fill:"none"}})),Object(s.mdx)("defs",{parentName:"g"},Object(s.mdx)("marker",Object.assign({parentName:"defs"},{id:"arrowhead119",viewBox:"0 0 10 10",refX:"9",refY:"5",markerUnits:"strokeWidth",markerWidth:"8",markerHeight:"6",orient:"auto"}),Object(s.mdx)("path",Object.assign({parentName:"marker"},{d:"M 0 0 L 10 5 L 0 10 z",className:"arrowheadPath",style:{strokeWidth:"1",strokeDasharray:"1, 0"}}))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgePath",style:{opacity:"1"}}),Object(s.mdx)("path",Object.assign({parentName:"g"},{className:"path",d:"M1055.4123304575483,1095.8959303110632L989.7609443664551,1200.039077758789L989.7609443664551,1333.1359558105469",markerEnd:"url(#arrowhead120)",style:{fill:"none"}})),Object(s.mdx)("defs",{parentName:"g"},Object(s.mdx)("marker",Object.assign({parentName:"defs"},{id:"arrowhead120",viewBox:"0 0 10 10",refX:"9",refY:"5",markerUnits:"strokeWidth",markerWidth:"8",markerHeight:"6",orient:"auto"}),Object(s.mdx)("path",Object.assign({parentName:"marker"},{d:"M 0 0 L 10 5 L 0 10 z",className:"arrowheadPath",style:{strokeWidth:"1",strokeDasharray:"1, 0"}}))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgePath",style:{opacity:"1"}}),Object(s.mdx)("path",Object.assign({parentName:"g"},{className:"path",d:"M1119.050461707425,1102.695656456638L1162.4320373535156,1200.039077758789L1162.4320373535156,1333.1359558105469",markerEnd:"url(#arrowhead121)",style:{fill:"none"}})),Object(s.mdx)("defs",{parentName:"g"},Object(s.mdx)("marker",Object.assign({parentName:"defs"},{id:"arrowhead121",viewBox:"0 0 10 10",refX:"9",refY:"5",markerUnits:"strokeWidth",markerWidth:"8",markerHeight:"6",orient:"auto"}),Object(s.mdx)("path",Object.assign({parentName:"marker"},{d:"M 0 0 L 10 5 L 0 10 z",className:"arrowheadPath",style:{strokeWidth:"1",strokeDasharray:"1, 0"}}))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgePath",style:{opacity:"1"}}),Object(s.mdx)("path",Object.assign({parentName:"g"},{className:"path",d:"M1477.5498854066248,752.4186315919274L1337.4039115905762,877.6187591552734L1337.9039115905766,947.3742309570326",markerEnd:"url(#arrowhead122)",style:{fill:"none"}})),Object(s.mdx)("defs",{parentName:"g"},Object(s.mdx)("marker",Object.assign({parentName:"defs"},{id:"arrowhead122",viewBox:"0 0 10 10",refX:"9",refY:"5",markerUnits:"strokeWidth",markerWidth:"8",markerHeight:"6",orient:"auto"}),Object(s.mdx)("path",Object.assign({parentName:"marker"},{d:"M 0 0 L 10 5 L 0 10 z",className:"arrowheadPath",style:{strokeWidth:"1",strokeDasharray:"1, 0"}}))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgePath",style:{opacity:"1"}}),Object(s.mdx)("path",Object.assign({parentName:"g"},{className:"path",d:"M1552.3655894690517,761.4391048974014L1633.967975616455,877.6187591552734L1634.4679756164546,951.2836090087897",markerEnd:"url(#arrowhead123)",style:{fill:"none"}})),Object(s.mdx)("defs",{parentName:"g"},Object(s.mdx)("marker",Object.assign({parentName:"defs"},{id:"arrowhead123",viewBox:"0 0 10 10",refX:"9",refY:"5",markerUnits:"strokeWidth",markerWidth:"8",markerHeight:"6",orient:"auto"}),Object(s.mdx)("path",Object.assign({parentName:"marker"},{d:"M 0 0 L 10 5 L 0 10 z",className:"arrowheadPath",style:{strokeWidth:"1",strokeDasharray:"1, 0"}}))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgePath",style:{opacity:"1"}}),Object(s.mdx)("path",Object.assign({parentName:"g"},{className:"path",d:"M1313.337638365768,1106.7173327322234L1278.6351623535156,1200.039077758789L1278.6351623535156,1333.1359558105469",markerEnd:"url(#arrowhead124)",style:{fill:"none"}})),Object(s.mdx)("defs",{parentName:"g"},Object(s.mdx)("marker",Object.assign({parentName:"defs"},{id:"arrowhead124",viewBox:"0 0 10 10",refX:"9",refY:"5",markerUnits:"strokeWidth",markerWidth:"8",markerHeight:"6",orient:"auto"}),Object(s.mdx)("path",Object.assign({parentName:"marker"},{d:"M 0 0 L 10 5 L 0 10 z",className:"arrowheadPath",style:{strokeWidth:"1",strokeDasharray:"1, 0"}}))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgePath",style:{opacity:"1"}}),Object(s.mdx)("path",Object.assign({parentName:"g"},{className:"path",d:"M1368.6445674387073,1100.5429470571437L1418.3609428405762,1200.039077758789L1418.3609428405762,1333.1359558105469",markerEnd:"url(#arrowhead125)",style:{fill:"none"}})),Object(s.mdx)("defs",{parentName:"g"},Object(s.mdx)("marker",Object.assign({parentName:"defs"},{id:"arrowhead125",viewBox:"0 0 10 10",refX:"9",refY:"5",markerUnits:"strokeWidth",markerWidth:"8",markerHeight:"6",orient:"auto"}),Object(s.mdx)("path",Object.assign({parentName:"marker"},{d:"M 0 0 L 10 5 L 0 10 z",className:"arrowheadPath",style:{strokeWidth:"1",strokeDasharray:"1, 0"}}))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgePath",style:{opacity:"1"}}),Object(s.mdx)("path",Object.assign({parentName:"g"},{className:"path",d:"M1592.397272565427,1085.3035279060036L1486.4468803405762,1200.039077758789L1486.4468803405762,1352.6359558105469L1486.4468803405762,1505.2328338623047L1486.4468803405762,1652.2539291381836L1486.4468803405762,1799.2750244140625L1550.317851965541,1925.2140884399414",markerEnd:"url(#arrowhead126)",style:{fill:"none"}})),Object(s.mdx)("defs",{parentName:"g"},Object(s.mdx)("marker",Object.assign({parentName:"defs"},{id:"arrowhead126",viewBox:"0 0 10 10",refX:"9",refY:"5",markerUnits:"strokeWidth",markerWidth:"8",markerHeight:"6",orient:"auto"}),Object(s.mdx)("path",Object.assign({parentName:"marker"},{d:"M 0 0 L 10 5 L 0 10 z",className:"arrowheadPath",style:{strokeWidth:"1",strokeDasharray:"1, 0"}}))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgePath",style:{opacity:"1"}}),Object(s.mdx)("path",Object.assign({parentName:"g"},{className:"path",d:"M1662.8149271733469,1099.027282451898L1710.516414642334,1200.039077758789L1711.016414642333,1235.0390808105462",markerEnd:"url(#arrowhead127)",style:{fill:"none"}})),Object(s.mdx)("defs",{parentName:"g"},Object(s.mdx)("marker",Object.assign({parentName:"defs"},{id:"arrowhead127",viewBox:"0 0 10 10",refX:"9",refY:"5",markerUnits:"strokeWidth",markerWidth:"8",markerHeight:"6",orient:"auto"}),Object(s.mdx)("path",Object.assign({parentName:"marker"},{d:"M 0 0 L 10 5 L 0 10 z",className:"arrowheadPath",style:{strokeWidth:"1",strokeDasharray:"1, 0"}}))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgePath",style:{opacity:"1"}}),Object(s.mdx)("path",Object.assign({parentName:"g"},{className:"path",d:"M1749.4993126413242,1432.7499267080393L1784.2769622802734,1505.2328338623047L1784.2769622802734,1652.2539291381836L1784.2769622802734,1799.2750244140625L1784.2769622802734,1944.7140884399414L1784.2769622802734,2090.1531524658203L1793.6681298149956,2124.6531524658203",markerEnd:"url(#arrowhead128)",style:{fill:"none"}})),Object(s.mdx)("defs",{parentName:"g"},Object(s.mdx)("marker",Object.assign({parentName:"defs"},{id:"arrowhead128",viewBox:"0 0 10 10",refX:"9",refY:"5",markerUnits:"strokeWidth",markerWidth:"8",markerHeight:"6",orient:"auto"}),Object(s.mdx)("path",Object.assign({parentName:"marker"},{d:"M 0 0 L 10 5 L 0 10 z",className:"arrowheadPath",style:{strokeWidth:"1",strokeDasharray:"1, 0"}}))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgePath",style:{opacity:"1"}}),Object(s.mdx)("path",Object.assign({parentName:"g"},{className:"path",d:"M1672.5335146544583,1432.7499308226747L1636.7558670043945,1505.2328338623047L1637.2558670043925,1540.23283538818",markerEnd:"url(#arrowhead129)",style:{fill:"none"}})),Object(s.mdx)("defs",{parentName:"g"},Object(s.mdx)("marker",Object.assign({parentName:"defs"},{id:"arrowhead129",viewBox:"0 0 10 10",refX:"9",refY:"5",markerUnits:"strokeWidth",markerWidth:"8",markerHeight:"6",orient:"auto"}),Object(s.mdx)("path",Object.assign({parentName:"marker"},{d:"M 0 0 L 10 5 L 0 10 z",className:"arrowheadPath",style:{strokeWidth:"1",strokeDasharray:"1, 0"}}))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgePath",style:{opacity:"1"}}),Object(s.mdx)("path",Object.assign({parentName:"g"},{className:"path",d:"M1637.2558670043957,1765.2750198364258L1636.7558670043945,1799.2750244140625L1570.4707954651149,1925.2140884399414",markerEnd:"url(#arrowhead130)",style:{fill:"none"}})),Object(s.mdx)("defs",{parentName:"g"},Object(s.mdx)("marker",Object.assign({parentName:"defs"},{id:"arrowhead130",viewBox:"0 0 10 10",refX:"9",refY:"5",markerUnits:"strokeWidth",markerWidth:"8",markerHeight:"6",orient:"auto"}),Object(s.mdx)("path",Object.assign({parentName:"marker"},{d:"M 0 0 L 10 5 L 0 10 z",className:"arrowheadPath",style:{strokeWidth:"1",strokeDasharray:"1, 0"}}))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgePath",style:{opacity:"1"}}),Object(s.mdx)("path",Object.assign({parentName:"g"},{className:"path",d:"M1713.5093800713591,1689.021506769463L1945.871494293213,1799.2750244140625L1946.3714942932115,1834.2750259399427",markerEnd:"url(#arrowhead131)",style:{fill:"none"}})),Object(s.mdx)("defs",{parentName:"g"},Object(s.mdx)("marker",Object.assign({parentName:"defs"},{id:"arrowhead131",viewBox:"0 0 10 10",refX:"9",refY:"5",markerUnits:"strokeWidth",markerWidth:"8",markerHeight:"6",orient:"auto"}),Object(s.mdx)("path",Object.assign({parentName:"marker"},{d:"M 0 0 L 10 5 L 0 10 z",className:"arrowheadPath",style:{strokeWidth:"1",strokeDasharray:"1, 0"}}))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgePath",style:{opacity:"1"}}),Object(s.mdx)("path",Object.assign({parentName:"g"},{className:"path",d:"M1908.9851170177633,2018.7667736644903L1871.945713043213,2090.1531524658203L1825.3262898127239,2124.6531524658203",markerEnd:"url(#arrowhead132)",style:{fill:"none"}})),Object(s.mdx)("defs",{parentName:"g"},Object(s.mdx)("marker",Object.assign({parentName:"defs"},{id:"arrowhead132",viewBox:"0 0 10 10",refX:"9",refY:"5",markerUnits:"strokeWidth",markerWidth:"8",markerHeight:"6",orient:"auto"}),Object(s.mdx)("path",Object.assign({parentName:"marker"},{d:"M 0 0 L 10 5 L 0 10 z",className:"arrowheadPath",style:{strokeWidth:"1",strokeDasharray:"1, 0"}}))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgePath",style:{opacity:"1"}}),Object(s.mdx)("path",Object.assign({parentName:"g"},{className:"path",d:"M1959.99665300491,2042.527989176491L1966.234775543213,2090.1531524658203L1966.234775543213,2124.6531524658203",markerEnd:"url(#arrowhead133)",style:{fill:"none"}})),Object(s.mdx)("defs",{parentName:"g"},Object(s.mdx)("marker",Object.assign({parentName:"defs"},{id:"arrowhead133",viewBox:"0 0 10 10",refX:"9",refY:"5",markerUnits:"strokeWidth",markerWidth:"8",markerHeight:"6",orient:"auto"}),Object(s.mdx)("path",Object.assign({parentName:"marker"},{d:"M 0 0 L 10 5 L 0 10 z",className:"arrowheadPath",style:{strokeWidth:"1",strokeDasharray:"1, 0"}})))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgeLabels"}),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgeLabel",transform:"",style:{opacity:"1"}}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(0,0)",className:"label"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"0",height:"0"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),Object(s.mdx)("span",Object.assign({parentName:"div"},{className:"edgeLabel"})))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgeLabel",transform:"translate(405.13672256469727,300.9812469482422)",style:{opacity:"1"}}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-16.921875,-9.5)",className:"label"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"33.84375",height:"19"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),Object(s.mdx)("span",Object.assign({parentName:"div"},{className:"edgeLabel"}),"Pairs"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgeLabel",transform:"translate(1298.457820892334,300.9812469482422)",style:{opacity:"1"}}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-41.0859375,-9.5)",className:"label"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"82.171875",height:"19"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),Object(s.mdx)("span",Object.assign({parentName:"div"},{className:"edgeLabel"}),"Values Only"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgeLabel",transform:"translate(187.0113296508789,550.7546844482422)",style:{opacity:"1"}}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-9.3984375,-9.5)",className:"label"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"18.796875",height:"19"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),Object(s.mdx)("span",Object.assign({parentName:"div"},{className:"edgeLabel"}),"No"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgeLabel",transform:"translate(644.5382881164551,550.7546844482422)",style:{opacity:"1"}}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-11.328125,-9.5)",className:"label"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"22.65625",height:"19"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),Object(s.mdx)("span",Object.assign({parentName:"div"},{className:"edgeLabel"}),"Yes"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgeLabel",transform:"translate(68.4375,877.6187591552734)",style:{opacity:"1"}}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-11.328125,-9.5)",className:"label"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"22.65625",height:"19"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),Object(s.mdx)("span",Object.assign({parentName:"div"},{className:"edgeLabel"}),"Yes"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgeLabel",transform:"translate(305.5851593017578,877.6187591552734)",style:{opacity:"1"}}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-9.3984375,-9.5)",className:"label"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"18.796875",height:"19"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),Object(s.mdx)("span",Object.assign({parentName:"div"},{className:"edgeLabel"}),"No"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgeLabel",transform:"translate(225.2062530517578,1200.039077758789)",style:{opacity:"1"}}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-11.328125,-9.5)",className:"label"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"22.65625",height:"19"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),Object(s.mdx)("span",Object.assign({parentName:"div"},{className:"edgeLabel"}),"Yes"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgeLabel",transform:"translate(440.9839897155762,1200.039077758789)",style:{opacity:"1"}}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-9.3984375,-9.5)",className:"label"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"18.796875",height:"19"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),Object(s.mdx)("span",Object.assign({parentName:"div"},{className:"edgeLabel"}),"No"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgeLabel",transform:"translate(547.2406311035156,877.6187591552734)",style:{opacity:"1"}}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-54.265625,-9.5)",className:"label"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"108.53125",height:"19"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),Object(s.mdx)("span",Object.assign({parentName:"div"},{className:"edgeLabel"}),"Insertion Order"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgeLabel",transform:"translate(741.8359451293945,877.6187591552734)",style:{opacity:"1"}}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-38.3203125,-9.5)",className:"label"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"76.640625",height:"19"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),Object(s.mdx)("span",Object.assign({parentName:"div"},{className:"edgeLabel"}),"Key Sorted"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgeLabel",transform:"translate(606.4371147155762,1200.039077758789)",style:{opacity:"1"}}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-11.328125,-9.5)",className:"label"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"22.65625",height:"19"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),Object(s.mdx)("span",Object.assign({parentName:"div"},{className:"edgeLabel"}),"Yes"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgeLabel",transform:"translate(842.2062568664551,1200.039077758789)",style:{opacity:"1"}}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-9.3984375,-9.5)",className:"label"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"18.796875",height:"19"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),Object(s.mdx)("span",Object.assign({parentName:"div"},{className:"edgeLabel"}),"No"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgeLabel",transform:"translate(1000.0234451293945,550.7546844482422)",style:{opacity:"1"}}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-9.3984375,-9.5)",className:"label"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"18.796875",height:"19"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),Object(s.mdx)("span",Object.assign({parentName:"div"},{className:"edgeLabel"}),"No"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgeLabel",transform:"translate(1518.967975616455,550.7546844482422)",style:{opacity:"1"}}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-11.328125,-9.5)",className:"label"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"22.65625",height:"19"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),Object(s.mdx)("span",Object.assign({parentName:"div"},{className:"edgeLabel"}),"Yes"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgeLabel",transform:"translate(909.9156341552734,877.6187591552734)",style:{opacity:"1"}}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-9.3984375,-9.5)",className:"label"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"18.796875",height:"19"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),Object(s.mdx)("span",Object.assign({parentName:"div"},{className:"edgeLabel"}),"No"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgeLabel",transform:"translate(1090.1312561035156,877.6187591552734)",style:{opacity:"1"}}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-11.328125,-9.5)",className:"label"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"22.65625",height:"19"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),Object(s.mdx)("span",Object.assign({parentName:"div"},{className:"edgeLabel"}),"Yes"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgeLabel",transform:"translate(989.7609443664551,1200.039077758789)",style:{opacity:"1"}}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-54.265625,-9.5)",className:"label"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"108.53125",height:"19"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),Object(s.mdx)("span",Object.assign({parentName:"div"},{className:"edgeLabel"}),"Insertion Order"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgeLabel",transform:"translate(1162.4320373535156,1200.039077758789)",style:{opacity:"1"}}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-45.0234375,-9.5)",className:"label"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"90.046875",height:"19"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),Object(s.mdx)("span",Object.assign({parentName:"div"},{className:"edgeLabel"}),"Value Sorted"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgeLabel",transform:"translate(1337.4039115905762,877.6187591552734)",style:{opacity:"1"}}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-11.328125,-9.5)",className:"label"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"22.65625",height:"19"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),Object(s.mdx)("span",Object.assign({parentName:"div"},{className:"edgeLabel"}),"Yes"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgeLabel",transform:"translate(1633.967975616455,877.6187591552734)",style:{opacity:"1"}}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-9.3984375,-9.5)",className:"label"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"18.796875",height:"19"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),Object(s.mdx)("span",Object.assign({parentName:"div"},{className:"edgeLabel"}),"No"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgeLabel",transform:"translate(1278.6351623535156,1200.039077758789)",style:{opacity:"1"}}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-11.328125,-9.5)",className:"label"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"22.65625",height:"19"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),Object(s.mdx)("span",Object.assign({parentName:"div"},{className:"edgeLabel"}),"Yes"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgeLabel",transform:"translate(1418.3609428405762,1200.039077758789)",style:{opacity:"1"}}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-11.328125,-9.5)",className:"label"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"22.65625",height:"19"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),Object(s.mdx)("span",Object.assign({parentName:"div"},{className:"edgeLabel"}),"Yes"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgeLabel",transform:"translate(1486.4468803405762,1505.2328338623047)",style:{opacity:"1"}}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-11.328125,-9.5)",className:"label"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"22.65625",height:"19"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),Object(s.mdx)("span",Object.assign({parentName:"div"},{className:"edgeLabel"}),"Yes"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgeLabel",transform:"translate(1710.516414642334,1200.039077758789)",style:{opacity:"1"}}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-9.3984375,-9.5)",className:"label"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"18.796875",height:"19"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),Object(s.mdx)("span",Object.assign({parentName:"div"},{className:"edgeLabel"}),"No"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgeLabel",transform:"translate(1784.2769622802734,1799.2750244140625)",style:{opacity:"1"}}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-11.328125,-9.5)",className:"label"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"22.65625",height:"19"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),Object(s.mdx)("span",Object.assign({parentName:"div"},{className:"edgeLabel"}),"Yes"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgeLabel",transform:"translate(1636.7558670043945,1505.2328338623047)",style:{opacity:"1"}}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-9.3984375,-9.5)",className:"label"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"18.796875",height:"19"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),Object(s.mdx)("span",Object.assign({parentName:"div"},{className:"edgeLabel"}),"No"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgeLabel",transform:"translate(1636.7558670043945,1799.2750244140625)",style:{opacity:"1"}}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-9.3984375,-9.5)",className:"label"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"18.796875",height:"19"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),Object(s.mdx)("span",Object.assign({parentName:"div"},{className:"edgeLabel"}),"No"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgeLabel",transform:"translate(1945.871494293213,1799.2750244140625)",style:{opacity:"1"}}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-11.328125,-9.5)",className:"label"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"22.65625",height:"19"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),Object(s.mdx)("span",Object.assign({parentName:"div"},{className:"edgeLabel"}),"Yes"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgeLabel",transform:"translate(1871.945713043213,2090.1531524658203)",style:{opacity:"1"}}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-9.3984375,-9.5)",className:"label"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"18.796875",height:"19"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),Object(s.mdx)("span",Object.assign({parentName:"div"},{className:"edgeLabel"}),"No"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"edgeLabel",transform:"translate(1966.234775543213,2090.1531524658203)",style:{opacity:"1"}}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-11.328125,-9.5)",className:"label"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"22.65625",height:"19"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),Object(s.mdx)("span",Object.assign({parentName:"div"},{className:"edgeLabel"}),"Yes")))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"nodes"}),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"node",id:"A",transform:"translate(877.7187538146973,27.5)",style:{opacity:"1"}}),Object(s.mdx)("rect",Object.assign({parentName:"g"},{rx:"0",ry:"0",x:"-27.5078125",y:"-19.5",width:"55.015625",height:"39",className:"label-container"})),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"label",transform:"translate(0,0)"}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-17.5078125,-9.5)"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"35.015625",height:"19"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),"Start"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"node",id:"B",transform:"translate(877.7187538146973,181.7406234741211)",style:{opacity:"1"}}),Object(s.mdx)("polygon",Object.assign({parentName:"g"},{points:"84.74062500000001,0 169.48125000000002,-84.74062500000001 84.74062500000001,-169.48125000000002 0,-84.74062500000001",transform:"translate(-84.74062500000001,84.74062500000001)",className:"label-container"})),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"label",transform:"translate(0,0)"}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-55.15625,-19)"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"110.3125",height:"38"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),"Contains",Object(s.mdx)("br",{parentName:"div"}),"key/value pair?"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"node",id:"C",transform:"translate(405.13672256469727,425.8679656982422)",style:{opacity:"1"}}),Object(s.mdx)("polygon",Object.assign({parentName:"g"},{points:"67.18359375,0 134.3671875,-67.18359375 67.18359375,-134.3671875 0,-67.18359375",transform:"translate(-67.18359375,67.18359375)",className:"label-container"})),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"label",transform:"translate(0,0)"}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-35.6484375,-19)"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"71.296875",height:"38"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),"Is Order",Object(s.mdx)("br",{parentName:"div"}),"Important"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"node",id:"N",transform:"translate(1298.457820892334,425.8679656982422)",style:{opacity:"1"}}),Object(s.mdx)("polygon",Object.assign({parentName:"g"},{points:"90.38671875,0 180.7734375,-90.38671875 90.38671875,-180.7734375 0,-90.38671875",transform:"translate(-90.38671875,90.38671875)",className:"label-container"})),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"label",transform:"translate(0,0)"}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-61.4296875,-19)"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"122.859375",height:"38"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),"Will it contain",Object(s.mdx)("br",{parentName:"div"}),"duplicate values?"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"node",id:"D",transform:"translate(187.0113296508789,714.1867218017578)",style:{opacity:"1"}}),Object(s.mdx)("polygon",Object.assign({parentName:"g"},{points:"128.93203125,0 257.8640625,-128.93203125 128.93203125,-257.8640625 0,-128.93203125",transform:"translate(-128.93203125,128.93203125)",className:"label-container"})),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"label",transform:"translate(0,0)"}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-94.7578125,-28.5)"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"189.515625",height:"57"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),"Should it be used as cache",Object(s.mdx)("br",{parentName:"div"}),"or store construction ",Object(s.mdx)("br",{parentName:"div"}),"expensive objects?"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"node",id:"I",transform:"translate(644.5382881164551,714.1867218017578)",style:{opacity:"1"}}),Object(s.mdx)("polygon",Object.assign({parentName:"g"},{points:"91.7859375,0 183.571875,-91.7859375 91.7859375,-183.571875 0,-91.7859375",transform:"translate(-91.7859375,91.7859375)",className:"label-container"})),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"label",transform:"translate(0,0)"}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-62.984375,-19)"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"125.96875",height:"38"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),"Insertion order or",Object(s.mdx)("br",{parentName:"div"})," sorted by order?"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"node backfill",id:"E",transform:"translate(68.4375,1038.8289184570312)",style:{opacity:"1"}}),Object(s.mdx)("rect",Object.assign({parentName:"g"},{rx:"5",ry:"5",x:"-60.4375",y:"-19.5",width:"120.875",height:"39",className:"label-container"})),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"label",transform:"translate(0,0)"}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-50.4375,-9.5)"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"100.875",height:"19"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),"WeakHashMap"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"node",id:"F",transform:"translate(305.5851593017578,1038.8289184570312)",style:{opacity:"1"}}),Object(s.mdx)("polygon",Object.assign({parentName:"g"},{points:"126.71015625,0 253.4203125,-126.71015625 126.71015625,-253.4203125 0,-126.71015625",transform:"translate(-126.71015625,126.71015625)",className:"label-container"})),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"label",transform:"translate(0,0)"}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-92.2890625,-28.5)"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"184.578125",height:"57"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),"Unique key to be",Object(s.mdx)("br",{parentName:"div"}),"determined using",Object(s.mdx)("br",{parentName:"div"}),"equals() instead '==' oper?"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"node backfill",id:"G",transform:"translate(225.2062530517578,1352.6359558105469)",style:{opacity:"1"}}),Object(s.mdx)("rect",Object.assign({parentName:"g"},{rx:"5",ry:"5",x:"-41.3828125",y:"-19.5",width:"82.765625",height:"39",className:"label-container"})),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"label",transform:"translate(0,0)"}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-31.3828125,-9.5)"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"62.765625",height:"19"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),"HashMap"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"node backfill",id:"H",transform:"translate(440.9839897155762,1352.6359558105469)",style:{opacity:"1"}}),Object(s.mdx)("rect",Object.assign({parentName:"g"},{rx:"5",ry:"5",x:"-69.375",y:"-19.5",width:"138.75",height:"39",className:"label-container"})),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"label",transform:"translate(0,0)"}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-59.375,-9.5)"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"118.75",height:"19"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),"IdentityHashMap"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"node backfill",id:"J",transform:"translate(547.2406311035156,1038.8289184570312)",style:{opacity:"1"}}),Object(s.mdx)("rect",Object.assign({parentName:"g"},{rx:"5",ry:"5",x:"-64.9453125",y:"-19.5",width:"129.890625",height:"39",className:"label-container"})),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"label",transform:"translate(0,0)"}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-54.9453125,-9.5)"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"109.890625",height:"19"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),"LinkedHashMap"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"node",id:"K",transform:"translate(741.8359451293945,1038.8289184570312)",style:{opacity:"1"}}),Object(s.mdx)("polygon",Object.assign({parentName:"g"},{points:"79.65,0 159.3,-79.65 79.65,-159.3 0,-79.65",transform:"translate(-79.65,79.65)",className:"label-container"})),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"label",transform:"translate(0,0)"}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-49.5,-19)"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"99",height:"38"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),"Should it be",Object(s.mdx)("br",{parentName:"div"}),"synchronized?"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"node backfill",id:"L",transform:"translate(606.4371147155762,1352.6359558105469)",style:{opacity:"1"}}),Object(s.mdx)("rect",Object.assign({parentName:"g"},{rx:"5",ry:"5",x:"-46.078125",y:"-19.5",width:"92.15625",height:"39",className:"label-container"})),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"label",transform:"translate(0,0)"}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-36.078125,-9.5)"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"72.15625",height:"19"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),"HashTable"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"node backfill",id:"M",transform:"translate(842.2062568664551,1352.6359558105469)",style:{opacity:"1"}}),Object(s.mdx)("rect",Object.assign({parentName:"g"},{rx:"5",ry:"5",x:"-39.9375",y:"-19.5",width:"79.875",height:"39",className:"label-container"})),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"label",transform:"translate(0,0)"}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-29.9375,-9.5)"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"59.875",height:"19"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),"TreeMap"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"node",id:"O",transform:"translate(1000.0234451293945,714.1867218017578)",style:{opacity:"1"}}),Object(s.mdx)("polygon",Object.assign({parentName:"g"},{points:"88.425,0 176.85,-88.425 88.425,-176.85 0,-88.425",transform:"translate(-88.425,88.425)",className:"label-container"})),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"label",transform:"translate(0,0)"}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-59.25,-19)"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"118.5",height:"38"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),"Is element order",Object(s.mdx)("br",{parentName:"div"}),"Important"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"node",id:"T",transform:"translate(1518.967975616455,714.1867218017578)",style:{opacity:"1"}}),Object(s.mdx)("polygon",Object.assign({parentName:"g"},{points:"79.65,0 159.3,-79.65 79.65,-159.3 0,-79.65",transform:"translate(-79.65,79.65)",className:"label-container"})),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"label",transform:"translate(0,0)"}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-49.5,-19)"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"99",height:"38"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),"Should it be",Object(s.mdx)("br",{parentName:"div"}),"synchronized?"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"node backfill",id:"P",transform:"translate(909.9156341552734,1038.8289184570312)",style:{opacity:"1"}}),Object(s.mdx)("rect",Object.assign({parentName:"g"},{rx:"5",ry:"5",x:"-38.4296875",y:"-19.5",width:"76.859375",height:"39",className:"label-container"})),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"label",transform:"translate(0,0)"}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-28.4296875,-9.5)"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"56.859375",height:"19"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),"HashSet"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"node",id:"Q",transform:"translate(1090.1312561035156,1038.8289184570312)",style:{opacity:"1"}}),Object(s.mdx)("polygon",Object.assign({parentName:"g"},{points:"91.7859375,0 183.571875,-91.7859375 91.7859375,-183.571875 0,-91.7859375",transform:"translate(-91.7859375,91.7859375)",className:"label-container"})),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"label",transform:"translate(0,0)"}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-62.984375,-19)"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"125.96875",height:"38"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),"Insertion order or",Object(s.mdx)("br",{parentName:"div"}),"sorted by values?"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"node backfill",id:"R",transform:"translate(989.7609443664551,1352.6359558105469)",style:{opacity:"1"}}),Object(s.mdx)("rect",Object.assign({parentName:"g"},{rx:"5",ry:"5",x:"-57.6171875",y:"-19.5",width:"115.234375",height:"39",className:"label-container"})),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"label",transform:"translate(0,0)"}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-47.6171875,-9.5)"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"95.234375",height:"19"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),"LinkedHasSet"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"node backfill",id:"S",transform:"translate(1162.4320373535156,1352.6359558105469)",style:{opacity:"1"}}),Object(s.mdx)("rect",Object.assign({parentName:"g"},{rx:"5",ry:"5",x:"-36.984375",y:"-19.5",width:"73.96875",height:"39",className:"label-container"})),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"label",transform:"translate(0,0)"}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-26.984375,-9.5)"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"53.96875",height:"19"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),"TreeSet"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"node",id:"U",transform:"translate(1337.4039115905762,1038.8289184570312)",style:{opacity:"1"}}),Object(s.mdx)("polygon",Object.assign({parentName:"g"},{points:"91.9546875,0 183.909375,-91.9546875 91.9546875,-183.909375 0,-91.9546875",transform:"translate(-91.9546875,91.9546875)",className:"label-container"})),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"label",transform:"translate(0,0)"}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-63.171875,-19)"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"126.34375",height:"38"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),"Should it act like ",Object(s.mdx)("br",{parentName:"div"}),"LIFO stack?"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"node",id:"X",transform:"translate(1633.967975616455,1038.8289184570312)",style:{opacity:"1"}}),Object(s.mdx)("polygon",Object.assign({parentName:"g"},{points:"88.04531250000001,0 176.09062500000002,-88.04531250000001 88.04531250000001,-176.09062500000002 0,-88.04531250000001",transform:"translate(-88.04531250000001,88.04531250000001)",className:"label-container"})),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"label",transform:"translate(0,0)"}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-58.828125,-19)"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"117.65625",height:"38"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),"Fast random ",Object(s.mdx)("br",{parentName:"div"}),"access required?"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"node backfill",id:"V",transform:"translate(1278.6351623535156,1352.6359558105469)",style:{opacity:"1"}}),Object(s.mdx)("rect",Object.assign({parentName:"g"},{rx:"5",ry:"5",x:"-29.21875",y:"-19.5",width:"58.4375",height:"39",className:"label-container"})),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"label",transform:"translate(0,0)"}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-19.21875,-9.5)"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"38.4375",height:"19"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),"Stack"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"node backfill",id:"W",transform:"translate(1418.3609428405762,1352.6359558105469)",style:{opacity:"1"}}),Object(s.mdx)("rect",Object.assign({parentName:"g"},{rx:"5",ry:"5",x:"-33.0859375",y:"-19.5",width:"66.171875",height:"39",className:"label-container"})),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"label",transform:"translate(0,0)"}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-23.0859375,-9.5)"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"46.171875",height:"19"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),"Vector"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"node backfill",id:"Y",transform:"translate(1560.2074279785156,1944.7140884399414)",style:{opacity:"1"}}),Object(s.mdx)("rect",Object.assign({parentName:"g"},{rx:"5",ry:"5",x:"-41.828125",y:"-19.5",width:"83.65625",height:"39",className:"label-container"})),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"label",transform:"translate(0,0)"}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-31.828125,-9.5)"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"63.65625",height:"19"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),"ArrayList"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"node",id:"Z",transform:"translate(1710.516414642334,1352.6359558105469)",style:{opacity:"1"}}),Object(s.mdx)("polygon",Object.assign({parentName:"g"},{points:"118.096875,0 236.19375,-118.096875 118.096875,-236.19375 0,-118.096875",transform:"translate(-118.096875,118.096875)",className:"label-container"})),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"label",transform:"translate(0,0)"}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-82.71875,-28.5)"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"165.4375",height:"57"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),"Fast sequential access,",Object(s.mdx)("br",{parentName:"div"}),"addition/deletion",Object(s.mdx)("br",{parentName:"div"}),"required?"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"node backfill",id:"aa",transform:"translate(1798.9761810302734,2144.1531524658203)",style:{opacity:"1"}}),Object(s.mdx)("rect",Object.assign({parentName:"g"},{rx:"5",ry:"5",x:"-46.3046875",y:"-19.5",width:"92.609375",height:"39",className:"label-container"})),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"label",transform:"translate(0,0)"}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-36.3046875,-9.5)"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"72.609375",height:"19"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),"LinkedList"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"node",id:"bb",transform:"translate(1636.7558670043945,1652.2539291381836)",style:{opacity:"1"}}),Object(s.mdx)("polygon",Object.assign({parentName:"g"},{points:"112.52109375,0 225.0421875,-112.52109375 112.52109375,-225.0421875 0,-112.52109375",transform:"translate(-112.52109375,112.52109375)",className:"label-container"})),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"label",transform:"translate(0,0)"}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-76.5234375,-28.5)"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"153.046875",height:"57"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),"Should it be used as",Object(s.mdx)("br",{parentName:"div"}),"as a queue or",Object(s.mdx)("br",{parentName:"div"})," double-ended queue?"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"node",id:"cc",transform:"translate(1945.871494293213,1944.7140884399414)",style:{opacity:"1"}}),Object(s.mdx)("polygon",Object.assign({parentName:"g"},{points:"110.9390625,0 221.878125,-110.9390625 110.9390625,-221.878125 0,-110.9390625",transform:"translate(-110.9390625,110.9390625)",className:"label-container"})),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"label",transform:"translate(0,0)"}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-84.265625,-19)"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"168.53125",height:"38"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),"Does it have to be",Object(s.mdx)("br",{parentName:"div"}),"fast permorning queue?"))))),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"node backfill",id:"dd",transform:"translate(1966.234775543213,2144.1531524658203)",style:{opacity:"1"}}),Object(s.mdx)("rect",Object.assign({parentName:"g"},{rx:"5",ry:"5",x:"-51.546875",y:"-19.5",width:"103.09375",height:"39",className:"label-container"})),Object(s.mdx)("g",Object.assign({parentName:"g"},{className:"label",transform:"translate(0,0)"}),Object(s.mdx)("g",Object.assign({parentName:"g"},{transform:"translate(-41.546875,-9.5)"}),Object(s.mdx)("foreignObject",Object.assign({parentName:"g"},{width:"83.09375",height:"19"}),Object(s.mdx)("div",Object.assign({parentName:"foreignObject"},{xmlns:"http://www.w3.org/1999/xhtml",style:{display:"inline-block",whiteSpace:"nowrap"}}),"ArrayDeque")))))))))),Object(s.mdx)("table",null,Object(s.mdx)("thead",{parentName:"table"},Object(s.mdx)("tr",{parentName:"thead"},Object(s.mdx)("th",Object.assign({parentName:"tr"},{align:null}),"Collection classes"),Object(s.mdx)("th",Object.assign({parentName:"tr"},{align:"center"}),"Duplicate elements allowed"),Object(s.mdx)("th",Object.assign({parentName:"tr"},{align:"center"}),"Elements are Ordered"),Object(s.mdx)("th",Object.assign({parentName:"tr"},{align:"center"}),"Elements are Sorted"),Object(s.mdx)("th",Object.assign({parentName:"tr"},{align:"center"}),"Is Thread-safe"))),Object(s.mdx)("tbody",{parentName:"table"},Object(s.mdx)("tr",{parentName:"tbody"},Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:null}),"ArrayList"),Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:"center"}),Object(s.mdx)("span",{style:{color:"green"}},Object(s.mdx)("strong",{parentName:"td"},"Yes"))),Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:"center"}),Object(s.mdx)("span",{style:{color:"green"}},Object(s.mdx)("strong",{parentName:"td"},"Yes"))),Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:"center"}),Object(s.mdx)("span",{style:{color:"red"}},Object(s.mdx)("strong",{parentName:"td"},"No"))),Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:"center"}),Object(s.mdx)("span",{style:{color:"red"}},Object(s.mdx)("strong",{parentName:"td"},"No")))),Object(s.mdx)("tr",{parentName:"tbody"},Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:null}),"LinkedList"),Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:"center"}),Object(s.mdx)("span",{style:{color:"green"}},Object(s.mdx)("strong",{parentName:"td"},"Yes"))),Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:"center"}),Object(s.mdx)("span",{style:{color:"green"}},Object(s.mdx)("strong",{parentName:"td"},"Yes"))),Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:"center"}),Object(s.mdx)("span",{style:{color:"red"}},Object(s.mdx)("strong",{parentName:"td"},"No"))),Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:"center"}),Object(s.mdx)("span",{style:{color:"red"}},Object(s.mdx)("strong",{parentName:"td"},"No")))),Object(s.mdx)("tr",{parentName:"tbody"},Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:null}),"Vector"),Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:"center"}),Object(s.mdx)("span",{style:{color:"green"}},Object(s.mdx)("strong",{parentName:"td"},"Yes"))),Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:"center"}),Object(s.mdx)("span",{style:{color:"green"}},Object(s.mdx)("strong",{parentName:"td"},"Yes"))),Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:"center"}),Object(s.mdx)("span",{style:{color:"red"}},Object(s.mdx)("strong",{parentName:"td"},"No"))),Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:"center"}),Object(s.mdx)("span",{style:{color:"green"}},Object(s.mdx)("strong",{parentName:"td"},"Yes")))),Object(s.mdx)("tr",{parentName:"tbody"},Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:null}),"HashSet"),Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:"center"}),Object(s.mdx)("span",{style:{color:"red"}},Object(s.mdx)("strong",{parentName:"td"},"No"))),Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:"center"}),Object(s.mdx)("span",{style:{color:"red"}},Object(s.mdx)("strong",{parentName:"td"},"No"))),Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:"center"}),Object(s.mdx)("span",{style:{color:"red"}},Object(s.mdx)("strong",{parentName:"td"},"No"))),Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:"center"}),Object(s.mdx)("span",{style:{color:"red"}},Object(s.mdx)("strong",{parentName:"td"},"No")))),Object(s.mdx)("tr",{parentName:"tbody"},Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:null}),"LinkedHashSet"),Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:"center"}),Object(s.mdx)("span",{style:{color:"red"}},Object(s.mdx)("strong",{parentName:"td"},"No"))),Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:"center"}),Object(s.mdx)("span",{style:{color:"green"}},Object(s.mdx)("strong",{parentName:"td"},"Yes"))),Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:"center"}),Object(s.mdx)("span",{style:{color:"red"}},Object(s.mdx)("strong",{parentName:"td"},"No"))),Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:"center"}),Object(s.mdx)("span",{style:{color:"red"}},Object(s.mdx)("strong",{parentName:"td"},"No")))),Object(s.mdx)("tr",{parentName:"tbody"},Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:null}),"TreeSet"),Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:"center"}),Object(s.mdx)("span",{style:{color:"red"}},Object(s.mdx)("strong",{parentName:"td"},"No"))),Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:"center"}),Object(s.mdx)("span",{style:{color:"green"}},Object(s.mdx)("strong",{parentName:"td"},"Yes"))),Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:"center"}),Object(s.mdx)("span",{style:{color:"green"}},Object(s.mdx)("strong",{parentName:"td"},"Yes"))),Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:"center"}),Object(s.mdx)("span",{style:{color:"red"}},Object(s.mdx)("strong",{parentName:"td"},"No")))),Object(s.mdx)("tr",{parentName:"tbody"},Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:null}),"HashMap"),Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:"center"}),Object(s.mdx)("span",{style:{color:"red"}},Object(s.mdx)("strong",{parentName:"td"},"No"))),Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:"center"}),Object(s.mdx)("span",{style:{color:"red"}},Object(s.mdx)("strong",{parentName:"td"},"No"))),Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:"center"}),Object(s.mdx)("span",{style:{color:"red"}},Object(s.mdx)("strong",{parentName:"td"},"No"))),Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:"center"}),Object(s.mdx)("span",{style:{color:"red"}},Object(s.mdx)("strong",{parentName:"td"},"No")))),Object(s.mdx)("tr",{parentName:"tbody"},Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:null}),"LinkedHashMap"),Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:"center"}),Object(s.mdx)("span",{style:{color:"red"}},Object(s.mdx)("strong",{parentName:"td"},"No"))),Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:"center"}),Object(s.mdx)("span",{style:{color:"green"}},Object(s.mdx)("strong",{parentName:"td"},"Yes"))),Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:"center"}),Object(s.mdx)("span",{style:{color:"red"}},Object(s.mdx)("strong",{parentName:"td"},"No"))),Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:"center"}),Object(s.mdx)("span",{style:{color:"red"}},Object(s.mdx)("strong",{parentName:"td"},"No")))),Object(s.mdx)("tr",{parentName:"tbody"},Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:null}),"Hashtable"),Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:"center"}),Object(s.mdx)("span",{style:{color:"red"}},Object(s.mdx)("strong",{parentName:"td"},"No"))),Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:"center"}),Object(s.mdx)("span",{style:{color:"red"}},Object(s.mdx)("strong",{parentName:"td"},"No"))),Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:"center"}),Object(s.mdx)("span",{style:{color:"red"}},Object(s.mdx)("strong",{parentName:"td"},"No"))),Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:"center"}),Object(s.mdx)("span",{style:{color:"green"}},Object(s.mdx)("strong",{parentName:"td"},"Yes")))),Object(s.mdx)("tr",{parentName:"tbody"},Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:null}),"TreeMap"),Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:"center"}),Object(s.mdx)("span",{style:{color:"red"}},Object(s.mdx)("strong",{parentName:"td"},"No"))),Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:"center"}),Object(s.mdx)("span",{style:{color:"green"}},Object(s.mdx)("strong",{parentName:"td"},"Yes"))),Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:"center"}),Object(s.mdx)("span",{style:{color:"green"}},Object(s.mdx)("strong",{parentName:"td"},"Yes"))),Object(s.mdx)("td",Object.assign({parentName:"tr"},{align:"center"}),Object(s.mdx)("span",{style:{color:"red"}},Object(s.mdx)("strong",{parentName:"td"},"No")))))),Object(s.mdx)("p",null,"In Short, The following characteristics of the main collections in Java Collection Frameworks:"),Object(s.mdx)("ul",null,Object(s.mdx)("li",{parentName:"ul"},"All ",Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"lists")," allow duplicate elements which are ordered by index."),Object(s.mdx)("li",{parentName:"ul"},"All ",Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"sets")," and ",Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"maps")," do not allow duplicate elements."),Object(s.mdx)("li",{parentName:"ul"},"All ",Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"list")," elements are not sorted."),Object(s.mdx)("li",{parentName:"ul"},Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"sets")," and ",Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"maps")," do not sort its elements, except ",Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"TreeSet")," and ",Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"TreeMap")," – which sort elements by natural order or by a comparator."),Object(s.mdx)("li",{parentName:"ul"},"Elements within ",Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"sets")," and ",Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"maps")," are not ordered, except for:\n** ",Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"LinkedHashSet")," and ",Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"LinkedHashMap")," have elements ordered by insertion order."),Object(s.mdx)("li",{parentName:"ul"},Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"TreeSet")," and ",Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"TreeMap")," have elements ordered by natural order or by a comparator."),Object(s.mdx)("li",{parentName:"ul"},"There are only two collections are thread-safe, ",Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"Vector")," and ",Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"Hastable"),". The rest are not thread-safe.")),Object(s.mdx)("h2",null,"Implementation Classes grouped by their Interfaces"),Object(s.mdx)("h3",null,"List"),Object(s.mdx)("p",null,"An ",Object(s.mdx)("strong",{parentName:"p"},"ordered")," collection (also known as a ",Object(s.mdx)("em",{parentName:"p"},"sequence"),"). The user of this interface has precise control over where in the list each element is inserted. The user can access elements by their integer index (position in the list), and search for elements in the list."),Object(s.mdx)("ul",null,Object(s.mdx)("li",{parentName:"ul"},"Lists ",Object(s.mdx)("strong",{parentName:"li"},"allow duplicate")," elements"),Object(s.mdx)("li",{parentName:"ul"},"Lists ",Object(s.mdx)("strong",{parentName:"li"},"allow multiple null")," elements if they allow null elements at all")),Object(s.mdx)(m,{mdxType:"Seperator"}),Object(s.mdx)("p",null,"java.util.",Object(s.mdx)("strong",{parentName:"p"},"ArrayList")),Object(s.mdx)("ul",null,Object(s.mdx)("li",{parentName:"ul"},"Resizable-array implementation of the List interface. Implements all optional list operations, and permits all elements, ",Object(s.mdx)("strong",{parentName:"li"},"including null"),". In addition to implementing the List interface, this class provides methods to manipulate the size of the array that is used internally to store the list. (This class is roughly equivalent to Vector, except that it is unsynchronized.)"),Object(s.mdx)("li",{parentName:"ul"},"Each ArrayList instance has a capacity. The capacity is the size of the array used to store the elements in the list. It is always at least as large as the list size. As elements are added to an ArrayList, its capacity grows automatically. The details of the growth policy are not specified beyond the fact that adding an element has constant amortized time cost."),Object(s.mdx)("li",{parentName:"ul"},Object(s.mdx)("strong",{parentName:"li"},"Note that this implementation is not synchronized"),". If multiple threads access an ArrayList instance concurrently, and at least one of the threads modifies the list structurally, it must be synchronized externally."),Object(s.mdx)("li",{parentName:"ul"},"To prevent accidental unsynchronized access to the list, create the instance of list as below")),Object(s.mdx)("div",{className:"gatsby-highlight","data-language":"java"},Object(s.mdx)("pre",Object.assign({parentName:"div"},{className:"language-java"}),Object(s.mdx)("code",Object.assign({parentName:"pre"},{className:"language-java"}),Object(s.mdx)("span",Object.assign({parentName:"code"},{className:"token class-name"}),"List")," list ",Object(s.mdx)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.mdx)("span",Object.assign({parentName:"code"},{className:"token class-name"}),"Collections"),Object(s.mdx)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"."),Object(s.mdx)("span",Object.assign({parentName:"code"},{className:"token function"}),"synchronizedList"),Object(s.mdx)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(s.mdx)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"new")," ",Object(s.mdx)("span",Object.assign({parentName:"code"},{className:"token class-name"}),"ArrayList"),Object(s.mdx)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(s.mdx)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"."),Object(s.mdx)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"."),Object(s.mdx)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"."),Object(s.mdx)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),Object(s.mdx)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),Object(s.mdx)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";")))),Object(s.mdx)(i,{mdxType:"Todo"},"Add Example"),Object(s.mdx)(m,{mdxType:"Seperator"}),Object(s.mdx)("p",null,"java.util.",Object(s.mdx)("strong",{parentName:"p"},"LinkedList")),Object(s.mdx)("ul",null,Object(s.mdx)("li",{parentName:"ul"},Object(s.mdx)("a",{href:"https://en.wikipedia.org/wiki/Doubly_linked_list",target:"_blank"},"Doubly-linked list")," implementation of the `List` and `Deque` interfaces. Implements all optional list operations, and permits all elements (**including null**)."),Object(s.mdx)("li",{parentName:"ul"},"All of the operations perform as could be expected for a doubly-linked list. Operations that index into the list will traverse the list from the beginning or the end, whichever is closer to the specified index.")),Object(s.mdx)(i,{mdxType:"Todo"},"Add Example"),Object(s.mdx)(m,{mdxType:"Seperator"}),Object(s.mdx)("p",null,"java.util.concurrent.",Object(s.mdx)("strong",{parentName:"p"},"CopyOnWriteArrayList")),Object(s.mdx)("ul",null,Object(s.mdx)("li",{parentName:"ul"},"A ",Object(s.mdx)("strong",{parentName:"li"},"thread-safe")," variant of ",Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"ArrayList")," in which all mutative operations (add, set, and so on) are implemented by making a fresh copy of the underlying array."),Object(s.mdx)("li",{parentName:"ul"},"This is ",Object(s.mdx)("em",{parentName:"li"},"ordinarily too costly"),", but may be more efficient than alternatives when traversal operations vastly outnumber mutations, and is useful when you cannot or don’t want to synchronize traversals, yet need to preclude interference among concurrent threads."),Object(s.mdx)("li",{parentName:"ul"},"The “snapshot” style iterator method uses a reference to the state of the array at the point that the iterator was created. This array never changes during the lifetime of the iterator, so interference is impossible and the iterator is guaranteed not to throw ",Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"ConcurrentModificationException"),". The iterator will not reflect additions, removals, or changes to the list since the iterator was created. Element-changing operations on iterators themselves (remove, set, and add) are not supported. These methods throw UnsupportedOperationException."),Object(s.mdx)("li",{parentName:"ul"},"All elements are permitted, ",Object(s.mdx)("strong",{parentName:"li"},"including null"),".")),Object(s.mdx)(i,{mdxType:"Todo"},"Add Example"),Object(s.mdx)("h3",null,"Map"),Object(s.mdx)("p",null,"An object that maps keys to values. A map ",Object(s.mdx)("strong",{parentName:"p"},"cannot contain duplicate keys"),"; each key can map to at most one value."),Object(s.mdx)("ul",null,Object(s.mdx)("li",{parentName:"ul"},"The order of a map is defined as the order in which the iterators on the map’s collection views return their elements."),Object(s.mdx)("li",{parentName:"ul"},"Map uses ",Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"hashCode()"),", ",Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"==")," and ",Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"equals()")," for entry lookup. The lookup sequence for a given key k is as follows:\n",Object(s.mdx)("strong",{parentName:"li"}," Use ",Object(s.mdx)("code",Object.assign({parentName:"strong"},{className:"language-text"}),"k.hashCode()")," to determine which bucket the entry is stored, if any\n")," If found, for each entry’s key k1 in that bucket, if ",Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"k == k1")," || ",Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"k.equals(k1)"),", then return k1’s entry\n** Any other outcomes, no corresponding entry")),Object(s.mdx)(i,{mdxType:"Todo"},"Complete this Section"),Object(s.mdx)(m,{mdxType:"Seperator"}),Object(s.mdx)("p",null,"java.util.",Object(s.mdx)("strong",{parentName:"p"},"HashMap")),Object(s.mdx)(m,{mdxType:"Seperator"}),Object(s.mdx)("p",null,"java.util.",Object(s.mdx)("strong",{parentName:"p"},"LinkedHashMap")),Object(s.mdx)(m,{mdxType:"Seperator"}),Object(s.mdx)("p",null,"java.util.",Object(s.mdx)("strong",{parentName:"p"},"WeakHashMap")),Object(s.mdx)(m,{mdxType:"Seperator"}),Object(s.mdx)("p",null,"java.util.",Object(s.mdx)("strong",{parentName:"p"},"Hashtable")),Object(s.mdx)(m,{mdxType:"Seperator"}),Object(s.mdx)("p",null,"java.util.",Object(s.mdx)("strong",{parentName:"p"},"EnumMap")),Object(s.mdx)(m,{mdxType:"Seperator"}),Object(s.mdx)("p",null,"java.util.",Object(s.mdx)("strong",{parentName:"p"},"TreeMap")),Object(s.mdx)(m,{mdxType:"Seperator"}),Object(s.mdx)("p",null,"java.util.concurrent.",Object(s.mdx)("strong",{parentName:"p"},"WeakHashMap")),Object(s.mdx)(m,{mdxType:"Seperator"}),Object(s.mdx)("p",null,"java.utilconcurrent.",Object(s.mdx)("strong",{parentName:"p"},"ConcurrentSkipListMap")),Object(s.mdx)("h3",null,"Set"),Object(s.mdx)("p",null,"A collection that contains ",Object(s.mdx)("strong",{parentName:"p"},"no duplicate")," elements. Sets contain no pair of elements e1 and e2 such that e1.equals(e2), and ",Object(s.mdx)("strong",{parentName:"p"},"at most one null")," element. That being said as ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"Set")," is a well-defined ",Object(s.mdx)("strong",{parentName:"p"},"collection of distinct objects")," and in other words, the same object cannot occur more than once."),Object(s.mdx)("p",null,"Java ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"Set")," and ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"List")," interfaces are quite similar to each other, but has two major differences. "),Object(s.mdx)("p",null,"The first difference is that the same element cannot occur more than once in a ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"Set"),". This is different from a ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"List")," where each element can occur more than once."),Object(s.mdx)("p",null,"The second difference is that the elements in a ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"Set")," has ",Object(s.mdx)("strong",{parentName:"p"},"no guaranteed")," internal order. The elements in a ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"List")," has an ",Object(s.mdx)("strong",{parentName:"p"},"internal order"),", and the elements can be iterated in that order."),Object(s.mdx)(m,{mdxType:"Seperator"}),Object(s.mdx)("p",null,"java.util.",Object(s.mdx)("strong",{parentName:"p"},"HashSet")),Object(s.mdx)("ul",null,Object(s.mdx)("li",{parentName:"ul"},"HashSet is used to create a collection that uses a hash table for storage. It stores the elements by using a mechanism called ",Object(s.mdx)("a",{href:"https://www.cs.cmu.edu/~adamchik/15-121/lectures/Hashing/hashing.html",target:"_blank"},"hashing"),"."),Object(s.mdx)("li",{parentName:"ul"},"HashSet contains unique elements only and can allow atmost one null value."),Object(s.mdx)("li",{parentName:"ul"},"Elements in HashSet are inserted on the basis of their hashcode and not by their insertion order."),Object(s.mdx)("li",{parentName:"ul"},"Upon creating a new empty instance of HashSet, the backing HashMap instance has default initial capacity (16) and load factor (0.75)."),Object(s.mdx)("li",{parentName:"ul"},"HashSet class is non synchronized.")),Object(s.mdx)(i,{mdxType:"Todo"},"Add Example"),Object(s.mdx)(m,{mdxType:"Seperator"}),Object(s.mdx)("p",null,"java.util.",Object(s.mdx)("strong",{parentName:"p"},"LinkedHashSet")),Object(s.mdx)("ul",null,Object(s.mdx)("li",{parentName:"ul"},Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"LinkedHashSet")," class is a ",Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"Hashtable")," and ",Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"LinkedList")," implementation of the ",Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"set")," interface. It inherits ",Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"HashSet")," class and implements Set interface."),Object(s.mdx)("li",{parentName:"ul"},"LinkedHashSet class contains unique elements only like HashSet and can allow atmost one null value."),Object(s.mdx)("li",{parentName:"ul"},"As LinkedHashSet uses a linked list to store its elements, LinkedHashSet’s iterator returns elements in the order in which they were inserted."),Object(s.mdx)("li",{parentName:"ul"},"LinkedHashSet class is non synchronized.")),Object(s.mdx)(i,{mdxType:"Todo"},"Add Example"),Object(s.mdx)(m,{mdxType:"Seperator"}),Object(s.mdx)("p",null,"java.util.",Object(s.mdx)("strong",{parentName:"p"},"TreeSet")),Object(s.mdx)("ul",null,Object(s.mdx)("li",{parentName:"ul"},Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"TreeSet")," implements the ",Object(s.mdx)("a",{href:"https://docs.oracle.com/javase/7/docs/api/java/util/NavigableSet.html",target:"_blank"},"NavigableSet")," interface, which in turn extends the ",Object(s.mdx)("a",{href:"https://docs.oracle.com/javase/7/docs/api/java/util/NavigableSet.html",target:"_blank"},"SortedSet")," interface."),Object(s.mdx)("li",{parentName:"ul"},"TreeSet class internally uses a ",Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"TreeMap")," to store elements. The elements in a TreeSet are sorted according to their ",Object(s.mdx)("strong",{parentName:"li"},"natural ordering")," or based on a custom Comparator that is supplied at the time of creation of the TreeSet"),Object(s.mdx)("li",{parentName:"ul"},"TreeSet class is non synchronized.")),Object(s.mdx)(i,{mdxType:"Todo"},"Add Example"),Object(s.mdx)(m,{mdxType:"Seperator"}),Object(s.mdx)("p",null,"java.util.concurrent.",Object(s.mdx)("strong",{parentName:"p"},"CopyOnWriteArraySet")),Object(s.mdx)("ul",null,Object(s.mdx)("li",{parentName:"ul"},"A ",Object(s.mdx)("strong",{parentName:"li"},"thread-safe")," variant of ",Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"HashSet")," which uses a underlying ",Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"CopyOnWriteArrayList")," for all of its operations."),Object(s.mdx)("li",{parentName:"ul"},"As normal set data structure, it does not allow duplicates"),Object(s.mdx)("li",{parentName:"ul"},"CopyOnWriteArraySet is costly for update operations, bacause each mutation creates a cloned copy of underlying array and add/update element to it."),Object(s.mdx)("li",{parentName:"ul"},"It is thread-safe version of HashSet. Each thread accessing the set sees its own version of snapshot of backing array created while initializing the iterator for this set."),Object(s.mdx)("li",{parentName:"ul"},"Because it gets snapshot of underlying array while creating iterator, it does not throw ",Object(s.mdx)("strong",{parentName:"li"},"ConcurrentModificationException"),".")),Object(s.mdx)(i,{mdxType:"Todo"},"Add Example"),Object(s.mdx)("h3",null,"Queue"),Object(s.mdx)("p",null,"Queue represents a data structure designed to have elements inserted at the end of the queue, and elements removed from the beginning of the queue."),Object(s.mdx)("p",null,"Besides basic Collection operations, queues provide additional insertion, extraction, and inspection operations. Each of these methods exists in two forms: one throws an exception if the operation fails, the other returns a special value (either null or false, depending on the operation). The latter form of the insert operation is designed specifically for use with capacity-restricted Queue implementations; in most implementations, insert operations cannot fail."),Object(s.mdx)(i,{mdxType:"Todo"},"Complete this Section"),Object(s.mdx)(m,{mdxType:"Seperator"}),Object(s.mdx)("h3",null,"Deque"),Object(s.mdx)("p",null,"Dequeue represents a double ended queue, meaning a queue where you can add and remove elements from both ends of the queue. The name Deque is an abbreviation of Double Ended Queue."),Object(s.mdx)(i,{mdxType:"Todo"},"Complete this Section"),Object(s.mdx)(m,{mdxType:"Seperator"}),Object(s.mdx)("h2",null,"Frequently asked questions"),Object(s.mdx)("div",{className:"gatsby-highlight","data-language":"text"},Object(s.mdx)("pre",Object.assign({parentName:"div"},{className:"language-text"}),Object(s.mdx)("code",Object.assign({parentName:"pre"},{className:"language-text"}),"Q) What is the difference between an ordered and a sorted collection?"))),Object(s.mdx)("ul",null,Object(s.mdx)("li",{parentName:"ul"},"An ",Object(s.mdx)("strong",{parentName:"li"},"ordered collection")," means that the elements of the collection have a specific order. The order is independent of the value. A ",Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"List")," is an example."),Object(s.mdx)("li",{parentName:"ul"},"A ",Object(s.mdx)("strong",{parentName:"li"},"sorted collection")," means that not only does the collection have order, but the order depends on the value of the element. A ",Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"SortedSet")," is an example."),Object(s.mdx)("li",{parentName:"ul"},"A ",Object(s.mdx)("strong",{parentName:"li"},"collection without any order")," can maintain the elements in any order. A ",Object(s.mdx)("code",Object.assign({parentName:"li"},{className:"language-text"}),"Set")," is an example.")),Object(s.mdx)(m,{mdxType:"Seperator"}),Object(s.mdx)("div",{className:"gatsby-highlight","data-language":"text"},Object(s.mdx)("pre",Object.assign({parentName:"div"},{className:"language-text"}),Object(s.mdx)("code",Object.assign({parentName:"pre"},{className:"language-text"}),"Q) What is fail safe and fail fast Iterator ?"))),Object(s.mdx)("p",null,"Java Collections supports two types of Iterator, ",Object(s.mdx)("strong",{parentName:"p"},"fail safe")," and ",Object(s.mdx)("strong",{parentName:"p"},"fail fast"),". "),Object(s.mdx)("p",null,"The main distinction between a fail-fast and fail-safe Iterator is whether or not the underlying collection can be modified while its begin iterated. If you have used Collection like ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"ArrayList")," then you know that when you iterate over them, no other thread should modify the collection. If ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"Iterator")," detects any structural change after iteration has begun e.g ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"adding")," or ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"removing")," a new element then it throws ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"ConcurrentModificationException"),",  this is known as ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"fail-fast behavior")," and these iterators are called ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"fail-fast iterator")," because they fail as soon as they detect any modification . Though it’s not necessary that iterator will throw this exception when multiple threads modified it simultaneously. it can happen even with the single thread when you try to remove elements  by using ArrayList’s remove() method instead of Iterator’s remove method. Most of the Collection classes e.g. ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"Vector"),", ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"ArrayList"),", ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"HashMap"),", ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"HashSet")," has fail-fast iterators."),Object(s.mdx)("p",null,"The iterators used by concurrent collection classes e.g. ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"ConcurrentHashMap"),", ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"CopyOnWriteArrayList")," and ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"CopyOnWriteArraySet")," uses a view of original collection for doing iteration and that’s why ",Object(s.mdx)("strong",{parentName:"p"},"they doesn’t throw")," ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"ConcurrentModificationException")," even when original collection was modified after iteration has begun.  This means you could iterate and work with stale value, but this is the cost you need to pay for ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"fail-safe iterator"),"."),Object(s.mdx)(m,{mdxType:"Seperator"}),Object(s.mdx)("div",{className:"gatsby-highlight","data-language":"text"},Object(s.mdx)("pre",Object.assign({parentName:"div"},{className:"language-text"}),Object(s.mdx)("code",Object.assign({parentName:"pre"},{className:"language-text"}),"Q) What is load factor?"))),Object(s.mdx)("p",null,"The load factor is a measure of how full the collection(hash table) is allowed to get before its capacity is automatically increased. When the number of entries in the hash table exceeds the product of the load factor and the current capacity, the hash table is rehashed (that is, internal data structures are rebuilt) so that the hash table has approximately twice the number of buckets. "),Object(s.mdx)("p",null,"As a general rule, the default load factor (.75) offers a good tradeoff between time and space costs. Higher values decrease the space overhead but increase the lookup cost (reflected in most of the operations of the HashMap class, including get and put). The expected number of entries in the map and its load factor should be taken into account when setting its initial capacity, so as to minimize the number of rehash operations. If the initial capacity is greater than the maximum number of entries divided by the load factor, no rehash operations will ever occur. "),Object(s.mdx)(m,{mdxType:"Seperator"}),Object(s.mdx)("div",{className:"gatsby-highlight","data-language":"text"},Object(s.mdx)("pre",Object.assign({parentName:"div"},{className:"language-text"}),Object(s.mdx)("code",Object.assign({parentName:"pre"},{className:"language-text"}),"Q) What is Natural Ordering?"))),Object(s.mdx)("p",null,Object(s.mdx)("strong",{parentName:"p"},"Natural ordering")," is the default ordering of objects of a specific type when they are sorted in an array or a collection. The Java language provides the ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"Comparable")," interface that allows us define the natural ordering of a class. This interface is declared as follows:"),Object(s.mdx)("div",{className:"gatsby-highlight","data-language":"java"},Object(s.mdx)("pre",Object.assign({parentName:"div"},{className:"language-java"}),Object(s.mdx)("code",Object.assign({parentName:"pre"},{className:"language-java"}),Object(s.mdx)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"public")," ",Object(s.mdx)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"interface")," ",Object(s.mdx)("span",Object.assign({parentName:"code"},{className:"token class-name"}),"Comparable"),Object(s.mdx)("span",Object.assign({parentName:"code"},{className:"token generics"}),Object(s.mdx)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"<"),Object(s.mdx)("span",Object.assign({parentName:"span"},{className:"token class-name"}),"T"),Object(s.mdx)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">"))," ",Object(s.mdx)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(s.mdx)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"public")," ",Object(s.mdx)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"int")," ",Object(s.mdx)("span",Object.assign({parentName:"code"},{className:"token function"}),"compareTo"),Object(s.mdx)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(s.mdx)("span",Object.assign({parentName:"code"},{className:"token class-name"}),"T")," object",Object(s.mdx)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),Object(s.mdx)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(s.mdx)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}")))),Object(s.mdx)("p",null,"As observed, this interface is parameterized (generics) and it has a single method ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"compareTo()")," that allows two objects of a same type to be compared with each other. The important point here is the value returned by this method: an integer number indicates the comparison result of two objects. "),Object(s.mdx)("p",null,"Rules to remember:\ncompare value = 0: two objects are equal.\ncompare value > 0: the first object (the current object) is greater than the second one.\ncompare value < 0: the first object is less than the second one."),Object(s.mdx)("p",null,"Collections are sorted by natural ordering of its elements:"),Object(s.mdx)("ul",null,Object(s.mdx)("li",{parentName:"ul"},"The natural ordering of String objects is alphabetic order."),Object(s.mdx)("li",{parentName:"ul"},"The natural ordering of Integer objects is alphanumeric order."),Object(s.mdx)("li",{parentName:"ul"},"The natural ordering of Date objects is chronological order.")),Object(s.mdx)(m,{mdxType:"Seperator"}),Object(s.mdx)("div",{className:"gatsby-highlight","data-language":"text"},Object(s.mdx)("pre",Object.assign({parentName:"div"},{className:"language-text"}),Object(s.mdx)("code",Object.assign({parentName:"pre"},{className:"language-text"}),"Q)  How Set interface implemented classes like HashSet, LinkedHashSet, TreeSet etc. achieve this uniqueness?"))),Object(s.mdx)("p",null,"To add an element to ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"Set")," we need to use ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"add()")," method. ",Object(s.mdx)("em",{parentName:"p"},"add()")," method returns ",Object(s.mdx)("em",{parentName:"p"},"false")," when we try to add a duplicate element which indicates element is not added to set."),Object(s.mdx)(i,{mdxType:"Todo"},"Examples - https://www.geeksforgeeks.org/internal-working-of-sethashset-in-java/"),Object(s.mdx)(m,{mdxType:"Seperator"}),Object(s.mdx)("div",{className:"gatsby-highlight","data-language":"text"},Object(s.mdx)("pre",Object.assign({parentName:"div"},{className:"language-text"}),Object(s.mdx)("code",Object.assign({parentName:"pre"},{className:"language-text"}),"Q) Difference between ArrayList and Vector?"))),Object(s.mdx)("p",null,Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"java.util.Vector")," came along with the first version of java development kit (JDK). ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"java.util.ArrayList")," was introduced in java version1.2, as part of java collections framework."),Object(s.mdx)("p",null,Object(s.mdx)("strong",{parentName:"p"},"All the methods of Vector is synchronized. But, the methods of ArrayList is not synchronized.")," All the new implementations of java collection framework is not synchronized."),Object(s.mdx)("p",null,Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"Vector")," and ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"ArrayList")," both uses Array internally as data structure. They are dynamically resizable. Difference is in the way they are internally resized. By default, ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"Vector")," doubles the size of its array when its size is increased. But, ",Object(s.mdx)("code",Object.assign({parentName:"p"},{className:"language-text"}),"ArrayList")," increases by half of its size when its size is increased."),Object(s.mdx)("p",null,"Therefore as per Java API the only main difference is, Vector’s methods are synchronized and ArrayList’s methods are not synchronized."),Object(s.mdx)(m,{mdxType:"Seperator"}),Object(s.mdx)("div",{className:"gatsby-highlight","data-language":"text"},Object(s.mdx)("pre",Object.assign({parentName:"div"},{className:"language-text"}),Object(s.mdx)("code",Object.assign({parentName:"pre"},{className:"language-text"}),"Q) Difference between HashMap and HashTable?"))),Object(s.mdx)(i,{mdxType:"Todo"},"Complete this section"),Object(s.mdx)(m,{mdxType:"Seperator"}),Object(s.mdx)("div",{className:"gatsby-highlight","data-language":"text"},Object(s.mdx)("pre",Object.assign({parentName:"div"},{className:"language-text"}),Object(s.mdx)("code",Object.assign({parentName:"pre"},{className:"language-text"}),"Q) Difference between Enumeration and Iterator?"))),Object(s.mdx)(i,{mdxType:"Todo"},"Complete this section"),Object(s.mdx)(m,{mdxType:"Seperator"}),Object(s.mdx)("h2",null,"References"),Object(s.mdx)("ul",null,Object(s.mdx)("li",{parentName:"ul"},"Flowchart referred from - ",Object(s.mdx)("a",{href:"https://i.stack.imgur.com/GfpyN.png",target:"_blank"},Object(s.mdx)("a",Object.assign({parentName:"li"},{href:"https://i.stack.imgur.com/GfpyN.png"}),"https://i.stack.imgur.com/GfpyN.png"))),Object(s.mdx)("li",{parentName:"ul"},"Collections summarized table referred from - ",Object(s.mdx)("a",{href:"https://www.codejava.net/java-core/collections/java-collections-framework-summary-table"},Object(s.mdx)("a",Object.assign({parentName:"li"},{href:"https://www.codejava.net/java-core/collections/java-collections-framework-summary-table"}),"https://www.codejava.net/java-core/collections/java-collections-framework-summary-table"))),Object(s.mdx)("li",{parentName:"ul"},"Oracle JavaSE - ",Object(s.mdx)("a",{href:"https://docs.oracle.com/javase/8/docs/technotes/guides/collections/reference.html",target:"_blank"},"Outline of the Collections Framework"))))}l.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-content-articles-todo-java-java-collections-quick-reference-index-md-34845c72735976b6095d.js.map