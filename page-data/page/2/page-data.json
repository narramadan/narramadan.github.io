{
    "componentChunkName": "component---src-templates-blog-list-tsx",
    "path": "/page/2",
    "result": {"data":{"site":{"siteMetadata":{"title":"2much2learn.com"}},"sitePage":{"path":"/offline-plugin-app-shell-fallback/"},"allMdx":{"edges":[{"node":{"excerpt":"What is Reactive Reactive  in the context of software development and design, they generally mean one of below things: Reactive Systems  (architecture and design) Reactive Programming  (declarative event-based) Functional Reactive Programming  (FRP) Reactive Streams  (Standard) Reactive System The…","fields":{"slug":"/understanding-reactive-programming/"},"frontmatter":{"date":"16 <span> Aug 2020 </span>","title":"Understanding Reactive Programming and Reactive Streams","description":"A brief notes on getting us familiarized with the concepts of Reactive Programming and Reactive Streams","category":"programming","tags":["Programming","Java","Reactive Programming","Reactive Streams","featured"],"cover":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/255e6cef6fc105c68e187ea15c693c91/4e07d/reactive-banner-1200x690.png","srcSet":"/static/255e6cef6fc105c68e187ea15c693c91/7525a/reactive-banner-1200x690.png 293w,\n/static/255e6cef6fc105c68e187ea15c693c91/43e72/reactive-banner-1200x690.png 585w,\n/static/255e6cef6fc105c68e187ea15c693c91/4e07d/reactive-banner-1200x690.png 1170w","sizes":"(min-width: 1170px) 1170px, 100vw"},"sources":[{"srcSet":"/static/255e6cef6fc105c68e187ea15c693c91/aa794/reactive-banner-1200x690.webp 293w,\n/static/255e6cef6fc105c68e187ea15c693c91/c0f2d/reactive-banner-1200x690.webp 585w,\n/static/255e6cef6fc105c68e187ea15c693c91/845c7/reactive-banner-1200x690.webp 1170w","type":"image/webp","sizes":"(min-width: 1170px) 1170px, 100vw"}]},"width":1170,"height":673}}}}}},{"node":{"excerpt":"Introduction Recently I had to stumble upon a requirement to optimize my code to perform parallel calls to multiple downstream systems returning different response objects and stitch to a specific value object.  There is no common interface implemented by these different response objects and cannot…","fields":{"slug":"/handle-different-return-types-from-future-and-executeservice/"},"frontmatter":{"date":"11 <span> Jul 2020 </span>","title":"How to handle different return types from Future and ExecuteService invokeAll() ?","description":"A way to handle different return types from Future and ExecuteService invokeAll()","category":"titbits","tags":["titbit","java","executorservice"],"cover":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/55fdfdf5a14bf10c3475e5d41bfca53e/4e07d/titbits-banner-1200x690.png","srcSet":"/static/55fdfdf5a14bf10c3475e5d41bfca53e/7525a/titbits-banner-1200x690.png 293w,\n/static/55fdfdf5a14bf10c3475e5d41bfca53e/43e72/titbits-banner-1200x690.png 585w,\n/static/55fdfdf5a14bf10c3475e5d41bfca53e/4e07d/titbits-banner-1200x690.png 1170w","sizes":"(min-width: 1170px) 1170px, 100vw"},"sources":[{"srcSet":"/static/55fdfdf5a14bf10c3475e5d41bfca53e/aa794/titbits-banner-1200x690.webp 293w,\n/static/55fdfdf5a14bf10c3475e5d41bfca53e/c0f2d/titbits-banner-1200x690.webp 585w,\n/static/55fdfdf5a14bf10c3475e5d41bfca53e/845c7/titbits-banner-1200x690.webp 1170w","type":"image/webp","sizes":"(min-width: 1170px) 1170px, 100vw"}]},"width":1170,"height":673}}}}}},{"node":{"excerpt":"Introduction An  MD5  checksum is a 32-character hexadecimal number that verifies 128-bit  MD5   hashes  on a file. If two files have the same MD5 checksum value, then there is a high probability that the two files are the same. However, it is very unlikely that any two non-identical files in the…","fields":{"slug":"/validating-integrity-of-files-with-md5-checksum/"},"frontmatter":{"date":"27 <span> Jun 2020 </span>","title":"Validating integrity of files with md5 checksum","description":"Commands for different OS to validate integrity of files with md5 checksum","category":"titbits","tags":["titbit","checksum","md5sum","certutil"],"cover":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/55fdfdf5a14bf10c3475e5d41bfca53e/4e07d/titbits-banner-1200x690.png","srcSet":"/static/55fdfdf5a14bf10c3475e5d41bfca53e/7525a/titbits-banner-1200x690.png 293w,\n/static/55fdfdf5a14bf10c3475e5d41bfca53e/43e72/titbits-banner-1200x690.png 585w,\n/static/55fdfdf5a14bf10c3475e5d41bfca53e/4e07d/titbits-banner-1200x690.png 1170w","sizes":"(min-width: 1170px) 1170px, 100vw"},"sources":[{"srcSet":"/static/55fdfdf5a14bf10c3475e5d41bfca53e/aa794/titbits-banner-1200x690.webp 293w,\n/static/55fdfdf5a14bf10c3475e5d41bfca53e/c0f2d/titbits-banner-1200x690.webp 585w,\n/static/55fdfdf5a14bf10c3475e5d41bfca53e/845c7/titbits-banner-1200x690.webp 1170w","type":"image/webp","sizes":"(min-width: 1170px) 1170px, 100vw"}]},"width":1170,"height":673}}}}}},{"node":{"excerpt":"Introduction In real world, any production incident soon turns out to be scary when we have to go through  hell lot  of logs. Some times it will be very difficult to replicate the issue by analyzing data is scattered across different log files. This is when Centralized Logging comes to rescue to…","fields":{"slug":"/centralized-logging-with-kafka-and-elk-stack/"},"frontmatter":{"date":"06 <span> Jun 2020 </span>","title":"Configuring Centralized logging with Kafka and ELK stack","description":"A detailed step by step walk through on configuring Centralized logging with Kafka and ELK stack","category":"setup","tags":["Kafka","ELK","Centralized Logging","Setup","featured"],"cover":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/b6c8feead05d24ce77c7763bc0e8d959/4e07d/kafka-elk-banner-1200x690.png","srcSet":"/static/b6c8feead05d24ce77c7763bc0e8d959/7525a/kafka-elk-banner-1200x690.png 293w,\n/static/b6c8feead05d24ce77c7763bc0e8d959/43e72/kafka-elk-banner-1200x690.png 585w,\n/static/b6c8feead05d24ce77c7763bc0e8d959/4e07d/kafka-elk-banner-1200x690.png 1170w","sizes":"(min-width: 1170px) 1170px, 100vw"},"sources":[{"srcSet":"/static/b6c8feead05d24ce77c7763bc0e8d959/aa794/kafka-elk-banner-1200x690.webp 293w,\n/static/b6c8feead05d24ce77c7763bc0e8d959/c0f2d/kafka-elk-banner-1200x690.webp 585w,\n/static/b6c8feead05d24ce77c7763bc0e8d959/845c7/kafka-elk-banner-1200x690.webp 1170w","type":"image/webp","sizes":"(min-width: 1170px) 1170px, 100vw"}]},"width":1170,"height":673}}}}}},{"node":{"excerpt":"Introduction This article is extension of  Creating RESTful API + Event-driven Microservice with Quarkus . We shall go through steps on introducing new REST-endpoint for uploading Catalogue Item Image to  MinIO  which is a Cloud Native  Object Storage  service. Article includes detailed steps on…","fields":{"slug":"/uploading-files-to-cloud-native-object-store-from-quarkus-restful-api/"},"frontmatter":{"date":"10 <span> May 2020 </span>","title":"Uploading files to MinIO Cloud Native Object Store from Quarkus RESTful API","description":"A detailed Step by Step guide on Uploading files to MinIO Cloud Native Object Store from Quarkus RESTful API","category":"microservice","tags":["Java","Quarkus","MinIO","Object Store","Microservice","featured"],"cover":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/3ff94784e3a4821200335f943526eae5/4e07d/crud-quarkus-upload-minio-1200x690.png","srcSet":"/static/3ff94784e3a4821200335f943526eae5/7525a/crud-quarkus-upload-minio-1200x690.png 293w,\n/static/3ff94784e3a4821200335f943526eae5/43e72/crud-quarkus-upload-minio-1200x690.png 585w,\n/static/3ff94784e3a4821200335f943526eae5/4e07d/crud-quarkus-upload-minio-1200x690.png 1170w","sizes":"(min-width: 1170px) 1170px, 100vw"},"sources":[{"srcSet":"/static/3ff94784e3a4821200335f943526eae5/aa794/crud-quarkus-upload-minio-1200x690.webp 293w,\n/static/3ff94784e3a4821200335f943526eae5/c0f2d/crud-quarkus-upload-minio-1200x690.webp 585w,\n/static/3ff94784e3a4821200335f943526eae5/845c7/crud-quarkus-upload-minio-1200x690.webp 1170w","type":"image/webp","sizes":"(min-width: 1170px) 1170px, 100vw"}]},"width":1170,"height":673}}}}}},{"node":{"excerpt":"Introduction This article focuses on implementing React based frontend application to perform CRUD operations on backend API which exposes these operations as RESTful APIs. There are lot of online learning materials and blog posts providing greater insights on getting started with implementing React…","fields":{"slug":"/dockerizing-react-crud-restful-api-integrated-application/"},"frontmatter":{"date":"03 <span> May 2020 </span>","title":"A Step by Step guide on Implementing & Dockerizing React CRUD RESTful API Integrated Application","description":"A detailed Step by Step guide on Implementing & Dockerizing React CRUD RESTful API Integrated Application","category":"frontend","tags":["React","Axios","CRUD","Docker","featured"],"cover":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/4278f450c9195ba2da53733946119f93/4e07d/frontend-banner-1200x690.png","srcSet":"/static/4278f450c9195ba2da53733946119f93/7525a/frontend-banner-1200x690.png 293w,\n/static/4278f450c9195ba2da53733946119f93/43e72/frontend-banner-1200x690.png 585w,\n/static/4278f450c9195ba2da53733946119f93/4e07d/frontend-banner-1200x690.png 1170w","sizes":"(min-width: 1170px) 1170px, 100vw"},"sources":[{"srcSet":"/static/4278f450c9195ba2da53733946119f93/aa794/frontend-banner-1200x690.webp 293w,\n/static/4278f450c9195ba2da53733946119f93/c0f2d/frontend-banner-1200x690.webp 585w,\n/static/4278f450c9195ba2da53733946119f93/845c7/frontend-banner-1200x690.webp 1170w","type":"image/webp","sizes":"(min-width: 1170px) 1170px, 100vw"}]},"width":1170,"height":673}}}}}}]}},"pageContext":{"limit":6,"skip":6,"numPages":4,"currentPage":2}},
    "staticQueryHashes": ["1078049558","1095007180"]}