{
    "componentChunkName": "component---src-templates-blog-post-tsx",
    "path": "/enabling-https-in-multi-module-spring-boot-microservices-with-lets-encrypt/",
    "result": {"data":{"site":{"siteMetadata":{"siteUrl":"https://2much2learn.com"}},"mdx":{"id":"9f37734b-436e-55df-8ba5-813a204bed9f","excerpt":"Introduction Technology stack for implementing the Restful APIs Bootstrapping Project with Multi Module Spring Boot Application Let's Encrypt Conclusion","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"templateKey\": \"article\",\n  \"published\": false,\n  \"displayComments\": true,\n  \"showAuthorInfo\": true,\n  \"showSideBar\": false,\n  \"author\": \"narramadan\",\n  \"title\": \"Enabling HTTPS in Multi Module Spring Boot Microservices with Let's Encrypt\",\n  \"description\": \"A detailed step by step guide on enabling HTTPS in Multi Module Spring Boot Microservices with Let's Encrypt\",\n  \"date\": \"2021-01-10T15:46:37.121Z\",\n  \"updated\": \"2021-01-10T15:46:37.121Z\",\n  \"cover\": \"../../../images/blog-banners/springboot-https-docker-k8s-banner-1200x690.png\",\n  \"category\": \"microservice\",\n  \"tags\": [\"Java\", \"Spring Boot\", \"Spring Cloud\", \"Microservice\", \"featured\"],\n  \"keywords\": [\"Step by Step guide using Spring Boot\", \"Spring Boot HTTPS\", \"Spring Cloud\", \"Spring Boot\", \"Spring Boot Secure\", \"Maven\", \"Java\", \"Java8\", \"Gradle\", \"Spring Boot Lets Encrypt\", \"Spring Boot Certbot\", \"Spring Boot Docker HTTPs\", \"Spring Boot Kubernetes HTTPs\", \"Gradle Multi Module Spring Boot Project\", \"Step by Step guide\", \"narra.madan\", \"narramadan\", \"narra.madan@outlook.com\", \"Madan Narra\", \"Narra Madan\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"introduction\"\n  }, \"Introduction\"), mdx(\"h2\", {\n    \"id\": \"technology-stack-for-implementing-the-restful-apis\"\n  }, \"Technology stack for implementing the Restful APIs\"), mdx(\"h2\", {\n    \"id\": \"bootstrapping-project-with-multi-module-spring-boot-application\"\n  }, \"Bootstrapping Project with Multi Module Spring Boot Application\"), mdx(\"h2\", {\n    \"id\": \"lets-encrypt\"\n  }, \"Let's Encrypt\"), mdx(\"h2\", {\n    \"id\": \"conclusion\"\n  }, \"Conclusion\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/enabling-https-in-multi-module-spring-boot-microservices-with-lets-encrypt/"},"frontmatter":{"date":"2021-01-10T15:46:37.121Z","updated":"2021-01-10T15:46:37.121Z","published":false,"showSideBar":false,"title":"Enabling HTTPS in Multi Module Spring Boot Microservices with Let's Encrypt","description":"A detailed step by step guide on enabling HTTPS in Multi Module Spring Boot Microservices with Let's Encrypt","category":"microservice","tags":["Java","Spring Boot","Spring Cloud","Microservice","featured"],"keywords":["Step by Step guide using Spring Boot","Spring Boot HTTPS","Spring Cloud","Spring Boot","Spring Boot Secure","Maven","Java","Java8","Gradle","Spring Boot Lets Encrypt","Spring Boot Certbot","Spring Boot Docker HTTPs","Spring Boot Kubernetes HTTPs","Gradle Multi Module Spring Boot Project","Step by Step guide","narra.madan","narramadan","narra.madan@outlook.com","Madan Narra","Narra Madan"],"cover":{"publicURL":"/static/a1b8180b0955245fdfab0ff6c25ad628/springboot-https-docker-k8s-banner-1200x690.png","childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/a1b8180b0955245fdfab0ff6c25ad628/8f48e/springboot-https-docker-k8s-banner-1200x690.png","srcSet":"/static/a1b8180b0955245fdfab0ff6c25ad628/e0688/springboot-https-docker-k8s-banner-1200x690.png 300w,\n/static/a1b8180b0955245fdfab0ff6c25ad628/8a3de/springboot-https-docker-k8s-banner-1200x690.png 600w,\n/static/a1b8180b0955245fdfab0ff6c25ad628/8f48e/springboot-https-docker-k8s-banner-1200x690.png 1200w","sizes":"(min-width: 1200px) 1200px, 100vw"},"sources":[{"srcSet":"/static/a1b8180b0955245fdfab0ff6c25ad628/b2ca0/springboot-https-docker-k8s-banner-1200x690.webp 300w,\n/static/a1b8180b0955245fdfab0ff6c25ad628/2293f/springboot-https-docker-k8s-banner-1200x690.webp 600w,\n/static/a1b8180b0955245fdfab0ff6c25ad628/f21b3/springboot-https-docker-k8s-banner-1200x690.webp 1200w","type":"image/webp","sizes":"(min-width: 1200px) 1200px, 100vw"}]},"width":1200,"height":690}}},"showAuthorInfo":true,"author":{"order":1,"alias":"narramadan","name":"Madan Narra","image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/static/4ceb2bd36c427b7f464700ff3ebfcac5/3d685/narramadan.jpg","srcSet":"/static/4ceb2bd36c427b7f464700ff3ebfcac5/6b8ed/narramadan.jpg 53w,\n/static/4ceb2bd36c427b7f464700ff3ebfcac5/be7cf/narramadan.jpg 105w,\n/static/4ceb2bd36c427b7f464700ff3ebfcac5/3d685/narramadan.jpg 210w,\n/static/4ceb2bd36c427b7f464700ff3ebfcac5/0cf6a/narramadan.jpg 420w","sizes":"(min-width: 210px) 210px, 100vw"},"sources":[{"srcSet":"/static/4ceb2bd36c427b7f464700ff3ebfcac5/467d2/narramadan.webp 53w,\n/static/4ceb2bd36c427b7f464700ff3ebfcac5/8cf05/narramadan.webp 105w,\n/static/4ceb2bd36c427b7f464700ff3ebfcac5/791ae/narramadan.webp 210w,\n/static/4ceb2bd36c427b7f464700ff3ebfcac5/cfb34/narramadan.webp 420w","type":"image/webp","sizes":"(min-width: 210px) 210px, 100vw"}]},"width":210,"height":210}}},"jobTitle":"Software developer, Consultant & Architect","description":"Madan is a software developer, writer, and ex-failed-startup co-founder.\nHe has over 10+ years of experience building scalable and distributed systems using Java, JavaScript, Node.js. He writes about software design and architecture best practices with Java and is especially passionate about Microservices, API Development, Distributed Applications and Frontend Technologies.\n","social":{"facebook":"https://www.facebook.com/madan.narra","github":"https://github.com/narramadan","instagram":"https://instagram.com/narramadan","linkedin":"https://www.linkedin.com/in/narramadan","twitter":"https://twitter.com/narramadan"}}}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/rest-api-design-first-development-with-apicurio/"},"frontmatter":{"title":"RESTful API Design-first development with Apicurio Studio","category":"designfirst","tags":["OpenAPI","Apicurio","featured"],"cover":{"publicURL":"/static/f96532de4730f710146ceca394826f44/designfirst-apicurio-1200x690.png","childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/f96532de4730f710146ceca394826f44/68daf/designfirst-apicurio-1200x690.png","srcSet":"/static/f96532de4730f710146ceca394826f44/c29fd/designfirst-apicurio-1200x690.png 93w,\n/static/f96532de4730f710146ceca394826f44/fa500/designfirst-apicurio-1200x690.png 185w,\n/static/f96532de4730f710146ceca394826f44/68daf/designfirst-apicurio-1200x690.png 370w,\n/static/f96532de4730f710146ceca394826f44/1ba41/designfirst-apicurio-1200x690.png 740w","sizes":"(min-width: 370px) 370px, 100vw"},"sources":[{"srcSet":"/static/f96532de4730f710146ceca394826f44/fb219/designfirst-apicurio-1200x690.webp 93w,\n/static/f96532de4730f710146ceca394826f44/f88f2/designfirst-apicurio-1200x690.webp 185w,\n/static/f96532de4730f710146ceca394826f44/196cb/designfirst-apicurio-1200x690.webp 370w,\n/static/f96532de4730f710146ceca394826f44/ea39c/designfirst-apicurio-1200x690.webp 740w","type":"image/webp","sizes":"(min-width: 370px) 370px, 100vw"}]},"width":370,"height":220}}}}}},{"node":{"fields":{"slug":"/setting-up-cassandra-with-docker/"},"frontmatter":{"title":"Setting up Cassandra with Docker","category":"setup","tags":["Cassandra","Docker","Containerization","featured"],"cover":{"publicURL":"/static/08812a7cb2b99d38f672cf8bf7a18965/setup-banner-1200x690.png","childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/08812a7cb2b99d38f672cf8bf7a18965/68daf/setup-banner-1200x690.png","srcSet":"/static/08812a7cb2b99d38f672cf8bf7a18965/c29fd/setup-banner-1200x690.png 93w,\n/static/08812a7cb2b99d38f672cf8bf7a18965/fa500/setup-banner-1200x690.png 185w,\n/static/08812a7cb2b99d38f672cf8bf7a18965/68daf/setup-banner-1200x690.png 370w,\n/static/08812a7cb2b99d38f672cf8bf7a18965/1ba41/setup-banner-1200x690.png 740w","sizes":"(min-width: 370px) 370px, 100vw"},"sources":[{"srcSet":"/static/08812a7cb2b99d38f672cf8bf7a18965/fb219/setup-banner-1200x690.webp 93w,\n/static/08812a7cb2b99d38f672cf8bf7a18965/f88f2/setup-banner-1200x690.webp 185w,\n/static/08812a7cb2b99d38f672cf8bf7a18965/196cb/setup-banner-1200x690.webp 370w,\n/static/08812a7cb2b99d38f672cf8bf7a18965/ea39c/setup-banner-1200x690.webp 740w","type":"image/webp","sizes":"(min-width: 370px) 370px, 100vw"}]},"width":370,"height":220}}}}}},{"node":{"fields":{"slug":"/service-registration-and-discovery-in-spring-boot-microservices-with-spring-cloud-consul/"},"frontmatter":{"title":"Service Registration and Discovery in Spring Boot Microservices with Spring Cloud Consul","category":"microservice","tags":["Java","Spring Boot","Spring Cloud","Microservice","featured"],"cover":{"publicURL":"/static/7765928c41ea8efa3fc2b3d2841678be/springboot-consul-banner-1200x690.png","childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/7765928c41ea8efa3fc2b3d2841678be/68daf/springboot-consul-banner-1200x690.png","srcSet":"/static/7765928c41ea8efa3fc2b3d2841678be/c29fd/springboot-consul-banner-1200x690.png 93w,\n/static/7765928c41ea8efa3fc2b3d2841678be/fa500/springboot-consul-banner-1200x690.png 185w,\n/static/7765928c41ea8efa3fc2b3d2841678be/68daf/springboot-consul-banner-1200x690.png 370w,\n/static/7765928c41ea8efa3fc2b3d2841678be/1ba41/springboot-consul-banner-1200x690.png 740w","sizes":"(min-width: 370px) 370px, 100vw"},"sources":[{"srcSet":"/static/7765928c41ea8efa3fc2b3d2841678be/fb219/springboot-consul-banner-1200x690.webp 93w,\n/static/7765928c41ea8efa3fc2b3d2841678be/f88f2/springboot-consul-banner-1200x690.webp 185w,\n/static/7765928c41ea8efa3fc2b3d2841678be/196cb/springboot-consul-banner-1200x690.webp 370w,\n/static/7765928c41ea8efa3fc2b3d2841678be/ea39c/springboot-consul-banner-1200x690.webp 740w","type":"image/webp","sizes":"(min-width: 370px) 370px, 100vw"}]},"width":370,"height":220}}}}}}]},"authors":{"group":[{"fieldValue":"gyayakdoshi","totalCount":1},{"fieldValue":"narramadan","totalCount":21}]}},"pageContext":{"slug":"/enabling-https-in-multi-module-spring-boot-microservices-with-lets-encrypt/","previous":{"fields":{"slug":"/centralized-configuration-in-spring-boot-microservices/"},"frontmatter":{"title":"Centralized Configuration in Spring Boot Microservices with Spring Cloud Config","published":false,"author":{"order":1,"alias":"narramadan","name":"Madan Narra","image":{"relativePath":"authors/narramadan.jpg"},"jobTitle":"Software developer, Consultant & Architect","description":"Madan is a software developer, writer, and ex-failed-startup co-founder.\nHe has over 10+ years of experience building scalable and distributed systems using Java, JavaScript, Node.js. He writes about software design and architecture best practices with Java and is especially passionate about Microservices, API Development, Distributed Applications and Frontend Technologies.\n","social":{"facebook":"https://www.facebook.com/madan.narra","github":"https://github.com/narramadan","instagram":"https://instagram.com/narramadan","linkedin":"https://www.linkedin.com/in/narramadan","twitter":"https://twitter.com/narramadan"}},"category":"microservice","tags":["Java","Spring Boot","Spring Cloud","Microservice","featured"]}},"next":{"fields":{"slug":"/java-frequently-used-terms-to-know/"},"frontmatter":{"title":"Curated list of frequently used terms every Java developer needs to memorize","published":false,"author":{"order":4,"alias":"nishithakapuluru","name":"Nishitha Kapuluru","image":{"relativePath":"authors/nishitha.png"},"jobTitle":"Software developer","description":"Nishitha is a Java developer with 6 years of experience in developing web applications using Java technologies across Financial and Networking domains.\nShe has good experience in application development with technologies like Java 8, Spring boot, Spring MVC, RESTful API and Hibernate.\nShe is curious to learn new technologies and enjoys sharing her learnings.\n","social":{"facebook":"https://www.facebook.com/nishitha.1993","github":"https://github.com/NishithaKapu","instagram":null,"linkedin":"https://www.linkedin.com/in/nishitha-kapuluru-68ab5348/","twitter":null}},"category":"cheatsheets","tags":["java","cheatsheets"]}},"tag":["Java","Spring Boot","Spring Cloud","Microservice","featured"]}},
    "staticQueryHashes": ["1078049558","1095007180","1419901196"]}