{"version":3,"file":"component---src-templates-blog-list-tsx-cd55d5f5b886d522d259.js","mappings":"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","sources":["webpack://2much2learn.com/./src/components/PostCardModern/postCardModern.style.tsx","webpack://2much2learn.com/./src/components/PostCardModern/postCardModern.tsx","webpack://2much2learn.com/./src/components/Pagination/pagination.style.tsx","webpack://2much2learn.com/./src/components/Pagination/pagination.tsx","webpack://2much2learn.com/./src/templates/blog-list.tsx","webpack://2much2learn.com/./src/templates/templates.style.tsx"],"sourcesContent":["import styled from \"styled-components\"\r\nimport { themeGet } from '@styled-system/theme-get';\r\n\r\nexport const PostCardModernWrapper = styled.div`\r\n  position: relative;\r\n`\r\n\r\nexport const PostPreview = styled.div`\r\n  margin-bottom: 30px;\r\n  position: relative;\r\n  min-height: 150px;\r\n  img {\r\n    border-radius: 3px;\r\n  }\r\n\r\n  &:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    width: 80%;\r\n    height: 80%;\r\n    background-color: #757575;\r\n    bottom: 0;\r\n    left: 10%;\r\n    filter: blur(15px);\r\n  }\r\n`\r\n\r\nexport const PostDetails = styled.div``\r\n\r\nexport const PostDate = styled.div`\r\n  position: absolute;\r\n  width: 75px;\r\n  height: 75px;\r\n  top: 30px;\r\n  left: 30px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #fff;\r\n  border-radius: 6px;\r\n  font-size: 30px;\r\n  font-weight: bold;\r\n  line-height: 1;\r\n  pointer-events: none;\r\n  z-index: 1;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  > span {\r\n    font-size: 13px;\r\n    font-weight: normal;\r\n    line-height: 1;\r\n    margin-top: 3px;\r\n  }\r\n`\r\n\r\nexport const PostCategory = styled.div`\r\n  position: absolute;\r\n  width: 200px;\r\n  height: 30px;\r\n  top: 30px;\r\n  right: 30px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #fff;\r\n  border-radius: 6px;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  line-height: 1;\r\n  pointer-events: none;\r\n  z-index: 1;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  > span {\r\n    font-size: 13px;\r\n    font-weight: normal;\r\n    line-height: 1;\r\n    margin-top: 3px;\r\n  }\r\n`\r\n\r\nexport const PostTitle = styled.h2`\r\n  font-size: 21px;\r\n  font-weight: 700;\r\n  color: ${themeGet(\"colors.textColor\", \"#292929\")};\r\n  line-height: 1.53;\r\n  margin-bottom: 10px;\r\n  font-family: ${themeGet(\"fontFamily.0\")};\r\n  a {\r\n    color: ${themeGet(\"colors.textColor\", \"#292929\")};\r\n  }\r\n  @media (max-width: 1200px) {\r\n    font-size: 20px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    font-size: 19px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    font-size: 18px;\r\n  }\r\n`\r\n\r\nexport const Excerpt = styled.p`\r\n  font-size: ${themeGet(\"fontSizes.3\", \"15\")}px;\r\n  color: ${themeGet(\"textColor\", \"#292929\")};\r\n  font-weight: 400;\r\n  line-height: 2;\r\n  margin-bottom: 0;\r\n  @media (max-width: 990px) {\r\n    font-size: 14px;\r\n  }\r\n`\r\n\r\nexport const PostTags = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n\r\n  a {\r\n    display: block;\r\n    margin-right: 30px;\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n    color: ${themeGet(\"primary\", \"#D10068\")};\r\n    @media (max-width: 990px) {\r\n      font-size: 13px;\r\n      margin-right: 25px;\r\n    }\r\n  }\r\n`\r\n","import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport _ from \"lodash\"\r\nimport { GatsbyImage } from \"gatsby-plugin-image\"\r\nimport {\r\n  PostCardModernWrapper,\r\n  PostPreview,\r\n  PostDetails,\r\n  PostDate,\r\n  PostCategory,\r\n  PostTitle,\r\n  Excerpt,\r\n  PostTags,\r\n} from \"./postCardModern.style\"\r\n\r\ninterface PostCardModernProps {\r\n  image?: any\r\n  title: string\r\n  description?: string\r\n  url: string\r\n  date?: string\r\n  category: any\r\n  tags?: []\r\n  className?: string\r\n  imageType?: \"fixed\" | \"fluid\"\r\n  placeholderBG?: string\r\n}\r\n\r\nconst PostCardModern: React.FunctionComponent<PostCardModernProps> = ({\r\n  image,\r\n  title,\r\n  description,\r\n  url,\r\n  date,\r\n  category,\r\n  tags,\r\n  className,\r\n  imageType,\r\n  placeholderBG,\r\n  ...props\r\n}) => {\r\n  // Add all classs to an array\r\n  const addAllClasses = [\"post_card_modern\"]\r\n\r\n  // className prop checking\r\n  if (className) {\r\n    addAllClasses.push(className)\r\n  }\r\n\r\n  return (\r\n    <PostCardModernWrapper className={addAllClasses.join(\" \")} {...props}>\r\n      {image == null ? null : (\r\n        <PostPreview className=\"post_preview\">\r\n          <Link to={url}>\r\n              <GatsbyImage\r\n                image={image}\r\n                alt=\"post preview\"\r\n                backgroundColor={placeholderBG}\r\n              />\r\n          </Link>\r\n          {date && (\r\n            <PostDate\r\n              dangerouslySetInnerHTML={{\r\n                __html: date,\r\n              }}\r\n              className=\"post_date\"\r\n            />\r\n          )}\r\n          {category && (\r\n            <PostCategory\r\n              dangerouslySetInnerHTML={{\r\n                __html: category.name,\r\n              }}\r\n              className=\"post_category\"\r\n            />\r\n          )}\r\n        </PostPreview>\r\n      )}\r\n\r\n      <PostDetails className=\"post_details\">\r\n        {tags == null ? null : (\r\n          <PostTags className=\"post_tags\">\r\n            {tags.map((tag: string, index: number) => (\r\n              <Link key={index} to={`/tags/${_.kebabCase(tag)}/`}>\r\n                {`#${tag}`}\r\n              </Link>\r\n            ))}\r\n          </PostTags>\r\n        )}\r\n        <PostTitle className=\"post_title\">\r\n          <Link to={url}>{title}</Link>\r\n        </PostTitle>\r\n        {description && (\r\n          <Excerpt\r\n            dangerouslySetInnerHTML={{\r\n              __html: description,\r\n            }}\r\n            className=\"excerpt\"\r\n          />\r\n        )}\r\n      </PostDetails>\r\n    </PostCardModernWrapper>\r\n  )\r\n}\r\n\r\nPostCardModern.defaultProps = {\r\n  imageType: \"fluid\",\r\n}\r\n\r\nexport default PostCardModern\r\n","import styled from 'styled-components';\r\nimport { themeGet } from '@styled-system/theme-get';\r\n\r\nexport const PaginationWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const PrevPage = styled.div`\r\n  min-width: 32px;\r\n  a {\r\n    width: 32px;\r\n    height: 32px;\r\n    color: ${themeGet('colors.textColor', '#292929')};\r\n    border-radius: 50%;\r\n    background-color: #f3f3f3;\r\n    font-size: 18px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    transition: 0.15s ease-in-out;\r\n    svg {\r\n      display: block;\r\n    }\r\n    &:hover {\r\n      color: #fff;\r\n      background-color: ${themeGet('colors.primary', '#D10068')};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const NextPage = styled.div`\r\n  min-width: 32px;\r\n  a {\r\n    width: 32px;\r\n    height: 32px;\r\n    color: ${themeGet('colors.textColor', '#292929')};\r\n    border-radius: 50%;\r\n    background-color: #f3f3f3;\r\n    font-size: 18px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    transition: 0.15s ease-in-out;\r\n    svg {\r\n      display: block;\r\n    }\r\n    &:hover {\r\n      color: #fff;\r\n      background-color: ${themeGet('colors.primary', '#D10068')};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PageNumber = styled.div``;\r\n","import * as React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport { IoMdArrowRoundBack, IoMdArrowRoundForward } from 'react-icons/io';\r\nimport {\r\n  PaginationWrapper,\r\n  PrevPage,\r\n  NextPage,\r\n  PageNumber,\r\n} from './pagination.style';\r\n\r\ntype PaginationProps = {\r\n  prevLink?: string | undefined | null | boolean;\r\n  nextLink?: string | undefined | null | boolean;\r\n  currentPage: string;\r\n  totalPage: string;\r\n  className?: string;\r\n};\r\n\r\nconst Pagination: React.FunctionComponent<PaginationProps> = ({\r\n  prevLink,\r\n  nextLink,\r\n  currentPage,\r\n  totalPage,\r\n  className,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <PaginationWrapper {...props} className={className}>\r\n      <PrevPage>\r\n        {prevLink && (\r\n          <Link to={`${prevLink}`} aria-label=\"Prev\">\r\n            <IoMdArrowRoundBack />\r\n          </Link>\r\n        )}\r\n      </PrevPage>\r\n\r\n      <PageNumber>{`Page ${currentPage} Of ${totalPage}`}</PageNumber>\r\n\r\n      <NextPage>\r\n        {nextLink && (\r\n          <Link to={`${nextLink}`} aria-label=\"Next\">\r\n            <IoMdArrowRoundForward />\r\n          </Link>\r\n        )}\r\n      </NextPage>\r\n    </PaginationWrapper>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import * as React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport PostCardModern from \"~/components/PostCardModern/postCardModern\"\r\nimport Pagination from \"~/components/Pagination/pagination\"\r\nimport Layout from \"~/components/layout\"\r\nimport SEO from \"~/components/seo\"\r\nimport _ from 'lodash'\r\nimport Categories from '~/utils/CategoryConstants'\r\n\r\nimport { BlogPostsWrapper, PostRow, PostGrid } from \"./templates.style\"\r\n\r\nconst BlogList = (props: any) => {\r\n  const { data } = props\r\n  const Posts = data.allMdx.edges\r\n  const { currentPage, numPages } = props.pageContext\r\n  const isFirst = currentPage === 1\r\n  const isLast = currentPage === numPages\r\n  const prevPage =\r\n    currentPage - 1 === 1 ? \"/page/1\" : `/page/${(currentPage - 1).toString()}`\r\n  const nextPage = `/page/${(currentPage + 1).toString()}`\r\n  const PrevLink = !isFirst && prevPage\r\n  const NextLink = !isLast && nextPage\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title={`Page ${currentPage}`} />\r\n\r\n      <BlogPostsWrapper>\r\n        <PostRow>\r\n          {Posts.map(({ node }: any) => {\r\n            //Random Placeholder Color\r\n            const placeholderColors = [\r\n              \"#55efc4\",\r\n              \"#81ecec\",\r\n              \"#74b9ff\",\r\n              \"#a29bfe\",\r\n              \"#ffeaa7\",\r\n              \"#fab1a0\",\r\n              \"#e17055\",\r\n              \"#0984e3\",\r\n              \"#badc58\",\r\n              \"#c7ecee\",\r\n            ]\r\n            const setColor =\r\n              placeholderColors[\r\n                Math.floor(Math.random() * placeholderColors.length)\r\n              ]\r\n            const categoryInfo =  _.get(Categories, node.frontmatter.category)\r\n            return (\r\n              <PostGrid>\r\n                <PostCardModern\r\n                  key={node.fields.slug}\r\n                  title={node.frontmatter.title || node.fields.slug}\r\n                  image={\r\n                    node.frontmatter.cover == null\r\n                      ? null\r\n                      : node.frontmatter.cover.childImageSharp.gatsbyImageData\r\n                  }\r\n                  url={node.fields.slug}\r\n                  description={node.frontmatter.description || node.excerpt}\r\n                  date={node.frontmatter.date}\r\n                  category={categoryInfo}\r\n                  tags={node.frontmatter.tags}\r\n                  placeholderBG={setColor}\r\n                />\r\n              </PostGrid>\r\n            )\r\n          })}\r\n        </PostRow>\r\n        <Pagination\r\n          prevLink={PrevLink}\r\n          nextLink={NextLink}\r\n          currentPage={`${currentPage}`}\r\n          totalPage={`${numPages}`}\r\n        />\r\n      </BlogPostsWrapper>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogList\r\n\r\nexport const pageQuery = graphql`\r\n  query($skip: Int!, $limit: Int!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    sitePage {\r\n      path\r\n    }\r\n    allMdx(\r\n      filter: {\r\n        frontmatter: {\r\n          templateKey: {eq: \"article\"},\r\n          published: {eq: true}\r\n        }\r\n      }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      limit: $limit\r\n      skip: $skip\r\n    ) {\r\n      edges {\r\n        node {\r\n          excerpt(pruneLength: 300)\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"DD [<span>] MMM YYYY [</span>]\")\r\n            title\r\n            description\r\n            category\r\n            tags\r\n            cover {\r\n              childImageSharp {\r\n                gatsbyImageData(\r\n                  width: 1170\r\n                  quality: 100\r\n                )\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import styled, { keyframes} from \"styled-components\"\r\nimport { themeGet } from '@styled-system/theme-get';\r\n\r\nexport const BlogPostsWrapper = styled.div`\r\n  margin: 0 auto;\r\n  padding-top: 120px;\r\n  position: relative;\r\n\r\n  @media (min-width: 990px) {\r\n    width: 900px;\r\n  }\r\n  @media (min-width: 1200px) {\r\n    width: 1050px;\r\n  }\r\n  @media (min-width: 1400px) {\r\n    width: 1170px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    padding: 80px 45px 0 45px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    padding: 60px 25px 0 25px;\r\n  }\r\n\r\n  .post_card {\r\n    margin-bottom: 120px;\r\n    @media (max-width: 990px) {\r\n      margin-bottom: 90px;\r\n    }\r\n    @media (max-width: 575px) {\r\n      margin-bottom: 60px;\r\n    }\r\n  }\r\n`\r\n\r\nexport const RelatedPostWrapper = styled.div`\r\n  margin: 0 auto;\r\n  @media (min-width: 990px) {\r\n    width: 900px;\r\n  }\r\n  @media (min-width: 1200px) {\r\n    width: 1050px;\r\n  }\r\n  @media (min-width: 1400px) {\r\n    width: 1170px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    padding: 80px 45px 0 45px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    padding: 60px 25px 0 25px;\r\n  }\r\n`\r\n\r\nexport const RelatedPostTitle = styled.h2`\r\n  color: ${themeGet(\"colors.textColor\", \"#292929\")};\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  font-family: ${themeGet(\"fontFamily.0\", \"'Fira Sans',sans-serif\")};\r\n  letter-spacing: 0.17em;\r\n  position: relative;\r\n  margin-bottom: 30px;\r\n\r\n  &:after {\r\n    content: \"\";\r\n    width: 68px;\r\n    height: 1px;\r\n    background: #292929;\r\n    display: block;\r\n    margin-top: 8px;\r\n  }\r\n`\r\n\r\nexport const RelatedPostItems = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin: 0 -15px;\r\n`\r\n\r\nexport const RelatedPostItem = styled.div`\r\n  flex: 0 0 33.333333333%;\r\n  max-width: 33.333333333%;\r\n  padding: 0 15px;\r\n  @media (max-width: 575px) {\r\n    flex: 0 0 100%;\r\n    max-width: 100%;\r\n    &:nth-child(n + 2) {\r\n      margin-top: 50px;\r\n    }\r\n  }\r\n  .post_card {\r\n    &:hover {\r\n      .post_preview {\r\n        a {\r\n          transform: scale(1.05);\r\n        }\r\n      }\r\n    }\r\n\r\n    .post_preview {\r\n      margin-bottom: 16px;\r\n      overflow: hidden;\r\n      a {\r\n        display: block;\r\n        transition: 0.25s ease-in-out;\r\n      }\r\n      &:before {\r\n        filter: blur(10px);\r\n      }\r\n    }\r\n    .post_title {\r\n      font-size: 21px;\r\n      a {\r\n        display: block;\r\n        white-space: nowrap;\r\n        width: 100%;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n      }\r\n\r\n      @media (max-width: 1400px) {\r\n        font-size: 19px;\r\n      }\r\n      @media (max-width: 1200px) {\r\n        font-size: 17px;\r\n      }\r\n      @media (max-width: 990px) {\r\n        font-size: 15px;\r\n      }\r\n    }\r\n    .post_content {\r\n      max-width: 100%;\r\n    }\r\n\r\n    .post_tags {\r\n      margin-top: 20px;\r\n      a {\r\n        @media (max-width: 990px) {\r\n          font-size: 12px;\r\n          margin-right: 15px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\nexport const TagPostsWrapper = styled.div`\r\n  margin: 0 auto;\r\n  padding-top: 80px;\r\n  position: relative;\r\n  @media (min-width: 990px) {\r\n    width: 900px;\r\n  }\r\n  @media (min-width: 1200px) {\r\n    width: 1050px;\r\n  }\r\n  @media (min-width: 1400px) {\r\n    width: 1170px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    padding: 80px 45px 30px 45px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    padding: 60px 25px 0 25px;\r\n  }\r\n\r\n  .post_card {\r\n    margin-bottom: 120px;\r\n    &:last-child {\r\n      margin-bottom: 0;\r\n    }\r\n    @media (max-width: 990px) {\r\n      margin-bottom: 80px;\r\n    }\r\n    @media (max-width: 575px) {\r\n      margin-bottom: 60px;\r\n    }\r\n  }\r\n`\r\nexport const TagPageHeading = styled.div`\r\n  padding-left: 210px;\r\n  font-size: 15px;\r\n  font-weight: 400;\r\n  margin-bottom: 120px;\r\n  position: relative;\r\n  @media (max-width: 1200px) {\r\n    padding-left: 160px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    padding-left: 0;\r\n    font-size: 13px;\r\n    margin-bottom: 80px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    margin-bottom: 60px;\r\n  }\r\n\r\n  &:after {\r\n    content: \"\";\r\n    display: block;\r\n    width: 90px;\r\n    height: 1px;\r\n    background: #292929;\r\n    margin-top: 15px;\r\n  }\r\n`\r\n\r\nexport const TagName = styled.h1`\r\n  font-size: 30px;\r\n  font-weight: 700;\r\n  color: ${themeGet(\"colors.primary\", \"#D10068\")};\r\n  margin-bottom: 8px;\r\n  @media (max-width: 990px) {\r\n    font-size: 26px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    font-size: 22px;\r\n  }\r\n`\r\nexport const BlogPostFooter = styled.div`\r\n  margin: 0 auto;\r\n  width: 870px;\r\n  max-width: 100%;\r\n  padding-top: 20px;\r\n  padding-bottom: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  @media (max-width: 990px) {\r\n    padding-top: 40px;\r\n  }\r\n`\r\n\r\nexport const BlogPostComment = styled.div`\r\n  margin: 0 auto;\r\n  width: 870px;\r\n  max-width: 100%;\r\n  padding-top: 80px;\r\n  @media (max-width: 990px) {\r\n    padding-top: 60px;\r\n  }\r\n`\r\n\r\nexport const PostShare = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  > span {\r\n    flex-shrink: 0;\r\n  }\r\n  > div,\r\n  .SocialMediaShareButton {\r\n    cursor: pointer;\r\n    margin-left: 25px;\r\n    font-size: 22px;\r\n    outline: 0;\r\n    color: ${themeGet(\"colors.textColor\", \"#292929\")};\r\n    transition: 0.15s ease-in-out;\r\n    @media (max-width: 767px) {\r\n      font-size: 18px;\r\n      margin-left: 20px;\r\n    }\r\n    &:hover {\r\n      color: ${themeGet(\"colors.primary\", \"#D10068\")};\r\n    }\r\n    svg {\r\n      display: block;\r\n    }\r\n  }\r\n`\r\nexport const BlogPostDetailsWrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin: 0 auto;\r\n  padding: 90px 0 120px 0;\r\n  @media (min-width: 990px) {\r\n    width: 900px;\r\n  }\r\n  @media (min-width: 1100px) {\r\n    width: 1050px;\r\n  }\r\n  @media (min-width: 1250px) {\r\n    width: 1170px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    padding: 80px 45px 0 45px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    padding: 60px 25px 0 25px;\r\n  }\r\n`\r\n\r\nexport const BlogDetailsContent = styled.div`\r\n  ${props => props.extendedBlogPost ? \r\n    `flex: 0 0 calc(100%);\r\n    max-width: calc(100%);\r\n    padding-right: 60px;\r\n\r\n    @media (max-width: 1249px) {\r\n      padding-right: 50px;\r\n    }\r\n    @media (max-width: 1100px) {\r\n      padding-right: 40px;\r\n    }\r\n\r\n    @media (max-width: 990px) {\r\n      padding-right: 30px;\r\n    }\r\n\r\n    @media (max-width: 767px) {\r\n      flex: 0 0 100%;\r\n      max-width: 100%;\r\n      padding-right: 0;\r\n    }` \r\n    : \r\n    `flex: 0 0 calc(100% - 360px);\r\n    max-width: calc(100% - 360px);\r\n    padding-right: 60px;\r\n\r\n    @media (max-width: 1249px) {\r\n      flex: 0 0 calc(100% - 320px);\r\n      max-width: calc(100% - 320px);\r\n      padding-right: 50px;\r\n    }\r\n    @media (max-width: 1100px) {\r\n      flex: 0 0 calc(100% - 280px);\r\n      max-width: calc(100% - 280px);\r\n      padding-right: 40px;\r\n    }\r\n\r\n    @media (max-width: 990px) {\r\n      flex: 0 0 calc(100% - 220px);\r\n      max-width: calc(100% - 220px);\r\n      padding-right: 30px;\r\n    }\r\n\r\n    @media (max-width: 767px) {\r\n      flex: 0 0 100%;\r\n      max-width: 100%;\r\n      padding-right: 0;\r\n    }`\r\n    }\r\n`\r\n\r\nexport const PostTags = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  @media (max-width: 575px) {\r\n    display: none;\r\n  }\r\n\r\n  a {\r\n    display: block;\r\n    margin-right: 30px;\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n    color: ${themeGet(\"primary\", \"#D10068\")};\r\n    @media (max-width: 990px) {\r\n      font-size: 13px;\r\n      margin-right: 25px;\r\n    }\r\n  }\r\n`\r\n\r\nexport const PostRow = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin: 0 -20px;\r\n  margin-bottom: 60px;\r\n  @media (max-width: 990px) {\r\n    margin-bottom: 40px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    margin-bottom: 30px;\r\n  }\r\n`\r\n\r\nexport const PostGrid = styled.div`\r\n  flex: 0 0 50%;\r\n  max-width: 50%;\r\n  padding: 0 20px;\r\n  margin-bottom: 90px;\r\n  @media (max-width: 990px) {\r\n    margin-bottom: 70px;\r\n  }\r\n  @media (max-width: 767px) {\r\n    flex: 0 0 100%;\r\n    max-width: 100%;\r\n  }\r\n  @media (max-width: 575px) {\r\n    margin-bottom: 50px;\r\n  }\r\n`\r\n\r\nconst blinkingText = keyframes`\r\n  0%{     color: #000;    }\r\n  49%{    color: #000; }\r\n  60%{    color: transparent; }\r\n  99%{    color:transparent;  }\r\n  100%{   color: #000;    }\r\n`\r\nexport const BlinkingToDo = styled.h1`\r\n  animation: ${blinkingText} 1.2s infinite;\r\n`"],"names":["PostCardModernWrapper","styled","PostPreview","PostDetails","PostDate","PostCategory","PostTitle","themeGet","Excerpt","PostTags","PostCardModern","image","title","description","url","date","category","tags","className","placeholderBG","imageType","props","addAllClasses","push","join","Link","to","G","alt","backgroundColor","dangerouslySetInnerHTML","__html","name","map","tag","index","key","defaultProps","PaginationWrapper","PrevPage","NextPage","PageNumber","prevLink","nextLink","currentPage","totalPage","Posts","data","allMdx","edges","pageContext","numPages","isFirst","isLast","prevPage","toString","nextPage","PrevLink","NextLink","node","placeholderColors","setColor","Math","floor","random","length","categoryInfo","Categories","frontmatter","fields","slug","cover","childImageSharp","gatsbyImageData","excerpt","BlogPostsWrapper","RelatedPostWrapper","RelatedPostTitle","RelatedPostItems","RelatedPostItem","TagPostsWrapper","TagPageHeading","TagName","BlogPostFooter","BlogPostComment","PostShare","BlogPostDetailsWrapper","BlogDetailsContent","extendedBlogPost","PostRow","PostGrid","blinkingText","keyframes","BlinkingToDo"],"sourceRoot":""}