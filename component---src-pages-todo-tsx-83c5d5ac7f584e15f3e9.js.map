{"version":3,"file":"component---src-pages-todo-tsx-83c5d5ac7f584e15f3e9.js","mappings":"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","sources":["webpack://2much2learn.com/./src/containers/Todos/style.tsx","webpack://2much2learn.com/./src/components/PostCardMinimal/postCardMinimal.style.tsx","webpack://2much2learn.com/./src/components/PostCardMinimal/postCardMinimal.tsx","webpack://2much2learn.com/./src/containers/Todos/Todos/style.tsx","webpack://2much2learn.com/./src/containers/Todos/Todos/index.tsx","webpack://2much2learn.com/./src/containers/Todos/index.tsx","webpack://2much2learn.com/./src/pages/todo.tsx"],"sourcesContent":["import styled from \"styled-components\"\n\nconst TodosPageWrapper = styled.div``\n\nexport default TodosPageWrapper\n","import styled from \"styled-components\"\nimport { themeGet } from '@styled-system/theme-get';\n\nexport const PostCardWrapper = styled.div`\n  position: relative;\n  &:hover {\n    .post_preview {\n      transform: translateY(0);\n    }\n    .post_date {\n      transform: translateY(100%);\n    }\n  }\n`\n\nexport const PostPreview = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  transform: translateY(-100%);\n  transition: 0.35s ease-in-out;\n  img {\n    border-radius: 3px;\n  }\n  @media (max-width: 1024px) {\n    transform: translateY(0);\n  }\n  @media (max-width: 575px) {\n    margin-bottom: 30px;\n    width: auto;\n    height: auto;\n    position: relative;\n    transform: translateY(0);\n  }\n`\n\nexport const PostDetails = styled.div`\n  display: flex;\n  @media (max-width: 575px) {\n    flex-direction: column;\n  }\n`\n\nexport const PostDate = styled.div`\n  font-size: 90px;\n  font-weight: 700;\n  text-align: center;\n  width: 100%;\n  height: 100%;\n  line-height: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  color: ${themeGet(\"colors.textColor\", \"#292929\")};\n  transition: 0.35s ease-in-out;\n  @media (max-width: 1200px) {\n    font-size: 70px;\n  }\n  @media (max-width: 990px) {\n    font-size: 56px;\n  }\n  @media (max-width: 575px) {\n    display: none;\n  }\n\n  > span {\n    font-size: 13px;\n    font-weight: 400;\n    display: block;\n    margin-top: 12px;\n    text-transform: uppercase;\n  }\n`\n\nexport const PostContent = styled.div`\n  align-self: center;\n`\n\nexport const PostTitle = styled.h2`\n  font-size: 21px;\n  font-weight: 700;\n  color: ${themeGet(\"colors.textColor\", \"#292929\")};\n  line-height: 1.53;\n  margin-bottom: 10px;\n  font-family: \"Fira Sans\", sans-serif;\n  a {\n    color: ${themeGet(\"colors.textColor\", \"#292929\")};\n  }\n  @media (max-width: 1200px) {\n    font-size: 21px;\n  }\n  @media (max-width: 990px) {\n    font-size: 19px;\n    margin-bottom: 12px;\n  }\n  @media (max-width: 575px) {\n    font-size: 17px;\n    margin-bottom: 10px;\n  }\n`\n\nexport const Excerpt = styled.p`\n  font-size: ${themeGet(\"fontSizes.3\", \"15\")}px;\n  color: ${themeGet(\"textColor\", \"#292929\")};\n  font-weight: 400;\n  line-height: 2;\n  margin-bottom: 0;\n  @media (max-width: 990px) {\n    font-size: 14px;\n  }\n`\n\nexport const PostTags = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  margin-bottom: 15px;\n\n  a {\n    display: block;\n    margin-right: 30px;\n    font-size: 14px;\n    font-weight: 400;\n    color: ${themeGet(\"primary\", \"#D10068\")};\n    @media (max-width: 990px) {\n      font-size: 13px;\n      margin-right: 25px;\n    }\n  }\n`\n\nexport const PostDateAndPreview = styled.div`\n  position: relative;\n  margin-right: 45px;\n  flex-shrink: 0;\n  overflow: hidden;\n  height: 170px;\n  width: 170px;\n  @media (max-width: 1200px) {\n    margin-right: 35px;\n  }\n  @media (max-width: 990px) {\n    margin-right: 25px;\n  }\n  @media (max-width: 575px) {\n    height: auto;\n    width: auto;\n  }\n`\n\nexport const ReadMore = styled.div`\n  margin-top: 16px;\n  a {\n    font-size: 13px;\n    font-weight: 500;\n    color: ${themeGet(\"textColor\", \"#292929\")};\n    transition: 0.15s ease-in-out;\n    &:hover {\n      color: ${themeGet(\"primary\", \"#D10068\")};\n    }\n  }\n`\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport _ from \"lodash\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport {\n  PostCardWrapper,\n  PostPreview,\n  PostDetails,\n  PostDate,\n  PostTitle,\n  Excerpt,\n  PostContent,\n  PostTags,\n  PostDateAndPreview,\n  ReadMore,\n} from \"./postCardMinimal.style\"\n\ninterface PostCardMinimalProps {\n  image?: any\n  title: string\n  description?: string\n  url: string\n  date?: string\n  tags?: []\n  category?: any\n  className?: string\n  imageType?: \"fixed\" | \"fluid\"\n}\n\nconst PostCardMinimal: React.FunctionComponent<PostCardMinimalProps> = ({\n  image,\n  title,\n  description,\n  url,\n  date,\n  tags,\n  category,\n  className,\n  imageType,\n  ...props\n}) => {\n  // Add all classs to an array\n  const addAllClasses = [\"post_card\"]\n\n  // className prop checking\n  if (className) {\n    addAllClasses.push(className)\n  }\n\n  return (\n    <PostCardWrapper className={addAllClasses.join(\" \")} {...props}>\n      <PostDetails className=\"post_details\">\n        <PostDateAndPreview>\n          {date && (\n            <PostDate\n              dangerouslySetInnerHTML={{\n                __html: date,\n              }}\n              className=\"post_date\"\n            />\n          )}\n          {image == null ? null : (\n            <PostPreview className=\"post_preview\">\n              <Link to={url}>\n                <GatsbyImage image={image} alt=\"post preview\" />\n              </Link>\n            </PostPreview>\n          )}\n        </PostDateAndPreview>\n\n        <PostContent className=\"post_content\">\n          {category && (\n            <h3>{`${category.name}`}</h3>\n          )}\n          {tags == null ? null : (\n            <PostTags className=\"post_tags\">\n              {tags.map((tag: string, index: number) => (\n                <Link key={index} to={`/tags/${_.kebabCase(tag)}/`}>\n                  {`#${tag}`}\n                </Link>\n              ))}\n            </PostTags>\n          )}\n          <PostTitle className=\"post_title\">\n            <Link to={url}>{title}</Link>\n          </PostTitle>\n          {description && (\n            <Excerpt\n              dangerouslySetInnerHTML={{\n                __html: description,\n              }}\n              className=\"excerpt\"\n            />\n          )}\n          <ReadMore>\n            <Link to={url}>Read More</Link>\n          </ReadMore>\n        </PostContent>\n      </PostDetails>\n    </PostCardWrapper>\n  )\n}\n\nPostCardMinimal.defaultProps = {\n  imageType: \"fluid\",\n}\n\nexport default PostCardMinimal\n","import styled from \"styled-components\"\nimport { themeGet } from '@styled-system/theme-get';\n\nconst BlogPostsWrapper = styled.div`\n  margin: 0 auto;\n  position: relative;\n  .post_card {\n    margin-bottom: 120px;\n    @media (max-width: 990px) {\n      margin-bottom: 90px;\n    }\n    @media (max-width: 575px) {\n      margin-bottom: 60px;\n    }\n  }\n  @media (min-width: 990px) {\n    width: 900px;\n  }\n  @media (min-width: 1200px) {\n    width: 1050px;\n  }\n  @media (min-width: 1400px) {\n    width: 1170px;\n  }\n  @media (max-width: 990px) {\n    padding: 0 45px 0 45px;\n  }\n  @media (max-width: 575px) {\n    padding: 0 25px 0 25px;\n  }\n`\n\nexport const SecTitle = styled.div`\n  color: ${themeGet(\"colors.textColor\", \"#292929\")};\n  font-size: 16px;\n  font-weight: 500;\n  font-family: ${themeGet(\"fontFamily.0\", \"'Fira Sans',sans-serif\")};\n  letter-spacing: 0.17em;\n  position: relative;\n  margin-top: 30px;\n  margin-bottom: 30px;\n\n  &:after {\n    content: \"\";\n    width: 68px;\n    height: 1px;\n    background: #292929;\n    display: block;\n    margin-top: 8px;\n  }\n`\n\nexport default BlogPostsWrapper\n","import * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport PostCardMinimal from \"~/components/PostCardMinimal/postCardMinimal\"\nimport _ from 'lodash'\nimport Categories from '~/utils/CategoryConstants'\n\nimport BlogPostsWrapper, { SecTitle } from \"./style\"\n\ntype PostsProps = {}\n\nconst Posts: React.FunctionComponent<PostsProps> = props => {\n  const Data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n      allMdx(\n        filter: {\n          frontmatter: {\n            templateKey: {eq: \"article\"},\n            published: {eq: false}\n          }\n        }\n        sort: { fields: [frontmatter___date], order: DESC }\n      ) {\n        totalCount\n        edges {\n          node {\n            excerpt(pruneLength: 300)\n            fields {\n              slug\n            }\n            frontmatter {\n              date(formatString: \"DD [<span>] MMM YYYY [</span>]\")\n              title\n              description\n              tags\n              category\n              cover {\n                childImageSharp {\n                  gatsbyImageData(\n                    width: 325\n                    height: 325\n                    quality: 100\n                  )\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const Posts = Data.allMdx.edges\n  return (\n    <BlogPostsWrapper>\n      <SecTitle>TODOs</SecTitle>\n      {Posts.map(({ node }: any) => {\n        const title = node.frontmatter.title || node.fields.slug\n        const categoryInfo =  _.get(Categories, node.frontmatter.category)\n        return (\n          <PostCardMinimal\n            key={node.fields.slug}\n            title={title}\n            image={\n              node.frontmatter.cover == null\n                ? null\n                : node.frontmatter.cover.childImageSharp.gatsbyImageData\n            }\n            url={node.fields.slug}\n            description={node.frontmatter.description || node.excerpt}\n            date={node.frontmatter.date}\n            tags={node.frontmatter.tags}\n            category={categoryInfo}\n          />\n        )\n      })}\n      \n    </BlogPostsWrapper>\n  )\n}\n\nexport default Posts\n","import * as React from \"react\"\nimport TodosPageWrapper from \"./style\"\nimport Todos from \"./Todos\"\n\ntype TodosPageProps = {}\n\nconst TodosPage: React.FunctionComponent<TodosPageProps> = ({\n  ...props\n}) => {\n  return (\n    <TodosPageWrapper {...props}>\n      <Todos />\n    </TodosPageWrapper>\n  )\n}\n\nexport default TodosPage\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"~/components/layout\"\nimport TodoPage from \"~/containers/Todos\"\nimport SEO from \"~/components/seo\"\n\nconst AuthorsIndexPage = (props: any) => {\n  const { data } = props\n\n  return (\n    <Layout>\n      <SEO\n        title=\"Todo Page\"\n        description={data.site.siteMetadata.description}\n      />\n      <TodoPage />\n    </Layout>\n  )\n}\n\nexport default AuthorsIndexPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n  }\n`\n"],"names":["styled","PostCardWrapper","PostPreview","PostDetails","PostDate","themeGet","PostContent","PostTitle","Excerpt","PostTags","PostDateAndPreview","ReadMore","PostCardMinimal","image","title","description","url","date","tags","category","className","props","imageType","addAllClasses","push","join","dangerouslySetInnerHTML","__html","Link","to","G","alt","name","map","tag","index","key","defaultProps","BlogPostsWrapper","SecTitle","Posts","useStaticQuery","allMdx","edges","node","frontmatter","fields","slug","categoryInfo","Categories","cover","childImageSharp","gatsbyImageData","excerpt","Todos","data","site","siteMetadata"],"sourceRoot":""}