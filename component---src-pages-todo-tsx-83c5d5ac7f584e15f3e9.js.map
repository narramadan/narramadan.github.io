{"version":3,"file":"component---src-pages-todo-tsx-83c5d5ac7f584e15f3e9.js","mappings":"4MAIA,EAFyBA,EAAAA,QAAAA,IAAAA,WAAH,kEAAGA,CAAH,M,mFCCTC,EAAkBD,EAAAA,QAAAA,IAAAA,WAAH,iFAAGA,CAAH,2KAYfE,EAAcF,EAAAA,QAAAA,IAAAA,WAAH,6EAAGA,CAAH,gaAuBXG,EAAcH,EAAAA,QAAAA,IAAAA,WAAH,6EAAGA,CAAH,2FAOXI,EAAWJ,EAAAA,QAAAA,IAAAA,WAAH,0EAAGA,CAAH,ukBAWVK,EAAAA,EAAAA,GAAS,mBAAoB,YAqB3BC,EAAcN,EAAAA,QAAAA,IAAAA,WAAH,6EAAGA,CAAH,+BAIXO,EAAYP,EAAAA,QAAAA,GAAAA,WAAH,2EAAGA,CAAH,uZAGXK,EAAAA,EAAAA,GAAS,mBAAoB,YAK3BA,EAAAA,EAAAA,GAAS,mBAAoB,YAe7BG,EAAUR,EAAAA,QAAAA,EAAAA,WAAH,yEAAGA,CAAH,mKACLK,EAAAA,EAAAA,GAAS,cAAe,OAC5BA,EAAAA,EAAAA,GAAS,YAAa,YASpBI,EAAWT,EAAAA,QAAAA,IAAAA,WAAH,0EAAGA,CAAH,mTAWRK,EAAAA,EAAAA,GAAS,UAAW,YAQpBK,EAAqBV,EAAAA,QAAAA,IAAAA,WAAH,oFAAGA,CAAH,qUAmBlBW,EAAWX,EAAAA,QAAAA,IAAAA,WAAH,0EAAGA,CAAH,oLAKRK,EAAAA,EAAAA,GAAS,YAAa,YAGpBA,EAAAA,EAAAA,GAAS,UAAW,Y,yFCpI7BO,EAAiE,SAAC,GAWlE,IAVJC,EAUI,EAVJA,MACAC,EASI,EATJA,MACAC,EAQI,EARJA,YACAC,EAOI,EAPJA,IACAC,EAMI,EANJA,KACAC,EAKI,EALJA,KACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,UAEGC,GACC,EAFJC,WAEI,aAEEC,EAAgB,CAAC,aAOvB,OAJIH,GACFG,EAAcC,KAAKJ,GAInB,gBAACnB,EAAD,eAAiBmB,UAAWG,EAAcE,KAAK,MAAUJ,GACvD,gBAAClB,EAAD,CAAaiB,UAAU,gBACrB,gBAACV,EAAD,KACGO,GACC,gBAACb,EAAD,CACEsB,wBAAyB,CACvBC,OAAQV,GAEVG,UAAU,cAGJ,MAATP,EAAgB,KACf,gBAACX,EAAD,CAAakB,UAAU,gBACrB,gBAAC,EAAAQ,KAAD,CAAMC,GAAIb,GACR,gBAAC,EAAAc,EAAD,CAAajB,MAAOA,EAAOkB,IAAI,oBAMvC,gBAACzB,EAAD,CAAac,UAAU,gBACpBD,GACC,6BAAQA,EAASa,MAEV,MAARd,EAAe,KACd,gBAACT,EAAD,CAAUW,UAAU,aACjBF,EAAKe,KAAI,SAACC,EAAaC,GAAd,OACR,gBAAC,EAAAP,KAAD,CAAMQ,IAAKD,EAAON,GAAE,SAAW,IAAYK,GAAvB,KAApB,IACOA,OAKb,gBAAC3B,EAAD,CAAWa,UAAU,cACnB,gBAAC,EAAAQ,KAAD,CAAMC,GAAIb,GAAMF,IAEjBC,GACC,gBAACP,EAAD,CACEkB,wBAAyB,CACvBC,OAAQZ,GAEVK,UAAU,YAGd,gBAACT,EAAD,KACE,gBAAC,EAAAiB,KAAD,CAAMC,GAAIb,GAAV,kBAQZJ,EAAgByB,aAAe,CAC7Bf,UAAW,SAGb,Q,WCxGMgB,EAAmBtC,EAAAA,QAAAA,IAAAA,WAAH,mEAAGA,CAAH,qhBA6BTuC,EAAWvC,EAAAA,QAAAA,IAAAA,WAAH,2DAAGA,CAAH,mUACVK,EAAAA,EAAAA,GAAS,mBAAoB,YAGvBA,EAAAA,EAAAA,GAAS,eAAgB,2BAgB1C,ICiCA,EA3EmD,SAAAgB,GACjD,IA6CMmB,GA7COC,EAAAA,EAAAA,gBAAe,cA6CTC,OAAOC,MAC1B,OACE,gBAAC,EAAD,KACE,gBAACJ,EAAD,cACCC,EAAMP,KAAI,YAAmB,IAAhBW,EAAgB,EAAhBA,KACN9B,EAAQ8B,EAAKC,YAAY/B,OAAS8B,EAAKE,OAAOC,KAC9CC,EAAgB,IAAMC,EAAAA,EAAYL,EAAKC,YAAY1B,UACzD,OACE,gBAAC,EAAD,CACEiB,IAAKQ,EAAKE,OAAOC,KACjBjC,MAAOA,EACPD,MAC4B,MAA1B+B,EAAKC,YAAYK,MACb,KACAN,EAAKC,YAAYK,MAAMC,gBAAgBC,gBAE7CpC,IAAK4B,EAAKE,OAAOC,KACjBhC,YAAa6B,EAAKC,YAAY9B,aAAe6B,EAAKS,QAClDpC,KAAM2B,EAAKC,YAAY5B,KACvBC,KAAM0B,EAAKC,YAAY3B,KACvBC,SAAU6B,SC5DtB,EAV2D,SAAC,GAEtD,IADD3B,EACC,oBACJ,OACE,gBAAC,EAAqBA,EACpB,gBAACiC,EAAD,Q,WCSN,EAdyB,SAACjC,GACxB,IAAQkC,EAASlC,EAATkC,KAER,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CACEzC,MAAM,YACNC,YAAawC,EAAKC,KAAKC,aAAa1C,cAEtC,gBAAC,EAAD","sources":["webpack://2much2learn.com/./src/containers/Todos/style.tsx","webpack://2much2learn.com/./src/components/PostCardMinimal/postCardMinimal.style.tsx","webpack://2much2learn.com/./src/components/PostCardMinimal/postCardMinimal.tsx","webpack://2much2learn.com/./src/containers/Todos/Todos/style.tsx","webpack://2much2learn.com/./src/containers/Todos/Todos/index.tsx","webpack://2much2learn.com/./src/containers/Todos/index.tsx","webpack://2much2learn.com/./src/pages/todo.tsx"],"sourcesContent":["import styled from \"styled-components\"\r\n\r\nconst TodosPageWrapper = styled.div``\r\n\r\nexport default TodosPageWrapper\r\n","import styled from \"styled-components\"\r\nimport { themeGet } from '@styled-system/theme-get';\r\n\r\nexport const PostCardWrapper = styled.div`\r\n  position: relative;\r\n  &:hover {\r\n    .post_preview {\r\n      transform: translateY(0);\r\n    }\r\n    .post_date {\r\n      transform: translateY(100%);\r\n    }\r\n  }\r\n`\r\n\r\nexport const PostPreview = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  transform: translateY(-100%);\r\n  transition: 0.35s ease-in-out;\r\n  img {\r\n    border-radius: 3px;\r\n  }\r\n  @media (max-width: 1024px) {\r\n    transform: translateY(0);\r\n  }\r\n  @media (max-width: 575px) {\r\n    margin-bottom: 30px;\r\n    width: auto;\r\n    height: auto;\r\n    position: relative;\r\n    transform: translateY(0);\r\n  }\r\n`\r\n\r\nexport const PostDetails = styled.div`\r\n  display: flex;\r\n  @media (max-width: 575px) {\r\n    flex-direction: column;\r\n  }\r\n`\r\n\r\nexport const PostDate = styled.div`\r\n  font-size: 90px;\r\n  font-weight: 700;\r\n  text-align: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  line-height: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: ${themeGet(\"colors.textColor\", \"#292929\")};\r\n  transition: 0.35s ease-in-out;\r\n  @media (max-width: 1200px) {\r\n    font-size: 70px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    font-size: 56px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    display: none;\r\n  }\r\n\r\n  > span {\r\n    font-size: 13px;\r\n    font-weight: 400;\r\n    display: block;\r\n    margin-top: 12px;\r\n    text-transform: uppercase;\r\n  }\r\n`\r\n\r\nexport const PostContent = styled.div`\r\n  align-self: center;\r\n`\r\n\r\nexport const PostTitle = styled.h2`\r\n  font-size: 21px;\r\n  font-weight: 700;\r\n  color: ${themeGet(\"colors.textColor\", \"#292929\")};\r\n  line-height: 1.53;\r\n  margin-bottom: 10px;\r\n  font-family: \"Fira Sans\", sans-serif;\r\n  a {\r\n    color: ${themeGet(\"colors.textColor\", \"#292929\")};\r\n  }\r\n  @media (max-width: 1200px) {\r\n    font-size: 21px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    font-size: 19px;\r\n    margin-bottom: 12px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    font-size: 17px;\r\n    margin-bottom: 10px;\r\n  }\r\n`\r\n\r\nexport const Excerpt = styled.p`\r\n  font-size: ${themeGet(\"fontSizes.3\", \"15\")}px;\r\n  color: ${themeGet(\"textColor\", \"#292929\")};\r\n  font-weight: 400;\r\n  line-height: 2;\r\n  margin-bottom: 0;\r\n  @media (max-width: 990px) {\r\n    font-size: 14px;\r\n  }\r\n`\r\n\r\nexport const PostTags = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n\r\n  a {\r\n    display: block;\r\n    margin-right: 30px;\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n    color: ${themeGet(\"primary\", \"#D10068\")};\r\n    @media (max-width: 990px) {\r\n      font-size: 13px;\r\n      margin-right: 25px;\r\n    }\r\n  }\r\n`\r\n\r\nexport const PostDateAndPreview = styled.div`\r\n  position: relative;\r\n  margin-right: 45px;\r\n  flex-shrink: 0;\r\n  overflow: hidden;\r\n  height: 170px;\r\n  width: 170px;\r\n  @media (max-width: 1200px) {\r\n    margin-right: 35px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    margin-right: 25px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    height: auto;\r\n    width: auto;\r\n  }\r\n`\r\n\r\nexport const ReadMore = styled.div`\r\n  margin-top: 16px;\r\n  a {\r\n    font-size: 13px;\r\n    font-weight: 500;\r\n    color: ${themeGet(\"textColor\", \"#292929\")};\r\n    transition: 0.15s ease-in-out;\r\n    &:hover {\r\n      color: ${themeGet(\"primary\", \"#D10068\")};\r\n    }\r\n  }\r\n`\r\n","import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport _ from \"lodash\"\r\nimport { GatsbyImage } from \"gatsby-plugin-image\"\r\nimport {\r\n  PostCardWrapper,\r\n  PostPreview,\r\n  PostDetails,\r\n  PostDate,\r\n  PostTitle,\r\n  Excerpt,\r\n  PostContent,\r\n  PostTags,\r\n  PostDateAndPreview,\r\n  ReadMore,\r\n} from \"./postCardMinimal.style\"\r\n\r\ninterface PostCardMinimalProps {\r\n  image?: any\r\n  title: string\r\n  description?: string\r\n  url: string\r\n  date?: string\r\n  tags?: []\r\n  category?: any\r\n  className?: string\r\n  imageType?: \"fixed\" | \"fluid\"\r\n}\r\n\r\nconst PostCardMinimal: React.FunctionComponent<PostCardMinimalProps> = ({\r\n  image,\r\n  title,\r\n  description,\r\n  url,\r\n  date,\r\n  tags,\r\n  category,\r\n  className,\r\n  imageType,\r\n  ...props\r\n}) => {\r\n  // Add all classs to an array\r\n  const addAllClasses = [\"post_card\"]\r\n\r\n  // className prop checking\r\n  if (className) {\r\n    addAllClasses.push(className)\r\n  }\r\n\r\n  return (\r\n    <PostCardWrapper className={addAllClasses.join(\" \")} {...props}>\r\n      <PostDetails className=\"post_details\">\r\n        <PostDateAndPreview>\r\n          {date && (\r\n            <PostDate\r\n              dangerouslySetInnerHTML={{\r\n                __html: date,\r\n              }}\r\n              className=\"post_date\"\r\n            />\r\n          )}\r\n          {image == null ? null : (\r\n            <PostPreview className=\"post_preview\">\r\n              <Link to={url}>\r\n                <GatsbyImage image={image} alt=\"post preview\" />\r\n              </Link>\r\n            </PostPreview>\r\n          )}\r\n        </PostDateAndPreview>\r\n\r\n        <PostContent className=\"post_content\">\r\n          {category && (\r\n            <h3>{`${category.name}`}</h3>\r\n          )}\r\n          {tags == null ? null : (\r\n            <PostTags className=\"post_tags\">\r\n              {tags.map((tag: string, index: number) => (\r\n                <Link key={index} to={`/tags/${_.kebabCase(tag)}/`}>\r\n                  {`#${tag}`}\r\n                </Link>\r\n              ))}\r\n            </PostTags>\r\n          )}\r\n          <PostTitle className=\"post_title\">\r\n            <Link to={url}>{title}</Link>\r\n          </PostTitle>\r\n          {description && (\r\n            <Excerpt\r\n              dangerouslySetInnerHTML={{\r\n                __html: description,\r\n              }}\r\n              className=\"excerpt\"\r\n            />\r\n          )}\r\n          <ReadMore>\r\n            <Link to={url}>Read More</Link>\r\n          </ReadMore>\r\n        </PostContent>\r\n      </PostDetails>\r\n    </PostCardWrapper>\r\n  )\r\n}\r\n\r\nPostCardMinimal.defaultProps = {\r\n  imageType: \"fluid\",\r\n}\r\n\r\nexport default PostCardMinimal\r\n","import styled from \"styled-components\"\r\nimport { themeGet } from '@styled-system/theme-get';\r\n\r\nconst BlogPostsWrapper = styled.div`\r\n  margin: 0 auto;\r\n  position: relative;\r\n  .post_card {\r\n    margin-bottom: 120px;\r\n    @media (max-width: 990px) {\r\n      margin-bottom: 90px;\r\n    }\r\n    @media (max-width: 575px) {\r\n      margin-bottom: 60px;\r\n    }\r\n  }\r\n  @media (min-width: 990px) {\r\n    width: 900px;\r\n  }\r\n  @media (min-width: 1200px) {\r\n    width: 1050px;\r\n  }\r\n  @media (min-width: 1400px) {\r\n    width: 1170px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    padding: 0 45px 0 45px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    padding: 0 25px 0 25px;\r\n  }\r\n`\r\n\r\nexport const SecTitle = styled.div`\r\n  color: ${themeGet(\"colors.textColor\", \"#292929\")};\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  font-family: ${themeGet(\"fontFamily.0\", \"'Fira Sans',sans-serif\")};\r\n  letter-spacing: 0.17em;\r\n  position: relative;\r\n  margin-top: 30px;\r\n  margin-bottom: 30px;\r\n\r\n  &:after {\r\n    content: \"\";\r\n    width: 68px;\r\n    height: 1px;\r\n    background: #292929;\r\n    display: block;\r\n    margin-top: 8px;\r\n  }\r\n`\r\n\r\nexport default BlogPostsWrapper\r\n","import * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport PostCardMinimal from \"~/components/PostCardMinimal/postCardMinimal\"\r\nimport _ from 'lodash'\r\nimport Categories from '~/utils/CategoryConstants'\r\n\r\nimport BlogPostsWrapper, { SecTitle } from \"./style\"\r\n\r\ntype PostsProps = {}\r\n\r\nconst Posts: React.FunctionComponent<PostsProps> = props => {\r\n  const Data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n      allMdx(\r\n        filter: {\r\n          frontmatter: {\r\n            templateKey: {eq: \"article\"},\r\n            published: {eq: false}\r\n          }\r\n        }\r\n        sort: { fields: [frontmatter___date], order: DESC }\r\n      ) {\r\n        totalCount\r\n        edges {\r\n          node {\r\n            excerpt(pruneLength: 300)\r\n            fields {\r\n              slug\r\n            }\r\n            frontmatter {\r\n              date(formatString: \"DD [<span>] MMM YYYY [</span>]\")\r\n              title\r\n              description\r\n              tags\r\n              category\r\n              cover {\r\n                childImageSharp {\r\n                  gatsbyImageData(\r\n                    width: 325\r\n                    height: 325\r\n                    quality: 100\r\n                  )\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const Posts = Data.allMdx.edges\r\n  return (\r\n    <BlogPostsWrapper>\r\n      <SecTitle>TODOs</SecTitle>\r\n      {Posts.map(({ node }: any) => {\r\n        const title = node.frontmatter.title || node.fields.slug\r\n        const categoryInfo =  _.get(Categories, node.frontmatter.category)\r\n        return (\r\n          <PostCardMinimal\r\n            key={node.fields.slug}\r\n            title={title}\r\n            image={\r\n              node.frontmatter.cover == null\r\n                ? null\r\n                : node.frontmatter.cover.childImageSharp.gatsbyImageData\r\n            }\r\n            url={node.fields.slug}\r\n            description={node.frontmatter.description || node.excerpt}\r\n            date={node.frontmatter.date}\r\n            tags={node.frontmatter.tags}\r\n            category={categoryInfo}\r\n          />\r\n        )\r\n      })}\r\n      \r\n    </BlogPostsWrapper>\r\n  )\r\n}\r\n\r\nexport default Posts\r\n","import * as React from \"react\"\r\nimport TodosPageWrapper from \"./style\"\r\nimport Todos from \"./Todos\"\r\n\r\ntype TodosPageProps = {}\r\n\r\nconst TodosPage: React.FunctionComponent<TodosPageProps> = ({\r\n  ...props\r\n}) => {\r\n  return (\r\n    <TodosPageWrapper {...props}>\r\n      <Todos />\r\n    </TodosPageWrapper>\r\n  )\r\n}\r\n\r\nexport default TodosPage\r\n","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport Layout from \"~/components/layout\"\r\nimport TodoPage from \"~/containers/Todos\"\r\nimport SEO from \"~/components/seo\"\r\n\r\nconst AuthorsIndexPage = (props: any) => {\r\n  const { data } = props\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO\r\n        title=\"Todo Page\"\r\n        description={data.site.siteMetadata.description}\r\n      />\r\n      <TodoPage />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default AuthorsIndexPage\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["styled","PostCardWrapper","PostPreview","PostDetails","PostDate","themeGet","PostContent","PostTitle","Excerpt","PostTags","PostDateAndPreview","ReadMore","PostCardMinimal","image","title","description","url","date","tags","category","className","props","imageType","addAllClasses","push","join","dangerouslySetInnerHTML","__html","Link","to","G","alt","name","map","tag","index","key","defaultProps","BlogPostsWrapper","SecTitle","Posts","useStaticQuery","allMdx","edges","node","frontmatter","fields","slug","categoryInfo","Categories","cover","childImageSharp","gatsbyImageData","excerpt","Todos","data","site","siteMetadata"],"sourceRoot":""}