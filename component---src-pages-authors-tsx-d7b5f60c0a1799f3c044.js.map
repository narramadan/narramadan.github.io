{"version":3,"sources":["webpack:///./src/containers/Authors/style.tsx","webpack:///./src/containers/Authors/Authors/style.tsx","webpack:///./src/containers/Authors/Authors/index.tsx","webpack:///./src/containers/Authors/index.tsx","webpack:///./src/pages/authors.tsx","webpack:///./node_modules/lodash/_baseIsNaN.js","webpack:///./node_modules/lodash/_strictIndexOf.js","webpack:///./node_modules/lodash/_baseUniq.js","webpack:///./node_modules/lodash/_baseIndexOf.js","webpack:///./node_modules/lodash/_arrayIncludesWith.js","webpack:///./node_modules/lodash/_createSet.js","webpack:///./node_modules/lodash/_arrayIncludes.js","webpack:///./node_modules/lodash/uniqBy.js"],"names":["AuthorsPageWrapper","styled","div","BlogPostsWrapper","SecTitle","themeGet","Posts","props","Data","useStaticQuery","edges","allMdx","authors","group","map","edge","i","author","node","frontmatter","authorFromArray","alias","Author","totalPosts","totalCount","AuthorsPage","Authors","pageQuery","AuthorsIndexPage","data","title","description","site","siteMetadata","module","exports","value","array","fromIndex","index","length","SetCache","arrayIncludes","arrayIncludesWith","cacheHas","createSet","setToArray","iteratee","comparator","includes","isCommon","result","seen","set","outer","computed","seenIndex","push","baseFindIndex","baseIsNaN","strictIndexOf","Set","noop","values","baseIndexOf","baseIteratee","baseUniq"],"mappings":"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","file":"component---src-pages-authors-tsx-d7b5f60c0a1799f3c044.js","sourcesContent":["import styled from \"styled-components\"\n\nconst AuthorsPageWrapper = styled.div``\n\nexport default AuthorsPageWrapper\n","import styled from \"styled-components\"\nimport { themeGet } from '@styled-system/theme-get';\n\nconst BlogPostsWrapper = styled.div`\n  margin: 0 auto;\n  position: relative;\n  .post_card {\n    margin-bottom: 120px;\n    @media (max-width: 990px) {\n      margin-bottom: 90px;\n    }\n    @media (max-width: 575px) {\n      margin-bottom: 60px;\n    }\n  }\n  @media (min-width: 990px) {\n    width: 900px;\n  }\n  @media (min-width: 1200px) {\n    width: 1050px;\n  }\n  @media (min-width: 1400px) {\n    width: 1170px;\n  }\n  @media (max-width: 990px) {\n    padding: 0 45px 0 45px;\n  }\n  @media (max-width: 575px) {\n    padding: 0 25px 0 25px;\n  }\n`\n\nexport const SecTitle = styled.div`\n  color: ${themeGet(\"colors.textColor\", \"#292929\")};\n  font-size: 16px;\n  font-weight: 500;\n  font-family: ${themeGet(\"fontFamily.0\", \"'Fira Sans',sans-serif\")};\n  letter-spacing: 0.17em;\n  position: relative;\n  margin-top: 30px;\n  margin-bottom: 30px;\n\n  &:after {\n    content: \"\";\n    width: 68px;\n    height: 1px;\n    background: #292929;\n    display: block;\n    margin-top: 8px;\n  }\n`\n\nexport default BlogPostsWrapper\n","import * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport _ from \"lodash\"\n\nimport Author from \"../Author\"\nimport BlogPostsWrapper, { SecTitle } from \"./style\"\n\ntype PostsProps = {}\n\nconst Posts: React.FunctionComponent<PostsProps> = props => {\n  const Data = useStaticQuery(graphql`\n    query {\n      allMdx(\n        filter: {\n          frontmatter: {\n            templateKey: {eq: \"article\"},\n            published: {eq: true}\n          }\n        }\n        sort: { fields: [frontmatter___date], order: DESC }\n        limit: 5\n      ) {\n        totalCount\n        edges {\n          node {\n            frontmatter {\n              author {\n                order\n                alias\n                name\n                image {\n                  childImageSharp {\n                    fluid(maxWidth: 210, maxHeight: 210, quality: 100) {\n                      ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                    }\n                  }\n                }\n                jobTitle\n                description\n                social {\n                  facebook\n                  github\n                  instagram\n                  linkedin\n                  twitter\n                }\n              }              \n            }\n          }\n        }\n      }\n      authors: allMdx(\n        filter: {\n          frontmatter: {\n            templateKey: {eq: \"article\"},\n            published: {eq: true}\n          }\n        }\n        sort: {order: ASC, fields: [frontmatter___author___order]}\n      ) {\n        group(field: frontmatter___author___alias) {\n          fieldValue\n          totalCount\n        }\n      }\n    }\n  `)\n\n  const edges = _.uniqBy(Data.allMdx.edges, 'node.frontmatter.author.alias');\n  const authors = Data.authors.group\n  \n  return (\n    <BlogPostsWrapper>\n      <SecTitle>Authors</SecTitle>\n      {edges.map((edge: any, i) => {\n        const author = edge.node.frontmatter.author \n        const authorFromArray = _.find(authors, ['fieldValue', author.alias]);\n        return (\n          <Author key={i} {...author} totalPosts={authorFromArray.totalCount}/>\n        )\n      })}\n    </BlogPostsWrapper>\n  )\n}\n\nexport default Posts\n","import * as React from \"react\"\nimport AuthorsPageWrapper from \"./style\"\nimport Authors from \"./Authors\"\n\ntype AuthorsPageProps = {}\n\nconst AuthorsPage: React.FunctionComponent<AuthorsPageProps> = ({\n  ...props\n}) => {\n  return (\n    <AuthorsPageWrapper {...props}>\n      <Authors />\n    </AuthorsPageWrapper>\n  )\n}\n\nexport default AuthorsPage\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"~/components/layout\"\nimport AuthorsPage from \"~/containers/Authors\"\nimport SEO from \"~/components/seo\"\n\nconst AuthorsIndexPage = (props: any) => {\n  const { data } = props\n\n  return (\n    <Layout>\n      <SEO\n        title=\"Authors Page\"\n        description={data.site.siteMetadata.description}\n      />\n      <AuthorsPage />\n    </Layout>\n  )\n}\n\nexport default AuthorsIndexPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n  }\n`\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n","var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n","var baseIteratee = require('./_baseIteratee'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nmodule.exports = uniqBy;\n"],"sourceRoot":""}