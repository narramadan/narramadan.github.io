{"version":3,"sources":["webpack:///./node_modules/lodash/_basePropertyOf.js","webpack:///./node_modules/lodash/words.js","webpack:///./node_modules/lodash/_unicodeWords.js","webpack:///./src/templates/templates.style.tsx","webpack:///./node_modules/lodash/kebabCase.js","webpack:///./src/templates/tags.tsx","webpack:///./node_modules/lodash/deburr.js","webpack:///./node_modules/lodash/_arrayReduce.js","webpack:///./node_modules/lodash/_asciiWords.js","webpack:///./node_modules/lodash/toString.js","webpack:///./node_modules/lodash/_arrayMap.js","webpack:///./node_modules/lodash/_hasUnicodeWord.js","webpack:///./node_modules/lodash/_deburrLetter.js","webpack:///./node_modules/lodash/_createCompounder.js","webpack:///./src/components/PostCard/postCard.style.tsx","webpack:///./src/components/PostCard/postCard.tsx","webpack:///./node_modules/lodash/_baseToString.js"],"names":["module","exports","object","key","undefined","asciiWords","hasUnicodeWord","toString","unicodeWords","string","pattern","guard","match","rsBreakRange","rsMathOpRange","rsBreak","rsDigits","rsDingbat","rsLower","rsMisc","rsRegional","rsSurrPair","rsUpper","rsMiscLower","rsMiscUpper","reOptMod","rsModifier","rsSeq","join","rsEmoji","reUnicodeWord","RegExp","BlogPostsWrapper","styled","div","RelatedPostWrapper","RelatedPostTitle","h2","themeGet","RelatedPostItems","RelatedPostItem","TagPostsWrapper","TagPageHeading","TagName","h1","BlogPostFooter","BlogPostComment","PostShare","BlogPostDetailsWrapper","BlogDetailsContent","props","extendedBlogPost","PostTags","PostRow","PostGrid","blinkingText","keyframes","BlinkingToDo","kebabCase","createCompounder","result","word","index","toLowerCase","Tags","pageContext","data","tag","allMdx","edges","totalCount","title","description","map","node","fields","slug","frontmatter","url","excerpt","date","tags","pageQuery","deburrLetter","reLatin","reComboMark","replace","array","iteratee","accumulator","initAccum","length","reAsciiWord","baseToString","value","Array","reHasUnicodeWord","test","basePropertyOf","arrayReduce","deburr","words","reApos","callback","PostCardWrapper","PostPreview","PostDetails","PostDate","PostContent","PostTitle","PostCategory","Excerpt","p","PostCard","image","category","className","imageType","placeholderBG","addAllClasses","push","to","fluid","alt","backgroundColor","fixed","dangerouslySetInnerHTML","__html","name","defaultProps","Symbol","arrayMap","isArray","isSymbol","symbolProto","prototype","symbolToString","call"],"mappings":"+EAaAA,EAAOC,QANP,SAAwBC,GACtB,OAAO,SAASC,GACd,OAAiB,MAAVD,OAAiBE,EAAYF,EAAOC,M,uBCT/C,IAAIE,EAAa,EAAQ,QACrBC,EAAiB,EAAQ,QACzBC,EAAW,EAAQ,QACnBC,EAAe,EAAQ,QA+B3BR,EAAOC,QAVP,SAAeQ,EAAQC,EAASC,GAI9B,OAHAF,EAASF,EAASE,QAGFL,KAFhBM,EAAUC,OAAQP,EAAYM,GAGrBJ,EAAeG,GAAUD,EAAaC,GAAUJ,EAAWI,GAE7DA,EAAOG,MAAMF,IAAY,K,qBC9BlC,IAaIG,EAAeC,8OAIfC,EAAU,IAAMF,EAAe,IAE/BG,EAAW,OACXC,EAAY,oBACZC,EAAU,8BACVC,EAAS,oBAAuBN,EAAeG,EAAtC,qEAITI,EAAa,kCACbC,EAAa,qCACbC,EAAU,8BAIVC,EAAc,MAAQL,EAAU,IAAMC,EAAS,IAC/CK,EAAc,MAAQF,EAAU,IAAMH,EAAS,IAG/CM,EAAWC,gFAKXC,EAJW,oBAIQF,GAHP,gBAAwB,CAbtB,qBAaoCL,EAAYC,GAAYO,KAAK,KAAnE,qBAA2FH,EAAW,MAIlHI,EAAU,MAAQ,CAACZ,EAAWG,EAAYC,GAAYO,KAAK,KAAO,IAAMD,EAGxEG,EAAgBC,OAAO,CACzBT,EAAU,IAAMJ,EAAhBI,oCAA0D,CAACP,EAASO,EAAS,KAAKM,KAAK,KAAO,IAC9FJ,sCAA8C,CAACT,EAASO,EAAUC,EAAa,KAAKK,KAAK,KAAO,IAChGN,EAAU,IAAMC,EAAhBD,iCACAA,mCATe,mDADA,mDAafN,EACAa,GACAD,KAAK,KAAM,KAab5B,EAAOC,QAJP,SAAsBQ,GACpB,OAAOA,EAAOG,MAAMkB,IAAkB,K,kCCjExC,8lBAGaE,EAAmBC,IAAOC,IAAV,mFAAGD,CAAH,sjBAgChBE,EAAqBF,IAAOC,IAAV,qFAAGD,CAAH,4UAmBlBG,EAAmBH,IAAOI,GAAV,mFAAGJ,CAAH,6SAClBK,YAAS,mBAAoB,WAGvBA,YAAS,eAAgB,2BAe7BC,EAAmBN,IAAOC,IAAV,mFAAGD,CAAH,kEAMhBO,EAAkBP,IAAOC,IAAV,kFAAGD,CAAH,itCAkEfQ,EAAkBR,IAAOC,IAAV,kFAAGD,CAAH,0mBAiCfS,EAAiBT,IAAOC,IAAV,iFAAGD,CAAH,gfA4BdU,EAAUV,IAAOW,GAAV,0EAAGX,CAAH,0MAGTK,YAAS,iBAAkB,YASzBO,EAAiBZ,IAAOC,IAAV,iFAAGD,CAAH,wPAcda,EAAkBb,IAAOC,IAAV,kFAAGD,CAAH,kJAUfc,EAAYd,IAAOC,IAAV,6EAAGD,CAAH,ybAYTK,YAAS,mBAAoB,WAO3BA,YAAS,iBAAkB,YAO7BU,EAAyBf,IAAOC,IAAV,0FAAGD,CAAH,8YAsBtBgB,EAAqBhB,IAAOC,IAAV,sFAAGD,CAAH,eAC3B,SAAAiB,GAAK,OAAIA,EAAMC,iBAAN,whCAmDAC,EAAWnB,IAAOC,IAAV,4EAAGD,CAAH,kVAaRK,YAAS,UAAW,YAQpBe,EAAUpB,IAAOC,IAAV,2EAAGD,CAAH,sNAaPqB,EAAWrB,IAAOC,IAAV,4EAAGD,CAAH,oSAiBfsB,EAAeC,YAAH,8JAOLC,EAAexB,IAAOW,GAAV,gFAAGX,CAAH,wCACVsB,I,qBCjZf,IAuBIG,EAvBmB,EAAQ,OAuBfC,EAAiB,SAASC,EAAQC,EAAMC,GACtD,OAAOF,GAAUE,EAAQ,IAAM,IAAMD,EAAKE,iBAG5C/D,EAAOC,QAAUyD,G,kCC3BjB,0HAmCeM,UA5BF,SAAC,GAA+B,IAA7BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,KACnBC,EAAQF,EAARE,IADmC,EAEbD,EAAKE,OAA3BC,EAFmC,EAEnCA,MAAOC,EAF4B,EAE5BA,WAEf,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAOJ,EAAKK,YAAW,mBAAqBF,EAArB,UAE5B,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAUH,GADZ,mBAEsBG,EAFtB,SAICD,EAAMI,KAAI,gBAAGC,EAAH,EAAGA,KAAH,EAASZ,MAAT,OACT,kBAAC,IAAD,CACE3D,IAAKuE,EAAKC,OAAOC,KACjBL,MAAOG,EAAKG,YAAYN,MACxBO,IAAKJ,EAAKC,OAAOC,KACjBJ,YAAaE,EAAKG,YAAYL,aAAeE,EAAKK,QAClDC,KAAMN,EAAKG,YAAYG,KACvBC,KAAMP,EAAKG,YAAYI,aAU5B,IAAMC,EAAY,a,qBCrCzB,IAAIC,EAAe,EAAQ,QACvB5E,EAAW,EAAQ,QAGnB6E,EAAU,8CAeVC,EAActD,OANJ,kDAMoB,KAyBlC/B,EAAOC,QALP,SAAgBQ,GAEd,OADAA,EAASF,EAASE,KACDA,EAAO6E,QAAQF,EAASD,GAAcG,QAAQD,EAAa,M,mBChB9ErF,EAAOC,QAbP,SAAqBsF,EAAOC,EAAUC,EAAaC,GACjD,IAAI5B,GAAS,EACT6B,EAAkB,MAATJ,EAAgB,EAAIA,EAAMI,OAKvC,IAHID,GAAaC,IACfF,EAAcF,IAAQzB,MAEfA,EAAQ6B,GACfF,EAAcD,EAASC,EAAaF,EAAMzB,GAAQA,EAAOyB,GAE3D,OAAOE,I,mBCrBT,IAAIG,EAAc,4CAalB5F,EAAOC,QAJP,SAAoBQ,GAClB,OAAOA,EAAOG,MAAMgF,IAAgB,K,qBCXtC,IAAIC,EAAe,EAAQ,QA2B3B7F,EAAOC,QAJP,SAAkB6F,GAChB,OAAgB,MAATA,EAAgB,GAAKD,EAAaC,K,mBCJ3C9F,EAAOC,QAXP,SAAkBsF,EAAOC,GAKvB,IAJA,IAAI1B,GAAS,EACT6B,EAAkB,MAATJ,EAAgB,EAAIA,EAAMI,OACnC/B,EAASmC,MAAMJ,KAEV7B,EAAQ6B,GACf/B,EAAOE,GAAS0B,EAASD,EAAMzB,GAAQA,EAAOyB,GAEhD,OAAO3B,I,mBChBT,IAAIoC,EAAmB,qEAavBhG,EAAOC,QAJP,SAAwBQ,GACtB,OAAOuF,EAAiBC,KAAKxF,K,qBCX/B,IAoEI0E,EApEiB,EAAQ,OAoEVe,CAjEG,CAEpB,IAAQ,IAAM,IAAQ,IAAK,IAAQ,IAAK,IAAQ,IAAK,IAAQ,IAAK,IAAQ,IAC1E,IAAQ,IAAM,IAAQ,IAAK,IAAQ,IAAK,IAAQ,IAAK,IAAQ,IAAK,IAAQ,IAC1E,IAAQ,IAAM,IAAQ,IACtB,IAAQ,IAAM,IAAQ,IACtB,IAAQ,IAAM,IAAQ,IAAK,IAAQ,IAAK,IAAQ,IAChD,IAAQ,IAAM,IAAQ,IAAK,IAAQ,IAAK,IAAQ,IAChD,IAAQ,IAAM,IAAQ,IAAK,IAAQ,IAAK,IAAQ,IAChD,IAAQ,IAAM,IAAQ,IAAK,IAAQ,IAAK,IAAQ,IAChD,IAAQ,IAAM,IAAQ,IACtB,IAAQ,IAAM,IAAQ,IAAK,IAAQ,IAAK,IAAQ,IAAK,IAAQ,IAAK,IAAQ,IAC1E,IAAQ,IAAM,IAAQ,IAAK,IAAQ,IAAK,IAAQ,IAAK,IAAQ,IAAK,IAAQ,IAC1E,IAAQ,IAAM,IAAQ,IAAK,IAAQ,IAAK,IAAQ,IAChD,IAAQ,IAAM,IAAQ,IAAK,IAAQ,IAAK,IAAQ,IAChD,IAAQ,IAAM,IAAQ,IAAK,IAAQ,IACnC,IAAQ,KAAM,IAAQ,KACtB,IAAQ,KAAM,IAAQ,KACtB,IAAQ,KAER,IAAU,IAAM,IAAU,IAAK,IAAU,IACzC,IAAU,IAAM,IAAU,IAAK,IAAU,IACzC,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IACxD,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IACxD,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IACxD,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IAAK,IAAU,IACvE,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IAAK,IAAU,IACvE,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IACxD,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IACxD,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IACxD,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IAAK,IAAU,IACvE,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IAAK,IAAU,IACvE,IAAU,IAAM,IAAU,IAC1B,IAAU,IAAM,IAAU,IAAK,IAAU,IACzC,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IAAK,IAAU,IACvE,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IAAK,IAAU,IACvE,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IACxD,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IACxD,IAAU,IAAM,IAAU,IAAK,IAAU,IACzC,IAAU,IAAM,IAAU,IAAK,IAAU,IACzC,IAAU,IAAM,IAAU,IAAK,IAAU,IACzC,IAAU,IAAM,IAAU,IAAK,IAAU,IACzC,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IACxD,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IACxD,IAAU,IAAM,IAAU,IAAK,IAAU,IACzC,IAAU,IAAM,IAAU,IAAK,IAAU,IACzC,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IAAK,IAAU,IAAK,IAAU,IACtF,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IAAK,IAAU,IAAK,IAAU,IACtF,IAAU,IAAM,IAAU,IAC1B,IAAU,IAAM,IAAU,IAAK,IAAU,IACzC,IAAU,IAAM,IAAU,IAAK,IAAU,IACzC,IAAU,IAAM,IAAU,IAAK,IAAU,IACzC,IAAU,KAAM,IAAU,KAC1B,IAAU,KAAM,IAAU,KAC1B,IAAU,KAAM,IAAU,MAa5BlG,EAAOC,QAAUkF,G,qBCtEjB,IAAIgB,EAAc,EAAQ,QACtBC,EAAS,EAAQ,QACjBC,EAAQ,EAAQ,QAMhBC,EAASvE,OAHA,OAGe,KAe5B/B,EAAOC,QANP,SAA0BsG,GACxB,OAAO,SAAS9F,GACd,OAAO0F,EAAYE,EAAMD,EAAO3F,GAAQ6E,QAAQgB,EAAQ,KAAMC,EAAU,O,4IChB/DC,EAAkBvE,IAAOC,IAAV,qFAAGD,CAAH,+BAIfwE,EAAcxE,IAAOC,IAAV,iFAAGD,CAAH,0RAmBXyE,EAAczE,IAAOC,IAAV,iFAAGD,CAAH,0BAIX0E,EAAW1E,IAAOC,IAAV,8EAAGD,CAAH,klBAOVK,YAAS,mBAAoB,YAwB3BsE,EAAc3E,IAAOC,IAAV,iFAAGD,CAAH,+BAIX4E,EAAY5E,IAAOI,GAAV,+EAAGJ,CAAH,6WAGXK,YAAS,mBAAoB,WAI3BA,YAAS,mBAAoB,YAe7BwE,EAAe7E,IAAOC,IAAV,kFAAGD,CAAH,geA0BZ8E,EAAU9E,IAAO+E,EAAV,6EAAG/E,CAAH,kKACLK,YAAS,cAAe,MAC5BA,YAAS,YAAa,YASpBc,EAAWnB,IAAOC,IAAV,8EAAGD,CAAH,+SAWRK,YAAS,UAAW,YC1G3B2E,EAAmD,SAAC,GAYpD,IAXJC,EAWI,EAXJA,MACA3C,EAUI,EAVJA,MACAC,EASI,EATJA,YACAM,EAQI,EARJA,IACAE,EAOI,EAPJA,KACAmC,EAMI,EANJA,SACAlC,EAKI,EALJA,KACAmC,EAII,EAJJA,UACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,cACGpE,EACC,sHAEEqE,EAAgB,CAAC,aAOvB,OAJIH,GACFG,EAAcC,KAAKJ,GAInB,gBAACZ,EAAD,eAAiBY,UAAWG,EAAc3F,KAAK,MAAUsB,GAC7C,MAATgE,EAAgB,KACf,gBAACT,EAAD,CAAaW,UAAU,gBACrB,gBAAC,OAAD,CAAMK,GAAI3C,GACO,UAAduC,EACC,gBAAC,IAAD,CACEK,MAAOR,EACPS,IAAI,eACJC,gBAAiBN,IAGnB,gBAAC,IAAD,CACEO,MAAOX,EACPS,IAAI,eACJC,gBAAiBN,KAItBH,GACC,gBAACL,EAAD,CACEgB,wBAAyB,CACvBC,OAAQZ,EAASa,MAEnBZ,UAAU,mBAMlB,gBAACV,EAAD,CAAaU,UAAU,gBACpBpC,GACC,gBAAC2B,EAAD,CACEmB,wBAAyB,CACvBC,OAAQ/C,GAEVoC,UAAU,cAId,gBAACR,EAAD,CAAaQ,UAAU,gBACrB,gBAACP,EAAD,CAAWO,UAAU,cACnB,gBAAC,OAAD,CAAMK,GAAI3C,GAAMP,IAEjBC,GACC,gBAACuC,EAAD,CACEe,wBAAyB,CACvBC,OAAQvD,GAEV4C,UAAU,YAIL,MAARnC,EAAe,KACd,gBAAC7B,EAAD,CAAUgE,UAAU,aACjBnC,EAAKR,KAAI,SAACN,EAAaL,GAAd,OACR,gBAAC,OAAD,CAAM3D,IAAK2D,EAAO2D,GAAE,SAAW,IAAYtD,GAAvB,KAApB,IACOA,WAWvB8C,EAASgB,aAAe,CACtBZ,UAAW,SAGEJ,O,qBC1Hf,IAAIiB,EAAS,EAAQ,QACjBC,EAAW,EAAQ,QACnBC,EAAU,EAAQ,QAClBC,EAAW,EAAQ,QAMnBC,EAAcJ,EAASA,EAAOK,eAAYnI,EAC1CoI,EAAiBF,EAAcA,EAAY/H,cAAWH,EA0B1DJ,EAAOC,QAhBP,SAAS4F,EAAaC,GAEpB,GAAoB,iBAATA,EACT,OAAOA,EAET,GAAIsC,EAAQtC,GAEV,OAAOqC,EAASrC,EAAOD,GAAgB,GAEzC,GAAIwC,EAASvC,GACX,OAAO0C,EAAiBA,EAAeC,KAAK3C,GAAS,GAEvD,IAAIlC,EAAUkC,EAAQ,GACtB,MAAkB,KAAVlC,GAAkB,EAAIkC,IA3BjB,IA2BwC,KAAOlC","file":"component---src-templates-tags-tsx-0fb50f2cf332d48ba661.js","sourcesContent":["/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = basePropertyOf;\n","var asciiWords = require('./_asciiWords'),\n    hasUnicodeWord = require('./_hasUnicodeWord'),\n    toString = require('./toString'),\n    unicodeWords = require('./_unicodeWords');\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = words;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = '\\\\u2000-\\\\u206f',\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\",\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n    rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;\n\n/** Used to match complex or compound words. */\nvar reUnicodeWord = RegExp([\n  rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n  rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n  rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n  rsUpper + '+' + rsOptContrUpper,\n  rsOrdUpper,\n  rsOrdLower,\n  rsDigits,\n  rsEmoji\n].join('|'), 'g');\n\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\nmodule.exports = unicodeWords;\n","import styled, { keyframes} from \"styled-components\"\nimport { themeGet } from \"styled-system\"\n\nexport const BlogPostsWrapper = styled.div`\n  margin: 0 auto;\n  padding-top: 120px;\n  position: relative;\n\n  @media (min-width: 990px) {\n    width: 900px;\n  }\n  @media (min-width: 1200px) {\n    width: 1050px;\n  }\n  @media (min-width: 1400px) {\n    width: 1170px;\n  }\n  @media (max-width: 990px) {\n    padding: 80px 45px 0 45px;\n  }\n  @media (max-width: 575px) {\n    padding: 60px 25px 0 25px;\n  }\n\n  .post_card {\n    margin-bottom: 120px;\n    @media (max-width: 990px) {\n      margin-bottom: 90px;\n    }\n    @media (max-width: 575px) {\n      margin-bottom: 60px;\n    }\n  }\n`\n\nexport const RelatedPostWrapper = styled.div`\n  margin: 0 auto;\n  @media (min-width: 990px) {\n    width: 900px;\n  }\n  @media (min-width: 1200px) {\n    width: 1050px;\n  }\n  @media (min-width: 1400px) {\n    width: 1170px;\n  }\n  @media (max-width: 990px) {\n    padding: 80px 45px 0 45px;\n  }\n  @media (max-width: 575px) {\n    padding: 60px 25px 0 25px;\n  }\n`\n\nexport const RelatedPostTitle = styled.h2`\n  color: ${themeGet(\"colors.textColor\", \"#292929\")};\n  font-size: 16px;\n  font-weight: 500;\n  font-family: ${themeGet(\"fontFamily.0\", \"'Fira Sans',sans-serif\")};\n  letter-spacing: 0.17em;\n  position: relative;\n  margin-bottom: 30px;\n\n  &:after {\n    content: \"\";\n    width: 68px;\n    height: 1px;\n    background: #292929;\n    display: block;\n    margin-top: 8px;\n  }\n`\n\nexport const RelatedPostItems = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 -15px;\n`\n\nexport const RelatedPostItem = styled.div`\n  flex: 0 0 33.333333333%;\n  max-width: 33.333333333%;\n  padding: 0 15px;\n  @media (max-width: 575px) {\n    flex: 0 0 100%;\n    max-width: 100%;\n    &:nth-child(n + 2) {\n      margin-top: 50px;\n    }\n  }\n  .post_card {\n    &:hover {\n      .post_preview {\n        a {\n          transform: scale(1.05);\n        }\n      }\n    }\n\n    .post_preview {\n      margin-bottom: 16px;\n      overflow: hidden;\n      a {\n        display: block;\n        transition: 0.25s ease-in-out;\n      }\n      &:before {\n        filter: blur(10px);\n      }\n    }\n    .post_title {\n      font-size: 21px;\n      a {\n        display: block;\n        white-space: nowrap;\n        width: 100%;\n        overflow: hidden;\n        text-overflow: ellipsis;\n      }\n\n      @media (max-width: 1400px) {\n        font-size: 19px;\n      }\n      @media (max-width: 1200px) {\n        font-size: 17px;\n      }\n      @media (max-width: 990px) {\n        font-size: 15px;\n      }\n    }\n    .post_content {\n      max-width: 100%;\n    }\n\n    .post_tags {\n      margin-top: 20px;\n      a {\n        @media (max-width: 990px) {\n          font-size: 12px;\n          margin-right: 15px;\n        }\n      }\n    }\n  }\n`\nexport const TagPostsWrapper = styled.div`\n  margin: 0 auto;\n  padding-top: 80px;\n  position: relative;\n  @media (min-width: 990px) {\n    width: 900px;\n  }\n  @media (min-width: 1200px) {\n    width: 1050px;\n  }\n  @media (min-width: 1400px) {\n    width: 1170px;\n  }\n  @media (max-width: 990px) {\n    padding: 80px 45px 30px 45px;\n  }\n  @media (max-width: 575px) {\n    padding: 60px 25px 0 25px;\n  }\n\n  .post_card {\n    margin-bottom: 120px;\n    &:last-child {\n      margin-bottom: 0;\n    }\n    @media (max-width: 990px) {\n      margin-bottom: 80px;\n    }\n    @media (max-width: 575px) {\n      margin-bottom: 60px;\n    }\n  }\n`\nexport const TagPageHeading = styled.div`\n  padding-left: 210px;\n  font-size: 15px;\n  font-weight: 400;\n  margin-bottom: 120px;\n  position: relative;\n  @media (max-width: 1200px) {\n    padding-left: 160px;\n  }\n  @media (max-width: 990px) {\n    padding-left: 0;\n    font-size: 13px;\n    margin-bottom: 80px;\n  }\n  @media (max-width: 575px) {\n    margin-bottom: 60px;\n  }\n\n  &:after {\n    content: \"\";\n    display: block;\n    width: 90px;\n    height: 1px;\n    background: #292929;\n    margin-top: 15px;\n  }\n`\n\nexport const TagName = styled.h1`\n  font-size: 30px;\n  font-weight: 700;\n  color: ${themeGet(\"colors.primary\", \"#D10068\")};\n  margin-bottom: 8px;\n  @media (max-width: 990px) {\n    font-size: 26px;\n  }\n  @media (max-width: 575px) {\n    font-size: 22px;\n  }\n`\nexport const BlogPostFooter = styled.div`\n  margin: 0 auto;\n  width: 870px;\n  max-width: 100%;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  @media (max-width: 990px) {\n    padding-top: 40px;\n  }\n`\n\nexport const BlogPostComment = styled.div`\n  margin: 0 auto;\n  width: 870px;\n  max-width: 100%;\n  padding-top: 80px;\n  @media (max-width: 990px) {\n    padding-top: 60px;\n  }\n`\n\nexport const PostShare = styled.div`\n  display: flex;\n  align-items: center;\n  > span {\n    flex-shrink: 0;\n  }\n  > div,\n  .SocialMediaShareButton {\n    cursor: pointer;\n    margin-left: 25px;\n    font-size: 22px;\n    outline: 0;\n    color: ${themeGet(\"colors.textColor\", \"#292929\")};\n    transition: 0.15s ease-in-out;\n    @media (max-width: 767px) {\n      font-size: 18px;\n      margin-left: 20px;\n    }\n    &:hover {\n      color: ${themeGet(\"colors.primary\", \"#D10068\")};\n    }\n    svg {\n      display: block;\n    }\n  }\n`\nexport const BlogPostDetailsWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 auto;\n  padding: 90px 0 120px 0;\n  @media (min-width: 990px) {\n    width: 900px;\n  }\n  @media (min-width: 1100px) {\n    width: 1050px;\n  }\n  @media (min-width: 1250px) {\n    width: 1170px;\n  }\n  @media (max-width: 990px) {\n    padding: 80px 45px 0 45px;\n  }\n  @media (max-width: 575px) {\n    padding: 60px 25px 0 25px;\n  }\n`\n\nexport const BlogDetailsContent = styled.div`\n  ${props => props.extendedBlogPost ? \n    `flex: 0 0 calc(100%);\n    max-width: calc(100%);\n    padding-right: 60px;\n\n    @media (max-width: 1249px) {\n      padding-right: 50px;\n    }\n    @media (max-width: 1100px) {\n      padding-right: 40px;\n    }\n\n    @media (max-width: 990px) {\n      padding-right: 30px;\n    }\n\n    @media (max-width: 767px) {\n      flex: 0 0 100%;\n      max-width: 100%;\n      padding-right: 0;\n    }` \n    : \n    `flex: 0 0 calc(100% - 360px);\n    max-width: calc(100% - 360px);\n    padding-right: 60px;\n\n    @media (max-width: 1249px) {\n      flex: 0 0 calc(100% - 320px);\n      max-width: calc(100% - 320px);\n      padding-right: 50px;\n    }\n    @media (max-width: 1100px) {\n      flex: 0 0 calc(100% - 280px);\n      max-width: calc(100% - 280px);\n      padding-right: 40px;\n    }\n\n    @media (max-width: 990px) {\n      flex: 0 0 calc(100% - 220px);\n      max-width: calc(100% - 220px);\n      padding-right: 30px;\n    }\n\n    @media (max-width: 767px) {\n      flex: 0 0 100%;\n      max-width: 100%;\n      padding-right: 0;\n    }`\n    }\n`\n\nexport const PostTags = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  @media (max-width: 575px) {\n    display: none;\n  }\n\n  a {\n    display: block;\n    margin-right: 30px;\n    font-size: 14px;\n    font-weight: 400;\n    color: ${themeGet(\"primary\", \"#D10068\")};\n    @media (max-width: 990px) {\n      font-size: 13px;\n      margin-right: 25px;\n    }\n  }\n`\n\nexport const PostRow = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 -20px;\n  margin-bottom: 60px;\n  @media (max-width: 990px) {\n    margin-bottom: 40px;\n  }\n  @media (max-width: 575px) {\n    margin-bottom: 30px;\n  }\n`\n\nexport const PostGrid = styled.div`\n  flex: 0 0 50%;\n  max-width: 50%;\n  padding: 0 20px;\n  margin-bottom: 90px;\n  @media (max-width: 990px) {\n    margin-bottom: 70px;\n  }\n  @media (max-width: 767px) {\n    flex: 0 0 100%;\n    max-width: 100%;\n  }\n  @media (max-width: 575px) {\n    margin-bottom: 50px;\n  }\n`\n\nconst blinkingText = keyframes`\n  0%{     color: #000;    }\n  49%{    color: #000; }\n  60%{    color: transparent; }\n  99%{    color:transparent;  }\n  100%{   color: #000;    }\n`\nexport const BlinkingToDo = styled.h1`\n  animation: ${blinkingText} 1.2s infinite;\n`","var createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\nmodule.exports = kebabCase;\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"~/components/layout\"\nimport PostCard from \"~/components/PostCard/postCard\"\nimport SEO from \"~/components/seo\"\nimport { TagPostsWrapper, TagPageHeading, TagName } from \"./templates.style\"\n\nconst Tags = ({ pageContext, data }: any) => {\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allMdx\n\n  return (\n    <Layout>\n      <SEO title={tag} description={`A collection of ${totalCount} post`} />\n\n      <TagPostsWrapper>\n        <TagPageHeading>\n          <TagName>{tag}</TagName>\n          {`A collection of ${totalCount} post`}\n        </TagPageHeading>\n        {edges.map(({ node, index }: any) => (\n          <PostCard\n            key={node.fields.slug}\n            title={node.frontmatter.title}\n            url={node.fields.slug}\n            description={node.frontmatter.description || node.excerpt}\n            date={node.frontmatter.date}\n            tags={node.frontmatter.tags}\n          />\n        ))}\n      </TagPostsWrapper>\n    </Layout>\n  )\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMdx(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { \n        frontmatter: { \n          tags: { in: [$tag] } \n          published: {eq: true}\n        } \n      }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt(pruneLength: 300)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD [<span>] MMM YYYY [</span>]\")\n            title\n            tags\n            description\n          }\n        }\n      }\n    }\n  }\n`\n","var deburrLetter = require('./_deburrLetter'),\n    toString = require('./toString');\n\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n/** Used to compose unicode character classes. */\nvar rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;\n\n/** Used to compose unicode capture groups. */\nvar rsCombo = '[' + rsComboRange + ']';\n\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\nvar reComboMark = RegExp(rsCombo, 'g');\n\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\nmodule.exports = deburr;\n","/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;\n","/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\nmodule.exports = asciiWords;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\nmodule.exports = hasUnicodeWord;\n","var basePropertyOf = require('./_basePropertyOf');\n\n/** Used to map Latin Unicode letters to basic Latin letters. */\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n  '\\xc7': 'C',  '\\xe7': 'c',\n  '\\xd0': 'D',  '\\xf0': 'd',\n  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n  '\\xd1': 'N',  '\\xf1': 'n',\n  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n  '\\xc6': 'Ae', '\\xe6': 'ae',\n  '\\xde': 'Th', '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n  '\\u0134': 'J',  '\\u0135': 'j',\n  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n  '\\u0174': 'W',  '\\u0175': 'w',\n  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n  '\\u0132': 'IJ', '\\u0133': 'ij',\n  '\\u0152': 'Oe', '\\u0153': 'oe',\n  '\\u0149': \"'n\", '\\u017f': 's'\n};\n\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\nvar deburrLetter = basePropertyOf(deburredLetters);\n\nmodule.exports = deburrLetter;\n","var arrayReduce = require('./_arrayReduce'),\n    deburr = require('./deburr'),\n    words = require('./words');\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\";\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\nmodule.exports = createCompounder;\n","import styled from 'styled-components';\nimport { themeGet } from 'styled-system';\n\nexport const PostCardWrapper = styled.div`\n  position: relative;\n`;\n\nexport const PostPreview = styled.div`\n  margin-bottom: 45px;\n  position: relative;\n  img {\n    border-radius: 3px;\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    width: 80%;\n    height: 80%;\n    background-color: #757575;\n    bottom: 0;\n    left: 10%;\n    filter: blur(15px);\n  }\n`;\n\nexport const PostDetails = styled.div`\n  display: flex;\n`;\n\nexport const PostDate = styled.div`\n  font-size: 90px;\n  font-weight: 700;\n  text-align: center;\n  padding: 30px 35px 15px 35px;\n  margin-right: 20px;\n  line-height: 1;\n  color: ${themeGet('colors.textColor', '#292929')};\n  @media (max-width: 1200px) {\n    font-size: 70px;\n    padding: 25px 25px 15px 25px;\n    margin-right: 35px;\n  }\n  @media (max-width: 990px) {\n    font-size: 56px;\n    padding: 20px 20px 15px 20px;\n    margin-right: 25px;\n  }\n  @media (max-width: 575px) {\n    display: none;\n  }\n\n  > span {\n    font-size: 13px;\n    font-weight: 400;\n    display: block;\n    margin-top: 12px;\n    text-transform: uppercase;\n  }\n`;\n\nexport const PostContent = styled.div`\n  align-self: center;\n`;\n\nexport const PostTitle = styled.h2`\n  font-size: 30px;\n  font-weight: 700;\n  color: ${themeGet('colors.textColor', '#292929')};\n  line-height: 1.53;\n  margin-bottom: 10px;\n  a {\n    color: ${themeGet('colors.textColor', '#292929')};\n  }\n  @media (max-width: 1200px) {\n    font-size: 26px;\n  }\n  @media (max-width: 990px) {\n    font-size: 21px;\n    margin-bottom: 12px;\n  }\n  @media (max-width: 575px) {\n    font-size: 20px;\n    margin-bottom: 10px;\n  }\n`;\n\nexport const PostCategory = styled.div`\n  position: absolute;\n  width: 200px;\n  height: 30px;\n  top: 20px;\n  left: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  border-radius: 6px;\n  font-size: 16px;\n  font-weight: bold;\n  line-height: 1;\n  pointer-events: none;\n  z-index: 1;\n  background-color: rgba(0, 0, 0, 0.6);\n  > span {\n    font-size: 13px;\n    font-weight: normal;\n    line-height: 1;\n    margin-top: 3px;\n  }\n`\n\nexport const Excerpt = styled.p`\n  font-size: ${themeGet('fontSizes.3', '15')}px;\n  color: ${themeGet('textColor', '#292929')};\n  font-weight: 400;\n  line-height: 2;\n  margin-bottom: 0;\n  @media (max-width: 990px) {\n    font-size: 14px;\n  }\n`;\n\nexport const PostTags = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  margin-top: 15px;\n\n  a {\n    display: block;\n    margin-right: 30px;\n    font-size: 14px;\n    font-weight: 400;\n    color: ${themeGet('primary', '#D10068')};\n    @media (max-width: 990px) {\n      font-size: 13px;\n      margin-right: 25px;\n    }\n  }\n`;\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport _ from \"lodash\"\nimport Img from \"gatsby-image\"\nimport {\n  PostCardWrapper,\n  PostPreview,\n  PostDetails,\n  PostDate,\n  PostTitle,\n  PostCategory,\n  Excerpt,\n  PostContent,\n  PostTags,\n} from \"./postCard.style\"\n\ninterface PostCardProps {\n  image?: any\n  title: string\n  description?: string\n  url: string\n  date?: string\n  category: any\n  tags?: []\n  className?: string\n  imageType?: \"fixed\" | \"fluid\"\n  placeholderBG?: string\n}\n\nconst PostCard: React.FunctionComponent<PostCardProps> = ({\n  image,\n  title,\n  description,\n  url,\n  date,\n  category,\n  tags,\n  className,\n  imageType,\n  placeholderBG,\n  ...props\n}) => {\n  // Add all classs to an array\n  const addAllClasses = [\"post_card\"]\n\n  // className prop checking\n  if (className) {\n    addAllClasses.push(className)\n  }\n\n  return (\n    <PostCardWrapper className={addAllClasses.join(\" \")} {...props}>\n      {image == null ? null : (\n        <PostPreview className=\"post_preview\">\n          <Link to={url}>\n            {imageType === \"fluid\" ? (\n              <Img\n                fluid={image}\n                alt=\"post preview\"\n                backgroundColor={placeholderBG}\n              />\n            ) : (\n              <Img\n                fixed={image}\n                alt=\"post preview\"\n                backgroundColor={placeholderBG}\n              />\n            )}\n          </Link>\n          {category && (\n            <PostCategory\n              dangerouslySetInnerHTML={{\n                __html: category.name,\n              }}\n              className=\"post_category\"\n            />\n          )}\n        </PostPreview>\n      )}\n\n      <PostDetails className=\"post_details\">\n        {date && (\n          <PostDate\n            dangerouslySetInnerHTML={{\n              __html: date,\n            }}\n            className=\"post_date\"\n          />\n        )}\n\n        <PostContent className=\"post_content\">\n          <PostTitle className=\"post_title\">\n            <Link to={url}>{title}</Link>\n          </PostTitle>\n          {description && (\n            <Excerpt\n              dangerouslySetInnerHTML={{\n                __html: description,\n              }}\n              className=\"excerpt\"\n            />\n          )}\n\n          {tags == null ? null : (\n            <PostTags className=\"post_tags\">\n              {tags.map((tag: string, index: number) => (\n                <Link key={index} to={`/tags/${_.kebabCase(tag)}/`}>\n                  {`#${tag}`}\n                </Link>\n              ))}\n            </PostTags>\n          )}\n        </PostContent>\n      </PostDetails>\n    </PostCardWrapper>\n  )\n}\n\nPostCard.defaultProps = {\n  imageType: \"fluid\",\n}\n\nexport default PostCard\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n"],"sourceRoot":""}