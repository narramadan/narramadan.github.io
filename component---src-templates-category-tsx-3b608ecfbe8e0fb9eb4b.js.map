{"version":3,"file":"component---src-templates-category-tsx-3b608ecfbe8e0fb9eb4b.js","mappings":"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","sources":["webpack://2much2learn.com/./src/components/PostCard/postCard.style.tsx","webpack://2much2learn.com/./src/components/PostCard/postCard.tsx","webpack://2much2learn.com/./src/templates/category.tsx","webpack://2much2learn.com/./src/templates/templates.style.tsx"],"sourcesContent":["import styled from 'styled-components';\r\nimport { themeGet } from '@styled-system/theme-get';\r\n\r\nexport const PostCardWrapper = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nexport const PostPreview = styled.div`\r\n  margin-bottom: 45px;\r\n  position: relative;\r\n  img {\r\n    border-radius: 3px;\r\n  }\r\n\r\n  &:before {\r\n    content: '';\r\n    position: absolute;\r\n    width: 80%;\r\n    height: 80%;\r\n    background-color: #757575;\r\n    bottom: 0;\r\n    left: 10%;\r\n    filter: blur(15px);\r\n  }\r\n`;\r\n\r\nexport const PostDetails = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const PostDate = styled.div`\r\n  font-size: 90px;\r\n  font-weight: 700;\r\n  text-align: center;\r\n  padding: 30px 35px 15px 35px;\r\n  margin-right: 20px;\r\n  line-height: 1;\r\n  color: ${themeGet('colors.textColor', '#292929')};\r\n  @media (max-width: 1200px) {\r\n    font-size: 70px;\r\n    padding: 25px 25px 15px 25px;\r\n    margin-right: 35px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    font-size: 56px;\r\n    padding: 20px 20px 15px 20px;\r\n    margin-right: 25px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    display: none;\r\n  }\r\n\r\n  > span {\r\n    font-size: 13px;\r\n    font-weight: 400;\r\n    display: block;\r\n    margin-top: 12px;\r\n    text-transform: uppercase;\r\n  }\r\n`;\r\n\r\nexport const PostContent = styled.div`\r\n  align-self: center;\r\n`;\r\n\r\nexport const PostTitle = styled.h2`\r\n  font-size: 30px;\r\n  font-weight: 700;\r\n  color: ${themeGet('colors.textColor', '#292929')};\r\n  line-height: 1.53;\r\n  margin-bottom: 10px;\r\n  a {\r\n    color: ${themeGet('colors.textColor', '#292929')};\r\n  }\r\n  @media (max-width: 1200px) {\r\n    font-size: 26px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    font-size: 21px;\r\n    margin-bottom: 12px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    font-size: 20px;\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n\r\nexport const PostCategory = styled.div`\r\n  position: absolute;\r\n  width: 200px;\r\n  height: 30px;\r\n  top: 20px;\r\n  left: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #fff;\r\n  border-radius: 6px;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  line-height: 1;\r\n  pointer-events: none;\r\n  z-index: 1;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  > span {\r\n    font-size: 13px;\r\n    font-weight: normal;\r\n    line-height: 1;\r\n    margin-top: 3px;\r\n  }\r\n`\r\n\r\nexport const Excerpt = styled.p`\r\n  font-size: ${themeGet('fontSizes.3', '15')}px;\r\n  color: ${themeGet('textColor', '#292929')};\r\n  font-weight: 400;\r\n  line-height: 2;\r\n  margin-bottom: 0;\r\n  @media (max-width: 990px) {\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nexport const PostTags = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  margin-top: 15px;\r\n\r\n  a {\r\n    display: block;\r\n    margin-right: 30px;\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n    color: ${themeGet('primary', '#D10068')};\r\n    @media (max-width: 990px) {\r\n      font-size: 13px;\r\n      margin-right: 25px;\r\n    }\r\n  }\r\n`;\r\n","import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport _ from \"lodash\"\r\nimport { GatsbyImage } from \"gatsby-plugin-image\"\r\nimport {\r\n  PostCardWrapper,\r\n  PostPreview,\r\n  PostDetails,\r\n  PostDate,\r\n  PostTitle,\r\n  PostCategory,\r\n  Excerpt,\r\n  PostContent,\r\n  PostTags,\r\n} from \"./postCard.style\"\r\n\r\ninterface PostCardProps {\r\n  image?: any\r\n  title: string\r\n  description?: string\r\n  url: string\r\n  date?: string\r\n  category: any\r\n  tags?: []\r\n  className?: string\r\n  imageType?: \"fixed\" | \"fluid\"\r\n  placeholderBG?: string\r\n}\r\n\r\nconst PostCard: React.FunctionComponent<PostCardProps> = ({\r\n  image,\r\n  title,\r\n  description,\r\n  url,\r\n  date,\r\n  category,\r\n  tags,\r\n  className,\r\n  imageType,\r\n  placeholderBG,\r\n  ...props\r\n}) => {\r\n  // Add all classs to an array\r\n  const addAllClasses = [\"post_card\"]\r\n\r\n  // className prop checking\r\n  if (className) {\r\n    addAllClasses.push(className)\r\n  }\r\n\r\n  return (\r\n    <PostCardWrapper className={addAllClasses.join(\" \")} {...props}>\r\n      {image == null ? null : (\r\n        <PostPreview className=\"post_preview\">\r\n          <Link to={url}>            \r\n              <GatsbyImage\r\n                image={image}\r\n                alt=\"post preview\"\r\n                backgroundColor={placeholderBG}\r\n              />\r\n            \r\n          </Link>\r\n          {category && (\r\n            <PostCategory\r\n              dangerouslySetInnerHTML={{\r\n                __html: category.name,\r\n              }}\r\n              className=\"post_category\"\r\n            />\r\n          )}\r\n        </PostPreview>\r\n      )}\r\n\r\n      <PostDetails className=\"post_details\">\r\n        {date && (\r\n          <PostDate\r\n            dangerouslySetInnerHTML={{\r\n              __html: date,\r\n            }}\r\n            className=\"post_date\"\r\n          />\r\n        )}\r\n\r\n        <PostContent className=\"post_content\">\r\n          <PostTitle className=\"post_title\">\r\n            <Link to={url}>{title}</Link>\r\n          </PostTitle>\r\n          {description && (\r\n            <Excerpt\r\n              dangerouslySetInnerHTML={{\r\n                __html: description,\r\n              }}\r\n              className=\"excerpt\"\r\n            />\r\n          )}\r\n\r\n          {tags == null ? null : (\r\n            <PostTags className=\"post_tags\">\r\n              {tags.map((tag: string, index: number) => (\r\n                <Link key={index} to={`/tags/${_.kebabCase(tag)}/`}>\r\n                  {`#${tag}`}\r\n                </Link>\r\n              ))}\r\n            </PostTags>\r\n          )}\r\n        </PostContent>\r\n      </PostDetails>\r\n    </PostCardWrapper>\r\n  )\r\n}\r\n\r\nPostCard.defaultProps = {\r\n  imageType: \"fluid\",\r\n}\r\n\r\nexport default PostCard\r\n","import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport Layout from \"~/components/layout\"\r\nimport PostCard from \"~/components/PostCard/postCard\"\r\nimport SEO from \"~/components/seo\"\r\nimport { TagPostsWrapper, TagPageHeading, TagName } from \"./templates.style\"\r\nimport _ from 'lodash'\r\nimport Categories from '~/utils/CategoryConstants'\r\n\r\nconst Category = ({ pageContext, data }: any) => {\r\n  const { category } = pageContext\r\n  const { edges, totalCount } = data.allMdx\r\n  const categoryInfo =  _.get(Categories, category)\r\n  return (\r\n    <Layout>\r\n      <SEO title={categoryInfo.name} description={`A collection of ${totalCount} post`} />\r\n\r\n      <TagPostsWrapper>\r\n        <TagPageHeading>\r\n          <TagName>{categoryInfo.name}</TagName>\r\n          {`A collection of ${totalCount} post`}\r\n        </TagPageHeading>\r\n        {edges.map(({ node, index }: any) => (\r\n          <PostCard\r\n            key={node.fields.slug}\r\n            title={node.frontmatter.title}\r\n            url={node.fields.slug}\r\n            description={node.frontmatter.description || node.excerpt}\r\n            date={node.frontmatter.date}\r\n            tags={node.frontmatter.tags}\r\n          />\r\n        ))}\r\n      </TagPostsWrapper>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Category\r\n\r\nexport const pageQuery = graphql`\r\n  query($alias: String) {\r\n    allMdx(\r\n      limit: 2000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { \r\n        frontmatter: { \r\n          category: {eq: $alias}\r\n          published: {eq: true}\r\n        } \r\n      }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          excerpt(pruneLength: 300)\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"DD [<span>] MMM YYYY [</span>]\")\r\n            title\r\n            category\r\n            tags\r\n            description\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import styled, { keyframes} from \"styled-components\"\r\nimport { themeGet } from '@styled-system/theme-get';\r\n\r\nexport const BlogPostsWrapper = styled.div`\r\n  margin: 0 auto;\r\n  padding-top: 120px;\r\n  position: relative;\r\n\r\n  @media (min-width: 990px) {\r\n    width: 900px;\r\n  }\r\n  @media (min-width: 1200px) {\r\n    width: 1050px;\r\n  }\r\n  @media (min-width: 1400px) {\r\n    width: 1170px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    padding: 80px 45px 0 45px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    padding: 60px 25px 0 25px;\r\n  }\r\n\r\n  .post_card {\r\n    margin-bottom: 120px;\r\n    @media (max-width: 990px) {\r\n      margin-bottom: 90px;\r\n    }\r\n    @media (max-width: 575px) {\r\n      margin-bottom: 60px;\r\n    }\r\n  }\r\n`\r\n\r\nexport const RelatedPostWrapper = styled.div`\r\n  margin: 0 auto;\r\n  @media (min-width: 990px) {\r\n    width: 900px;\r\n  }\r\n  @media (min-width: 1200px) {\r\n    width: 1050px;\r\n  }\r\n  @media (min-width: 1400px) {\r\n    width: 1170px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    padding: 80px 45px 0 45px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    padding: 60px 25px 0 25px;\r\n  }\r\n`\r\n\r\nexport const RelatedPostTitle = styled.h2`\r\n  color: ${themeGet(\"colors.textColor\", \"#292929\")};\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  font-family: ${themeGet(\"fontFamily.0\", \"'Fira Sans',sans-serif\")};\r\n  letter-spacing: 0.17em;\r\n  position: relative;\r\n  margin-bottom: 30px;\r\n\r\n  &:after {\r\n    content: \"\";\r\n    width: 68px;\r\n    height: 1px;\r\n    background: #292929;\r\n    display: block;\r\n    margin-top: 8px;\r\n  }\r\n`\r\n\r\nexport const RelatedPostItems = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin: 0 -15px;\r\n`\r\n\r\nexport const RelatedPostItem = styled.div`\r\n  flex: 0 0 33.333333333%;\r\n  max-width: 33.333333333%;\r\n  padding: 0 15px;\r\n  @media (max-width: 575px) {\r\n    flex: 0 0 100%;\r\n    max-width: 100%;\r\n    &:nth-child(n + 2) {\r\n      margin-top: 50px;\r\n    }\r\n  }\r\n  .post_card {\r\n    &:hover {\r\n      .post_preview {\r\n        a {\r\n          transform: scale(1.05);\r\n        }\r\n      }\r\n    }\r\n\r\n    .post_preview {\r\n      margin-bottom: 16px;\r\n      overflow: hidden;\r\n      a {\r\n        display: block;\r\n        transition: 0.25s ease-in-out;\r\n      }\r\n      &:before {\r\n        filter: blur(10px);\r\n      }\r\n    }\r\n    .post_title {\r\n      font-size: 21px;\r\n      a {\r\n        display: block;\r\n        white-space: nowrap;\r\n        width: 100%;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n      }\r\n\r\n      @media (max-width: 1400px) {\r\n        font-size: 19px;\r\n      }\r\n      @media (max-width: 1200px) {\r\n        font-size: 17px;\r\n      }\r\n      @media (max-width: 990px) {\r\n        font-size: 15px;\r\n      }\r\n    }\r\n    .post_content {\r\n      max-width: 100%;\r\n    }\r\n\r\n    .post_tags {\r\n      margin-top: 20px;\r\n      a {\r\n        @media (max-width: 990px) {\r\n          font-size: 12px;\r\n          margin-right: 15px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\nexport const TagPostsWrapper = styled.div`\r\n  margin: 0 auto;\r\n  padding-top: 80px;\r\n  position: relative;\r\n  @media (min-width: 990px) {\r\n    width: 900px;\r\n  }\r\n  @media (min-width: 1200px) {\r\n    width: 1050px;\r\n  }\r\n  @media (min-width: 1400px) {\r\n    width: 1170px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    padding: 80px 45px 30px 45px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    padding: 60px 25px 0 25px;\r\n  }\r\n\r\n  .post_card {\r\n    margin-bottom: 120px;\r\n    &:last-child {\r\n      margin-bottom: 0;\r\n    }\r\n    @media (max-width: 990px) {\r\n      margin-bottom: 80px;\r\n    }\r\n    @media (max-width: 575px) {\r\n      margin-bottom: 60px;\r\n    }\r\n  }\r\n`\r\nexport const TagPageHeading = styled.div`\r\n  padding-left: 210px;\r\n  font-size: 15px;\r\n  font-weight: 400;\r\n  margin-bottom: 120px;\r\n  position: relative;\r\n  @media (max-width: 1200px) {\r\n    padding-left: 160px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    padding-left: 0;\r\n    font-size: 13px;\r\n    margin-bottom: 80px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    margin-bottom: 60px;\r\n  }\r\n\r\n  &:after {\r\n    content: \"\";\r\n    display: block;\r\n    width: 90px;\r\n    height: 1px;\r\n    background: #292929;\r\n    margin-top: 15px;\r\n  }\r\n`\r\n\r\nexport const TagName = styled.h1`\r\n  font-size: 30px;\r\n  font-weight: 700;\r\n  color: ${themeGet(\"colors.primary\", \"#D10068\")};\r\n  margin-bottom: 8px;\r\n  @media (max-width: 990px) {\r\n    font-size: 26px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    font-size: 22px;\r\n  }\r\n`\r\nexport const BlogPostFooter = styled.div`\r\n  margin: 0 auto;\r\n  width: 870px;\r\n  max-width: 100%;\r\n  padding-top: 20px;\r\n  padding-bottom: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  @media (max-width: 990px) {\r\n    padding-top: 40px;\r\n  }\r\n`\r\n\r\nexport const BlogPostComment = styled.div`\r\n  margin: 0 auto;\r\n  width: 870px;\r\n  max-width: 100%;\r\n  padding-top: 80px;\r\n  @media (max-width: 990px) {\r\n    padding-top: 60px;\r\n  }\r\n`\r\n\r\nexport const PostShare = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  > span {\r\n    flex-shrink: 0;\r\n  }\r\n  > div,\r\n  .SocialMediaShareButton {\r\n    cursor: pointer;\r\n    margin-left: 25px;\r\n    font-size: 22px;\r\n    outline: 0;\r\n    color: ${themeGet(\"colors.textColor\", \"#292929\")};\r\n    transition: 0.15s ease-in-out;\r\n    @media (max-width: 767px) {\r\n      font-size: 18px;\r\n      margin-left: 20px;\r\n    }\r\n    &:hover {\r\n      color: ${themeGet(\"colors.primary\", \"#D10068\")};\r\n    }\r\n    svg {\r\n      display: block;\r\n    }\r\n  }\r\n`\r\nexport const BlogPostDetailsWrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin: 0 auto;\r\n  padding: 90px 0 120px 0;\r\n  @media (min-width: 990px) {\r\n    width: 900px;\r\n  }\r\n  @media (min-width: 1100px) {\r\n    width: 1050px;\r\n  }\r\n  @media (min-width: 1250px) {\r\n    width: 1170px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    padding: 80px 45px 0 45px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    padding: 60px 25px 0 25px;\r\n  }\r\n`\r\n\r\nexport const BlogDetailsContent = styled.div`\r\n  ${props => props.extendedBlogPost ? \r\n    `flex: 0 0 calc(100%);\r\n    max-width: calc(100%);\r\n    padding-right: 60px;\r\n\r\n    @media (max-width: 1249px) {\r\n      padding-right: 50px;\r\n    }\r\n    @media (max-width: 1100px) {\r\n      padding-right: 40px;\r\n    }\r\n\r\n    @media (max-width: 990px) {\r\n      padding-right: 30px;\r\n    }\r\n\r\n    @media (max-width: 767px) {\r\n      flex: 0 0 100%;\r\n      max-width: 100%;\r\n      padding-right: 0;\r\n    }` \r\n    : \r\n    `flex: 0 0 calc(100% - 360px);\r\n    max-width: calc(100% - 360px);\r\n    padding-right: 60px;\r\n\r\n    @media (max-width: 1249px) {\r\n      flex: 0 0 calc(100% - 320px);\r\n      max-width: calc(100% - 320px);\r\n      padding-right: 50px;\r\n    }\r\n    @media (max-width: 1100px) {\r\n      flex: 0 0 calc(100% - 280px);\r\n      max-width: calc(100% - 280px);\r\n      padding-right: 40px;\r\n    }\r\n\r\n    @media (max-width: 990px) {\r\n      flex: 0 0 calc(100% - 220px);\r\n      max-width: calc(100% - 220px);\r\n      padding-right: 30px;\r\n    }\r\n\r\n    @media (max-width: 767px) {\r\n      flex: 0 0 100%;\r\n      max-width: 100%;\r\n      padding-right: 0;\r\n    }`\r\n    }\r\n`\r\n\r\nexport const PostTags = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  @media (max-width: 575px) {\r\n    display: none;\r\n  }\r\n\r\n  a {\r\n    display: block;\r\n    margin-right: 30px;\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n    color: ${themeGet(\"primary\", \"#D10068\")};\r\n    @media (max-width: 990px) {\r\n      font-size: 13px;\r\n      margin-right: 25px;\r\n    }\r\n  }\r\n`\r\n\r\nexport const PostRow = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin: 0 -20px;\r\n  margin-bottom: 60px;\r\n  @media (max-width: 990px) {\r\n    margin-bottom: 40px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    margin-bottom: 30px;\r\n  }\r\n`\r\n\r\nexport const PostGrid = styled.div`\r\n  flex: 0 0 50%;\r\n  max-width: 50%;\r\n  padding: 0 20px;\r\n  margin-bottom: 90px;\r\n  @media (max-width: 990px) {\r\n    margin-bottom: 70px;\r\n  }\r\n  @media (max-width: 767px) {\r\n    flex: 0 0 100%;\r\n    max-width: 100%;\r\n  }\r\n  @media (max-width: 575px) {\r\n    margin-bottom: 50px;\r\n  }\r\n`\r\n\r\nconst blinkingText = keyframes`\r\n  0%{     color: #000;    }\r\n  49%{    color: #000; }\r\n  60%{    color: transparent; }\r\n  99%{    color:transparent;  }\r\n  100%{   color: #000;    }\r\n`\r\nexport const BlinkingToDo = styled.h1`\r\n  animation: ${blinkingText} 1.2s infinite;\r\n`"],"names":["PostCardWrapper","styled","PostPreview","PostDetails","PostDate","themeGet","PostContent","PostTitle","PostCategory","Excerpt","PostTags","PostCard","image","title","description","url","date","category","tags","className","placeholderBG","imageType","props","addAllClasses","push","join","Link","to","G","alt","backgroundColor","dangerouslySetInnerHTML","__html","name","map","tag","index","key","defaultProps","pageContext","data","allMdx","edges","totalCount","categoryInfo","Categories","node","fields","slug","frontmatter","excerpt","BlogPostsWrapper","RelatedPostWrapper","RelatedPostTitle","RelatedPostItems","RelatedPostItem","TagPostsWrapper","TagPageHeading","TagName","BlogPostFooter","BlogPostComment","PostShare","BlogPostDetailsWrapper","BlogDetailsContent","extendedBlogPost","PostRow","PostGrid","blinkingText","keyframes","BlinkingToDo"],"sourceRoot":""}